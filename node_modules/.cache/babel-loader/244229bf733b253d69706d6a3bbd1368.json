{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst initState = {\n  filters: {\n    minScore: 315,\n    level: 20,\n    arrange: 0\n  }\n};\nconst baseUrl = 'https://market-api.radiocaca.com/';\n\nconst createRequest = url => ({\n  url\n});\n\nconst marketplaceAPI = createApi({\n  reducerPath: 'marketplaceAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getNFTs: builder.query({\n      query: cateId => createRequest(``)\n    })\n  })\n});\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'handleFilters':\n      return { ...state,\n        filters: { ...state.filters,\n          minScore: action.payload.minScore,\n          level: action.payload.level\n        }\n      };\n\n    case 'handleArrange':\n      return { ...state,\n        filters: { ...state.filters,\n          arrange: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/minhd/Desktop/marketplaceraca/src/app/reducer.js"],"names":["createApi","fetchBaseQuery","initState","filters","minScore","level","arrange","baseUrl","createRequest","url","marketplaceAPI","reducerPath","baseQuery","endpoints","builder","getNFTs","query","cateId","rootReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AADK,CAAlB;AASA,MAAMC,OAAO,GAAG,mCAAhB;;AACA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA;AAAF,CAAV,CAAtB;;AACA,MAAMC,cAAc,GAAGV,SAAS,CAAC;AAC7BW,EAAAA,WAAW,EAAE,gBADgB;AAE7BC,EAAAA,SAAS,EAAEX,cAAc,CAAC;AAAEM,IAAAA;AAAF,GAAD,CAFI;AAG7BM,EAAAA,SAAS,EAAEC,OAAD,KAAY;AAClBC,IAAAA,OAAO,EAAED,OAAO,CAACE,KAAR,CAAc;AACnBA,MAAAA,KAAK,EAAGC,MAAD,IAAYT,aAAa,CAAE,EAAF;AADb,KAAd;AADS,GAAZ;AAHmB,CAAD,CAAhC;;AAUA,MAAMU,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBjB,SAAsB;AAAA,MAAXkB,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHhB,QAAAA,OAAO,EAAE,EACL,GAAGgB,KAAK,CAAChB,OADJ;AAELC,UAAAA,QAAQ,EAAEgB,MAAM,CAACE,OAAP,CAAelB,QAFpB;AAGLC,UAAAA,KAAK,EAAEe,MAAM,CAACE,OAAP,CAAejB;AAHjB;AAFN,OAAP;;AAQJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHhB,QAAAA,OAAO,EAAE,EACL,GAAGgB,KAAK,CAAChB,OADJ;AAELG,UAAAA,OAAO,EAAEc,MAAM,CAACE;AAFX;AAFN,OAAP;;AAOJ;AACI,aAAOH,KAAP;AAnBR;AAqBH,CAtBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst initState = {\r\n    filters: {\r\n        minScore: 315,\r\n        level: 20,\r\n        arrange: 0,\r\n    }\r\n\r\n}\r\n\r\nconst baseUrl = 'https://market-api.radiocaca.com/'\r\nconst createRequest = (url) => ({ url })\r\nconst marketplaceAPI = createApi({\r\n    reducerPath: 'marketplaceAPI',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints:(builder)=>({\r\n        getNFTs :builder.query({\r\n            query: (cateId) => createRequest(``)\r\n        })\r\n    })\r\n})\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'handleFilters':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    minScore: action.payload.minScore,\r\n                    level: action.payload.level\r\n                }\r\n            }\r\n        case 'handleArrange':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    arrange: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}