{"ast":null,"code":"import _objectSpread from\"C:/Users/minhd/Desktop/marketplaceraca/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{useMemo}from\"react\";import{useParams,useLocation,useHistory,useRouteMatch}from\"react-router-dom\";import queryString from\"query-string\";var useRouter=function useRouter(){var params=useParams();var location=useLocation();var history=useHistory();var match=useRouteMatch();// Return our custom router object\n// Memoize so that a new object is only returned if something changes\nreturn useMemo(function(){return{// For convenience add push(), replace(), pathname at top level\npush:history.push,replace:history.replace,pathname:location.pathname,// Merge params and parsed query string into single \"query\" object\n// so that they can be used interchangeably.\n// Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\nquery:_objectSpread(_objectSpread({},queryString.parse(location.search)),params),// Include match, location, history objects so we have\n// access to extra React Router functionality if needed.\nmatch:match,location:location,history:history};},[params,match,location,history]);};export default useRouter;","map":{"version":3,"sources":["C:/Users/minhd/Desktop/marketplaceraca/src/context/useRouter.js"],"names":["React","useMemo","useParams","useLocation","useHistory","useRouteMatch","queryString","useRouter","params","location","history","match","push","replace","pathname","query","parse","search"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OACIC,SADJ,CAEIC,WAFJ,CAGIC,UAHJ,CAIIC,aAJJ,KAKO,kBALP,CAMA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAMC,CAAAA,MAAM,CAAGN,SAAS,EAAxB,CACA,GAAMO,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CACA,GAAMO,CAAAA,KAAK,CAAGN,aAAa,EAA3B,CACA;AACA;AACA,MAAOJ,CAAAA,OAAO,CAAC,UAAM,CACjB,MAAO,CACH;AACAW,IAAI,CAAEF,OAAO,CAACE,IAFX,CAGHC,OAAO,CAAEH,OAAO,CAACG,OAHd,CAIHC,QAAQ,CAAEL,QAAQ,CAACK,QAJhB,CAKH;AACA;AACA;AACAC,KAAK,gCACET,WAAW,CAACU,KAAZ,CAAkBP,QAAQ,CAACQ,MAA3B,CADF,EAEET,MAFF,CARF,CAYH;AACA;AACAG,KAAK,CAALA,KAdG,CAeHF,QAAQ,CAARA,QAfG,CAgBHC,OAAO,CAAPA,OAhBG,CAAP,CAkBH,CAnBa,CAmBX,CAACF,MAAD,CAASG,KAAT,CAAgBF,QAAhB,CAA0BC,OAA1B,CAnBW,CAAd,CAoBH,CA3BD,CA6BA,cAAeH,CAAAA,SAAf","sourcesContent":["import React from 'react'\r\nimport { useMemo } from \"react\";\r\nimport {\r\n    useParams,\r\n    useLocation,\r\n    useHistory,\r\n    useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nconst useRouter = () => {\r\n    const params = useParams();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const match = useRouteMatch();\r\n    // Return our custom router object\r\n    // Memoize so that a new object is only returned if something changes\r\n    return useMemo(() => {\r\n        return {\r\n            // For convenience add push(), replace(), pathname at top level\r\n            push: history.push,\r\n            replace: history.replace,\r\n            pathname: location.pathname,\r\n            // Merge params and parsed query string into single \"query\" object\r\n            // so that they can be used interchangeably.\r\n            // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\r\n            query: {\r\n                ...queryString.parse(location.search), // Convert string to object\r\n                ...params,\r\n            },\r\n            // Include match, location, history objects so we have\r\n            // access to extra React Router functionality if needed.\r\n            match,\r\n            location,\r\n            history,\r\n        };\r\n    }, [params, match, location, history]);\r\n}\r\n\r\nexport default useRouter"]},"metadata":{},"sourceType":"module"}