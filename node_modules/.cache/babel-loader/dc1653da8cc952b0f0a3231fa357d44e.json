{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst initState = {\n  filters: {\n    minScore: 315,\n    level: 20,\n    arrange: 0\n  }\n};\n\nconst createRequest = url => ({\n  url\n});\n\nconst marketplaceAPI = createApi({\n  reducerPath: 'marketplaceAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: ''\n  })\n});\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'handleFilters':\n      return { ...state,\n        filters: { ...state.filters,\n          minScore: action.payload.minScore,\n          level: action.payload.level\n        }\n      };\n\n    case 'handleArrange':\n      return { ...state,\n        filters: { ...state.filters,\n          arrange: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/minhd/Desktop/marketplaceraca/src/app/reducer.js"],"names":["createApi","fetchBaseQuery","initState","filters","minScore","level","arrange","createRequest","url","marketplaceAPI","reducerPath","baseQuery","baseUrl","rootReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AADK,CAAlB;;AAQA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA;AAAF,CAAV,CAAtB;;AACA,MAAMC,cAAc,GAAGT,SAAS,CAAC;AAC7BU,EAAAA,WAAW,EAAC,gBADiB;AAE7BC,EAAAA,SAAS,EAAEV,cAAc,CAAC;AAACW,IAAAA,OAAO,EAAE;AAAV,GAAD;AAFI,CAAD,CAAhC;;AAKA,MAAMC,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBZ,SAAsB;AAAA,MAAXa,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHX,QAAAA,OAAO,EAAE,EACL,GAAGW,KAAK,CAACX,OADJ;AAELC,UAAAA,QAAQ,EAAEW,MAAM,CAACE,OAAP,CAAeb,QAFpB;AAGLC,UAAAA,KAAK,EAAEU,MAAM,CAACE,OAAP,CAAeZ;AAHjB;AAFN,OAAP;;AAQJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHX,QAAAA,OAAO,EAAE,EACL,GAAGW,KAAK,CAACX,OADJ;AAELG,UAAAA,OAAO,EAAES,MAAM,CAACE;AAFX;AAFN,OAAP;;AAOJ;AACI,aAAOH,KAAP;AAnBR;AAqBH,CAtBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst initState = {\r\n    filters: {\r\n        minScore: 315,\r\n        level: 20,\r\n        arrange: 0,\r\n    }\r\n\r\n}\r\nconst createRequest = (url) => ({ url })\r\nconst marketplaceAPI = createApi({\r\n    reducerPath:'marketplaceAPI',\r\n    baseQuery: fetchBaseQuery({baseUrl: ''})\r\n})\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'handleFilters':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    minScore: action.payload.minScore,\r\n                    level: action.payload.level\r\n                }\r\n            }\r\n        case 'handleArrange':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    arrange: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}