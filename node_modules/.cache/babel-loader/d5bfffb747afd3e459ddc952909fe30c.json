{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst initState = {\n  filters: {\n    minScore: 315,\n    level: 20,\n    arrange: 0\n  }\n};\nconst headers = {\n  \"Access-Control-Allow-Origin\": \"*\"\n};\nconst baseUrl = 'https://market-api.radiocaca.com/nft-sales?';\n\nconst createRequest = url => ({\n  url,\n  headers\n});\n\nexport const marketplaceAPI = createApi({\n  reducerPath: 'marketplaceAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getNFTs: builder.query({\n      query: (categoryId, size) => createRequest(`/pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`)\n    })\n  })\n});\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'handleFilters':\n      return { ...state,\n        filters: { ...state.filters,\n          minScore: action.payload.minScore,\n          level: action.payload.level\n        }\n      };\n\n    case 'handleArrange':\n      return { ...state,\n        filters: { ...state.filters,\n          arrange: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\nexport const {\n  useGetNFTsQuery\n} = marketplaceAPI;","map":{"version":3,"sources":["C:/Users/minhd/Desktop/marketplaceraca/src/app/reducer.js"],"names":["createApi","fetchBaseQuery","initState","filters","minScore","level","arrange","headers","baseUrl","createRequest","url","marketplaceAPI","reducerPath","baseQuery","endpoints","builder","getNFTs","query","categoryId","size","rootReducer","state","action","type","payload","useGetNFTsQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AADK,CAAlB;AAQA,MAAMC,OAAO,GAAG;AACZ,iCAA+B;AADnB,CAAhB;AAGA,MAAMC,OAAO,GAAG,6CAAhB;;AACA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA,GAAF;AAAOH,EAAAA;AAAP,CAAV,CAAtB;;AACA,OAAO,MAAMI,cAAc,GAAGX,SAAS,CAAC;AACpCY,EAAAA,WAAW,EAAE,gBADuB;AAEpCC,EAAAA,SAAS,EAAEZ,cAAc,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAFW;AAGpCM,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACrBC,IAAAA,OAAO,EAAED,OAAO,CAACE,KAAR,CAAc;AACnBA,MAAAA,KAAK,EAAE,CAACC,UAAD,EAAaC,IAAb,KAAsBV,aAAa,CAAE,aAAYU,IAAK,0CAAyCD,UAAW,aAAvE;AADvB,KAAd;AADY,GAAd;AAHyB,CAAD,CAAhC;;AAUP,MAAME,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBnB,SAAsB;AAAA,MAAXoB,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHlB,QAAAA,OAAO,EAAE,EACL,GAAGkB,KAAK,CAAClB,OADJ;AAELC,UAAAA,QAAQ,EAAEkB,MAAM,CAACE,OAAP,CAAepB,QAFpB;AAGLC,UAAAA,KAAK,EAAEiB,MAAM,CAACE,OAAP,CAAenB;AAHjB;AAFN,OAAP;;AAQJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHlB,QAAAA,OAAO,EAAE,EACL,GAAGkB,KAAK,CAAClB,OADJ;AAELG,UAAAA,OAAO,EAAEgB,MAAM,CAACE;AAFX;AAFN,OAAP;;AAOJ;AACI,aAAOH,KAAP;AAnBR;AAqBH,CAtBD;;AAuBA,eAAeD,WAAf;AAEA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAAsBd,cAA5B","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst initState = {\r\n    filters: {\r\n        minScore: 315,\r\n        level: 20,\r\n        arrange: 0,\r\n    }\r\n\r\n}\r\nconst headers = {\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n}\r\nconst baseUrl = 'https://market-api.radiocaca.com/nft-sales?'\r\nconst createRequest = (url) => ({ url, headers })\r\nexport const marketplaceAPI = createApi({\r\n    reducerPath: 'marketplaceAPI',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getNFTs: builder.query({\r\n            query: (categoryId, size) => createRequest(`/pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`)\r\n        })\r\n    })\r\n})\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'handleFilters':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    minScore: action.payload.minScore,\r\n                    level: action.payload.level\r\n                }\r\n            }\r\n        case 'handleArrange':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    arrange: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer;\r\n\r\nexport const { useGetNFTsQuery } = marketplaceAPI\r\n"]},"metadata":{},"sourceType":"module"}