{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minhd\\\\Desktop\\\\marketplaceraca\\\\src\\\\components\\\\Elemon\\\\Elemon.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport InputFilters from './InputFilters';\nimport '../../styles/elemon.css';\nimport { Box, CircularProgress, Grid } from '@mui/material';\nimport InfoCard from './InfoCard';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getElemonItem = function () {\n  let pageNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  let priceMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  let baseCardId = arguments.length > 3 ? arguments[3] : undefined;\n  let tokenId = arguments.length > 4 ? arguments[4] : undefined;\n  let rarities = arguments.length > 5 ? arguments[5] : undefined;\n  let classes = arguments.length > 6 ? arguments[6] : undefined;\n  let purities = arguments.length > 7 ? arguments[7] : undefined;\n  return axios.get(`https://app.elemon.io/market/getElemonItems?pageNumber=${pageNumber}&pageSize=${pageSize}&positionType=2&priceMode=${priceMode}&baseCardId=&tokenId=&rarities=&classes=&purities=`).then(res => res.data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  });\n};\n\nconst getElemonInfo = listElemon => {\n  const listTokenId = listElemon.map(item => item.tokenId); // console.log(listTokenId)\n\n  return axios.get(`https://app.elemon.io/elemon/GetElemonInfo?tokenId=${listTokenId === null || listTokenId === void 0 ? void 0 : listTokenId.join(',')}`).then(res => res.data, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }).catch(error => error);\n};\n\nconst Elemon = () => {\n  _s();\n\n  const [listElemon, setListElemon] = useState([]);\n  const [listElemonInfo, setListElemonInfo] = useState([]);\n  const [timeUpdated, setTimeUpdated] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [listFilter, setListFilter] = useState([]);\n  const {\n    min,\n    max,\n    sort\n  } = useSelector(state => state.filtersElemon);\n\n  const convertDateTime = () => {\n    const now = new Date();\n    setTimeUpdated(now.toLocaleString());\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      await getElemonItem(1, 100).then(async res => {\n        await getElemonItem(1, res.paging.totalCount).then(res => setListElemon(res.data));\n      });\n    };\n\n    getData();\n    convertDateTime();\n    return () => {\n      setListElemon([]);\n    };\n  }, []);\n  React.useEffect(() => {\n    const getInfo = async () => {\n      setLoading(true); // while()\n\n      console.log(\"a\");\n      const lengthList = listElemon.length;\n      const loop = lengthList % 100 === 0 ? lengthList / 100 : lengthList / 100 + 1;\n\n      for (let i = 1; i <= loop; i++) {\n        const amount = lengthList % 100 !== 0 && lengthList - i * 100 < 0 ? (i - 1) * 100 + lengthList % 100 : i * 100; // console.log((i - 1) * 100, amount)\n\n        console.log(i);\n        await getElemonInfo(listElemon === null || listElemon === void 0 ? void 0 : listElemon.slice((i - 1) * 100, amount)).then(res => {\n          const listInfo = listElemon.slice((i - 1) * 100, amount).map((item, index) => {\n            var _res$data$index;\n\n            return { ...item,\n              point: (_res$data$index = res.data[index]) === null || _res$data$index === void 0 ? void 0 : _res$data$index.point\n            };\n          });\n          setListElemonInfo(pre => pre.concat(listInfo));\n        });\n      }\n\n      setLoading(false);\n    };\n\n    getInfo();\n    return () => {\n      setListElemonInfo(prev => []);\n    };\n  }, [listElemon]);\n  useEffect(() => {\n    // console.log(listElemonInfo)\n    const filter = listElemonInfo.filter(elemon => elemon.point >= min && elemon.point <= max).sort((a, b) => {\n      if (sort == 0) {\n        return a.lastPrice > b.lastPrice ? 1 : -1;\n      } else {\n        return a.lastPrice < b.lastPrice ? 1 : -1;\n      }\n    });\n    setListFilter(filter);\n    return () => {\n      setListFilter(pre => []);\n    };\n  }, [listElemonInfo, min, max, sort]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputFilters, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timeUpdate\",\n        children: timeUpdated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: listFilter && (listFilter === null || listFilter === void 0 ? void 0 : listFilter.slice(0, 100).map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 4,\n          lg: 2.2,\n          children: /*#__PURE__*/_jsxDEV(InfoCard, {\n            elemon: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Elemon, \"Fg1wVb9p4xqCkR5Zertpdd75yvQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Elemon;\nexport default Elemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Elemon\");","map":{"version":3,"sources":["C:/Users/minhd/Desktop/marketplaceraca/src/components/Elemon/Elemon.js"],"names":["axios","React","useEffect","useState","InputFilters","Box","CircularProgress","Grid","InfoCard","useSelector","getElemonItem","pageNumber","pageSize","priceMode","baseCardId","tokenId","rarities","classes","purities","get","then","res","data","headers","getElemonInfo","listElemon","listTokenId","map","item","join","catch","error","Elemon","setListElemon","listElemonInfo","setListElemonInfo","timeUpdated","setTimeUpdated","loading","setLoading","listFilter","setListFilter","min","max","sort","state","filtersElemon","convertDateTime","now","Date","toLocaleString","getData","paging","totalCount","getInfo","console","log","lengthList","length","loop","i","amount","slice","listInfo","index","point","pre","concat","prev","filter","elemon","a","b","lastPrice","textAlign"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport InputFilters from './InputFilters';\r\nimport '../../styles/elemon.css';\r\nimport { Box, CircularProgress, Grid } from '@mui/material';\r\nimport InfoCard from './InfoCard';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst getElemonItem = (pageNumber = 1, pageSize = 20, priceMode = 2, baseCardId, tokenId, rarities, classes, purities) => {\r\n    return axios.get(`https://app.elemon.io/market/getElemonItems?pageNumber=${pageNumber}&pageSize=${pageSize}&positionType=2&priceMode=${priceMode}&baseCardId=&tokenId=&rarities=&classes=&purities=`).then(res => res.data, {\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    });\r\n}\r\nconst getElemonInfo = (listElemon) => {\r\n    const listTokenId = listElemon.map(item => item.tokenId);\r\n    // console.log(listTokenId)\r\n    return axios.get(`https://app.elemon.io/elemon/GetElemonInfo?tokenId=${listTokenId?.join(',')}`).then(res => res.data, {\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    }).catch(error => (error));\r\n}\r\n\r\nconst Elemon = () => {\r\n    const [listElemon, setListElemon] = useState([]);\r\n    const [listElemonInfo, setListElemonInfo] = useState([]);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [loading, setLoading] = useState(true);\r\n    const [listFilter, setListFilter] = useState([]);\r\n\r\n    const { min, max, sort } = useSelector(state => state.filtersElemon)\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await getElemonItem(1, 100).then(async (res) => {\r\n                await getElemonItem(1, res.paging.totalCount).then(res => setListElemon(res.data));\r\n            });\r\n        }\r\n\r\n        getData();\r\n        convertDateTime()\r\n\r\n        return () => {\r\n            setListElemon([]);\r\n        }\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        const getInfo = async () => {\r\n            setLoading(true)\r\n            // while()\r\n            console.log(\"a\")\r\n\r\n            const lengthList = listElemon.length;\r\n            const loop = lengthList % 100 === 0 ? lengthList / 100 : lengthList / 100 + 1;\r\n            for (let i = 1; i <= loop; i++) {\r\n                const amount = lengthList % 100 !== 0 && lengthList - (i * 100) < 0 ? ((i - 1) * 100) + (lengthList % 100) : i * 100\r\n                // console.log((i - 1) * 100, amount)\r\n                console.log(i);\r\n\r\n                await getElemonInfo(listElemon?.slice((i - 1) * 100, amount)).then(res => {\r\n                    const listInfo = listElemon.slice((i - 1) * 100, amount).map((item, index) => {\r\n                        return {\r\n                            ...item,\r\n                            point: res.data[index]?.point,\r\n                        }\r\n                    });\r\n                    setListElemonInfo(pre => pre.concat(listInfo))\r\n                })\r\n            }\r\n\r\n            setLoading(false);\r\n        }\r\n        getInfo();\r\n        return () => {\r\n            setListElemonInfo((prev) => []);\r\n        }\r\n    }, [listElemon]);\r\n\r\n    useEffect(() => {\r\n        // console.log(listElemonInfo)\r\n\r\n        const filter = listElemonInfo.filter(elemon => elemon.point >= min && elemon.point <= max).sort((a, b) => {\r\n            if (sort == 0) {\r\n                return a.lastPrice > b.lastPrice ? 1 : -1;\r\n            }\r\n            else {\r\n                return a.lastPrice < b.lastPrice ? 1 : -1;\r\n            }\r\n\r\n        })\r\n        setListFilter(filter)\r\n        return () => {\r\n            setListFilter(pre => [])\r\n        }\r\n    }, [listElemonInfo, min, max, sort]);\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{ textAlign: 'center' }}>\r\n                <InputFilters />\r\n                <p className='timeUpdate'>{timeUpdated}</p>\r\n                <Grid container spacing={1}>\r\n                    {listFilter && listFilter?.slice(0, 100).map((item, index) => (\r\n                        <Grid key={index} item xs={6} md={4} lg={2.2}>\r\n                            <InfoCard elemon={item} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                {loading && <CircularProgress />}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Elemon;\r\n"]},"metadata":{},"sourceType":"module"}