{"version":3,"sources":["app/actions.js","components/TabPanel.js","components/NFTs/Card.js","components/NFTs/SwapRaca.js","components/NFTs/NFTs.js","config.js","components/Sales/Sales.js","components/Metamon/InputSelect.js","components/Metamon/Metamon.js","components/Elemon/InputFilters.js","components/Elemon/InfoCard.js","components/Elemon/Elemon.js","components/Tabs.js","App.js","app/reducer.js","app/store.js","reportWebVitals.js","index.js"],"names":["handleArrange","arrange","type","payload","handlePower","min","minPower","max","maxPower","TabPanel","props","children","value","index","other","role","hidden","id","sx","color","Box","span","Typography","component","Card","x","nft","name","image_url","fixed_price","className","alt","src","style","fontSize","fontWeight","lineHeight","whiteSpace","textOverflow","overflow","margin","toString","replace","SwapRacaToUSD","useState","inputRaca","setInputRaca","usdPrice","setUsdPrice","handleChange","e","a","target","raca","useSelector","state","price","useEffect","onChange","getAPI","categoryId","size","axios","ConvertDDMM","datetime","toLocaleString","split","date","time","getStatsPotion","numberWithCommas","NFTs","listMetamon","setListMetamon","listDiamond","setListDiamond","listEgg","setListEgg","listPotion","setListPotion","kissUpLand","setKissUpLand","BigGreen","setBigGreen","MetamonR","setMetamonR","MMLand","setMMLand","tokenPrice","setTokenPrice","timeUpdated","setTimeUpdated","listStats","setListStats","listStatsPotion","setListStatsPotion","convertDateTime","now","Date","elmon","elcoin","btc","getData","Promise","all","then","res","data","list","document","querySelector","classList","toggle","rerender","setInterval","clearInterval","SwapRaca","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","width","height","objectFit","TableBody","map","child","scope","Math","floor","toFixed","position","left","marginTop","item","count","timestamp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createData","totalSales","totalCost","totalWithdraw","percent","sales","cost","profit","withdraw","remain","getHistory","page","get","Sales","listHistory","setListHistory","listSummary","setListSummary","listWithdraw","setListWithdraw","setToggle","total","currentPage","listTemp","fetchData","response","length","app","initializeApp","db","getFirestore","q","query","collection","orderBy","getDocs","querySnapshot","tempList","forEach","doc","push","newList","seconds","listSales","filter","nft_token_id","listCost","sumSales","reduce","prev","curr","parse","fee","Number","amount","sumCost","transfer","minWidth","row","border","CircularProgress","textAlign","Button","onClick","variant","StrictMode","TextField","label","marginBottom","notes","InputSelect","getFilter","dispatch","useDispatch","filters","myStorage","window","localStorage","setArrange","minScore","setMinScore","level","setLevel","Container","display","alignItems","marginRight","handleFilters","setItem","JSON","stringify","score","levelMetamon","FormControl","Select","labelId","event","MenuItem","pageNo","Metamon","listShow","setListShow","showInfo","getListMetamon","listData","i","concat","sortBy","sort","b","slice","metamon","onMouseEnter","href","textDecoration","rel","token_id","InputFilters","filtersElemon","setMinPower","setMaxPower","setSortPrice","tokenId","handleSort","onBlur","placeholder","background","InfoCard","elemon","isOwner","ownerAddress","URI","bodyPart","bodyPart1","bodyPart2","bodyPart3","bodyPart4","bodyPart5","bodyPart6","rarity","class","purity","baseCardId","join","quality","lastPrice","point","getElemonItem","pageNumber","pageSize","priceMode","headers","getElemonInfo","listElemon","listTokenId","catch","error","Elemon","setListElemon","listElemonInfo","setListElemonInfo","loading","setLoading","listFilter","setListFilter","myNFT","setMyNFT","paging","totalCount","React","getInfo","lengthList","loop","listInfo","undefined","err","console","log","pre","maxP","minP","checkPower","power","Grid","container","spacing","xs","md","lg","a11yProps","HeaderTabs","getTab","getItem","setValue","borderBottom","borderColor","Tabs","newValue","Tab","App","getPrice","usd","title","updatePrice","initState","tab","rootReducer","action","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9673ff1c.chunk.js","sourcesContent":["\r\nexport const handleFilters = ({ minScore, level }) => {\r\n    return {\r\n        type: 'handleFilters',\r\n        payload: {\r\n            minScore,\r\n            level\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleArrange = (arrange) => {\r\n    return {\r\n        type: 'handleArrange',\r\n        payload: arrange\r\n    }\r\n}\r\n\r\nexport const updatePriceAuto = (price) => {\r\n    return {\r\n        type: 'updatePrice',\r\n        payload: price,\r\n    }\r\n}\r\n\r\nexport const handlePower = ({ minPower, maxPower }) => {\r\n    return {\r\n        type: 'handlePower',\r\n        payload: {\r\n            min: minPower,\r\n            max: maxPower\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleSort = (sort) => {\r\n    return {\r\n        type: 'handleSort',\r\n        payload: sort,\r\n    }\r\n}\r\n\r\nexport const handleFilterName = (name) => {\r\n    return {\r\n        type: 'handleName',\r\n        payload: name,\r\n    }\r\n}\r\nexport const handleTokenId = (id) => {\r\n    return {\r\n        type: 'handleTokenId',\r\n        payload: id,\r\n    }\r\n}\r\n\r\n\r\n","import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            sx={{ color: '#ffffff' }}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ span: 3 }}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TabPanel;","\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Card = (props) => {\r\n\r\n    const { name = \"undefined\", id = \"#0000\", image_url = '', fixed_price = '0000' } = props.nft;\r\n    return (\r\n        <div className='nft'>\r\n            <div className=\"imgBox\">\r\n                <img className='image-nft' alt={name} src={image_url || \"/marketplaceraca/nft.png\"} />\r\n            </div>\r\n            <div className=\"textBox\">\r\n                <p className='name-nft'>{name} #{id}</p>\r\n                <div className='separate'></div>\r\n                <div className='price'>\r\n                    <p style={{\r\n                        color: '#ffffff',\r\n                        fontSize: 20,\r\n                        fontWeight: 700,\r\n                        lineHeight:'32px',\r\n                        whiteSpace:'nowrap',\r\n                        textOverflow:'ellipsis',\r\n                        overflow:'hidden',\r\n                        margin: '0'\r\n                    }}>Price</p>\r\n                    <p className='priceNum'>{numberWithCommas(fixed_price)}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst SwapRacaToUSD = () => {\r\n    const [inputRaca, setInputRaca] = useState('');\r\n    const [usdPrice, setUsdPrice] = useState(0);\r\n\r\n    const handleChange = async (e) => {\r\n        setInputRaca(e.target.value);\r\n    }\r\n    const { raca } = useSelector(state => state.price)\r\n    useEffect(() => {\r\n        setUsdPrice(() => inputRaca * raca);\r\n    }, [inputRaca, raca])\r\n    return (\r\n        <div id='swap-raca'>\r\n            <input id=\"RACA\" type=\"number\" value={inputRaca} onChange={handleChange} />\r\n            <span> ~ </span>\r\n            <span id=\"USD\">{usdPrice} USD</span>\r\n        </div>\r\n    )\r\n}\r\nexport default SwapRacaToUSD;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SwapRacaToUSD from \"./SwapRaca\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, buttonClasses } from '@mui/material';\r\nimport '../../styles/nfts.css';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst getAPI = (categoryId, size) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst ConvertDDMM = (datetime)=>{\r\n    const [date, time] = datetime.toLocaleString().split(',');\r\n    const [month, day, year] = date.split('/');\r\n    return `${time}`\r\n}\r\nconst getStats = (categoryId) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=10&status=executed&tokenId=-1&category=${categoryId}`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst getStatsPotion = (categoryId) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=10&status=executed&tokenId=-1&category=${categoryId}`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst NFTs = ({ hidden }) => {\r\n    const [listMetamon, setListMetamon] = useState([]);\r\n    const [listDiamond, setListDiamond] = useState([]);\r\n    const [listEgg, setListEgg] = useState([]);\r\n    const [listPotion, setListPotion] = useState([]);\r\n    const [kissUpLand, setKissUpLand] = useState({});\r\n    const [BigGreen, setBigGreen] = useState({});\r\n    const [MetamonR, setMetamonR] = useState({});\r\n    const [MMLand, setMMLand] = useState({});\r\n    const [tokenPrice, setTokenPrice] = useState(0);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [listStats, setListStats] = useState([]);\r\n    const [listStatsPotion, setListStatsPotion] = useState([]);\r\n\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    const { raca, elmon, elcoin, btc } = useSelector(state => state.price)\r\n    const getData = async () => (\r\n        Promise.all([\r\n            getAPI(13, 10).then(res =>\r\n                setListMetamon(res.data.list)\r\n            ),\r\n            getAPI(15, 10).then(res =>\r\n                setListPotion(res.data.list)\r\n            ),\r\n            getAPI(16, 10).then(res =>\r\n                setListDiamond(res.data.list)\r\n            ),\r\n            getAPI(17, 10).then(res =>\r\n                setListEgg(res.data.list)\r\n            ),\r\n            getStats(17).then(res =>\r\n                setListStats(res.data.list)\r\n            ),\r\n            getStatsPotion(15).then(res =>\r\n                setListStatsPotion(res.data.list)\r\n            ),\r\n            getAPI(20, 1).then(res => {\r\n                setKissUpLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(23, 1).then(res => {\r\n                setMetamonR(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(7, 1).then(res => {\r\n                setMMLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(46, 1).then(res => {\r\n                setBigGreen(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n        ])\r\n    )\r\n    useEffect(() => {\r\n        setTokenPrice(raca)\r\n    }, [raca])\r\n    useEffect(() => {\r\n        getData();\r\n        convertDateTime()\r\n        // const formData = new FormData();\r\n        // formData.append('address', \"0x769ba0cb0d89666f7506194d2cf416ea0f812e16\");\r\n        // formData.append('sign', \"0x6987eccb7cdef2820794cfbd1067d7322175230d752c5a3f4ed2b5405d7cc2f63a3951cf7e2ba03f1ba447d6c720fc1eb304a2e2fd61b43f7afe72a2cff9d1b11c\");\r\n        // formData.append('msg', \"LogIn-17816549-8c50-98b7-f684-163d8e0eaea4\");\r\n        // const payload = {\r\n        //     address: '0x769ba0cb0d89666f7506194d2cf416ea0f812e16',\r\n        //     sign: '0x6987eccb7cdef2820794cfbd1067d7322175230d752c5a3f4ed2b5405d7cc2f63a3951cf7e2ba03f1ba447d6c720fc1eb304a2e2fd61b43f7afe72a2cff9d1b11c',\r\n        //     msg: 'LogIn-17816549-8c50-98b7-f684-163d8e0eaea4',\r\n        // }\r\n        // axios({\r\n        //     method: 'POST',\r\n        //     url: 'https://metamon-api.radiocaca.com/usm-api/login',\r\n        //     data: formData,\r\n        //     headers: {\r\n        //         \"Content-Type\": \"multipart/form-data\",\r\n        //     }\r\n        // }).then(function (response) {\r\n        //     console.log(response.data)\r\n        //     const formData1 = new FormData();\r\n        //     formData1.append('address', '0x769ba0cb0d89666f7506194d2cf416ea0f812e16')\r\n        //     axios({\r\n        //         method: 'POST',\r\n        //         url: 'https://metamon-api.radiocaca.com/usm-api/getBattleRecord',\r\n        //         data: formData1,\r\n        //         headers: {\r\n        //             \"accessToken\": response.data.data\r\n        //         }\r\n        //     }).then(function (response) {\r\n        //         console.log(response);\r\n        //     })\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error);\r\n        // });\r\n        const rerender = setInterval(() => {\r\n            getData();\r\n            convertDateTime();\r\n        }, 20000)\r\n\r\n        return () => {\r\n            setListMetamon([])\r\n            setListDiamond([])\r\n            setListEgg([])\r\n            setListPotion([])\r\n            setListStats([])\r\n            setKissUpLand({})\r\n            setTokenPrice(0)\r\n            clearInterval(rerender);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div hidden={hidden}>\r\n            <div className=\"priceToken\">\r\n                <p className='tokenPrice'>RACA: {raca}</p>\r\n                <p className='tokenPrice'>ELMON: {elmon}</p>\r\n                <p className='tokenPrice'>ELCOIN: {elcoin}</p>\r\n                <p className='tokenPrice'>BTC: {numberWithCommas(btc)}</p>\r\n            </div>\r\n\r\n            <SwapRacaToUSD />\r\n            <p id='timeUpdated'>{timeUpdated}</p>\r\n            <div className='pricetable'>\r\n                <TableContainer className='table-scroll' component={Paper}>\r\n                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">#</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/metamon.png' alt='Metamon' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/MetamonEgg.png' alt='Egg' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/DiamondYellow.png' alt='DiamondYellow' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/potion.png' alt='Potion' />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listEgg && listMetamon && listDiamond && listPotion && listEgg.map((child, index) => {\r\n                                return (\r\n                                    <TableRow key={index + 1}>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listMetamon[index]?.fixed_price))} (~{(tokenPrice * listMetamon[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listEgg[index]?.fixed_price))} (~{(tokenPrice * listEgg[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listDiamond[index]?.fixed_price))} (~{(tokenPrice * listDiamond[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listPotion[index]?.fixed_price))} (~{(tokenPrice * listPotion[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                    </TableRow>)\r\n                            })\r\n                            }\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div id='xike'>\r\n                    <p>Xìke Captain</p>\r\n                    <img alt='Xike' src='/marketplaceraca/xike.png' />\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className='stats'>\r\n                <div className='header'>\r\n                    <p style={{\r\n                        position: 'absolute',\r\n                        left: '0px',\r\n                        marginTop: '0px',\r\n                    }}>Stats</p>\r\n                    <img width='50px' height='50px' className='symbols' src='/marketplaceraca/MetamonEgg.png' alt='Egg' />\r\n\r\n                </div>\r\n                <TableContainer className='table-scroll' component={Paper}>\r\n                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">#</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <p>Price</p>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <p>Count</p>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <p>Time</p>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listStats && listStats.map((item, index) => {\r\n                                return (\r\n                                    <TableRow key={index + 1}>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                        <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                    </TableRow>)\r\n                            })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n            <div className='stats'>\r\n                <div className='header'>\r\n                    <p style={{\r\n                        position: 'absolute',\r\n                        left: '0px',\r\n                        marginTop: '0px',\r\n                    }}>Stats</p>\r\n                    <img width='50px' height='50px' style={{objectFit:'contain'}} className='symbols' src='/marketplaceraca/potion.png' alt='Potion' />\r\n\r\n                </div>\r\n                <TableContainer className='table-scroll' component={Paper}>\r\n                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">#</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <p>Price</p>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <p>Count</p>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <p>Time</p>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listStatsPotion && listStatsPotion.map((item, index) => {\r\n                                return (\r\n                                    <TableRow key={index + 1}>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                        <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                    </TableRow>)\r\n                            })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n            <div className=\"cards\">\r\n                {MetamonR &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={MetamonR} />\r\n                    </div>}\r\n\r\n                {BigGreen &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={BigGreen} />\r\n                    </div>}\r\n\r\n                {MMLand &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={MMLand} />\r\n                    </div>}\r\n\r\n                {kissUpLand &&\r\n                    <div className=\"card loading\"><Card nft={kissUpLand} />\r\n                    </div>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default NFTs;","\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCQItrkH9bp7aT1yiwobbNbHtXcKcZ45Qk\",\r\n    authDomain: \"sales-nft-raca.firebaseapp.com\",\r\n    projectId: \"sales-nft-raca\",\r\n    storageBucket: \"sales-nft-raca.appspot.com\",\r\n    messagingSenderId: \"547281695761\",\r\n    appId: \"1:547281695761:web:bade483d397ca7e9cd2db0\"\r\n};\r\nexport default firebaseConfig","import React, { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport { numberWithCommas } from '../NFTs/NFTs'\r\nimport axios from 'axios';\r\nimport { TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, CircularProgress } from '@mui/material';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"../../config\"\r\nimport { collection, getDocs, getFirestore, query, orderBy } from \"firebase/firestore\";\r\nimport '../../styles/sales.css';\r\n\r\n\r\nfunction createData(name, totalSales, totalCost, totalWithdraw, percent) {\r\n    const sales = totalSales * percent / 100;\r\n    const cost = totalCost * percent / 100;\r\n    const profit = (sales - cost);\r\n    const withdraw = totalWithdraw * percent / 100;\r\n    const remain = profit - withdraw;\r\n    return { name, sales, cost, profit, withdraw, remain };\r\n}\r\n\r\nconst getHistory = (page, size) => {\r\n    return axios.get(`https://market-api.radiocaca.com/users/0x10201091597635eC7b8e208306E6aDCC7c167925/histories?pageNo=${page}&pageSize=${size}`);\r\n\r\n}\r\n\r\n\r\nconst Sales = () => {\r\n    const [listHistory, setListHistory] = useState([]);\r\n    const [listSummary, setListSummary] = useState([]);\r\n    const [listWithdraw, setListWithdraw] = useState([]);\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    const handleAddTrans = () => {\r\n        setToggle(prev => !prev)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let total = 0;\r\n        let currentPage = 1;\r\n        let listTemp = [];\r\n        let size = 10;\r\n        const fetchData = async () => {\r\n            do {\r\n                const response = await getHistory(currentPage, size)\r\n                currentPage++;\r\n                total = response.data.total;\r\n                listTemp = [...listTemp, ...response.data.list]\r\n            } while (listTemp.length < total)\r\n\r\n            setListHistory(listTemp)\r\n        }\r\n        fetchData();\r\n\r\n\r\n        const getData = async () => {\r\n            const app = initializeApp(firebaseConfig);\r\n            const db = getFirestore(app);\r\n\r\n            const q = query(collection(db, \"Transaction\"), orderBy(\"time\"));\r\n            const querySnapshot = await getDocs(q);\r\n            const tempList = [];\r\n            querySnapshot.forEach((doc) => {\r\n                tempList.push(doc.data());\r\n            });\r\n\r\n            const newList = tempList.map(item => {\r\n                return {\r\n                    ...item,\r\n                    time: new Date(item.time.seconds * 1000).toLocaleString().split(',')[0]\r\n\r\n                }\r\n            })\r\n            setListWithdraw(newList);\r\n        }\r\n        getData();\r\n        return () => {\r\n            setListHistory([])\r\n            setListWithdraw([])\r\n        }\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n        const listSales = listHistory.filter(item => item.nft_token_id === 407301)\r\n        const listCost = listHistory.filter(item => item.nft_token_id === 403545)\r\n        let sumSales = listSales.reduce((prev, curr) => {\r\n            if (curr.time > Date.parse((\"12/28/2021\")) / 1000) {\r\n                curr.fee = Number(curr.amount) * 5 / 100;\r\n            }\r\n            return prev + (Number(curr.amount) - Number(curr.fee))\r\n        }, 0);\r\n        let sumCost = listCost.reduce((prev, curr) => {\r\n            return prev + Number(curr.amount)\r\n        }, 0);\r\n\r\n        let withdraw = 0;\r\n        let cost = 0;\r\n        listWithdraw.forEach((item, index) => {\r\n            if (item.transfer) {\r\n                withdraw += Number(item.amount);\r\n\r\n            } else {\r\n                cost += Number(item.amount);\r\n            }\r\n        }, 0);\r\n        sumCost += cost;\r\n        if (sumSales !== 0)\r\n            sumSales -= 2700;\r\n        setListSummary([\r\n            createData(\"Johny Duc\", sumSales, sumCost, withdraw, 40),\r\n            createData(\"Khang Pug\", sumSales, sumCost, withdraw, 40),\r\n            createData(\"Duc Professor\", sumSales, sumCost, withdraw, 20),\r\n            createData(\"Total\", sumSales, sumCost, withdraw, 100),\r\n        ]);\r\n    }, [listHistory, listWithdraw])\r\n    return (\r\n        <div className=\"sales\">\r\n            <TableContainer id=\"sales-section\" component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"center\">Sales</TableCell>\r\n                            <TableCell align=\"center\">Cost</TableCell>\r\n                            <TableCell align=\"center\">Profit</TableCell>\r\n                            <TableCell align=\"center\">Withdraw</TableCell>\r\n                            <TableCell align=\"center\">Remain</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listHistory && listSummary && listSummary.map((row) => (\r\n                            <TableRow\r\n                                key={row.name}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.sales))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.cost))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.profit))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.withdraw))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.remain))}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        {!listHistory && <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <CircularProgress size='small' color=\"success\" />\r\n                            </TableCell>\r\n                        </TableRow>}\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div id=\"withdraw-history\">\r\n                <h2 style={{\r\n                    textAlign: 'left'\r\n                }}>Withdraw History</h2>\r\n                <div id=\"addTransaction\">\r\n                    <Button\r\n                        size=\"medium\"\r\n                        id=\"toggleButton\"\r\n                        onClick={handleAddTrans}\r\n                        variant=\"contained\" >Add Transaction</Button>\r\n                    {toggle && (\r\n                        <React.StrictMode>\r\n                            <TextField\r\n                                type='number'\r\n                                label=\"Amount\"\r\n                                variant=\"outlined\" size=\"small\"\r\n                                style={{ marginBottom: '10px' }} />\r\n                            <TextField\r\n                                label=\"Notes\" variant=\"outlined\" size=\"small\" id=\"notes\"\r\n                                style={{ marginBottom: '10px' }} />\r\n                            <Button id=\"addButton\" size=\"medium\" variant=\"contained\">Add</Button>\r\n                        </React.StrictMode>\r\n                    )}\r\n                </div>\r\n                <TableContainer id='withdraw' component={Paper}>\r\n                    <Table sx={{ minWidth: 250 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Time</TableCell>\r\n                                <TableCell align=\"center\">Amount</TableCell>\r\n                                <TableCell align=\"center\">Note</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listWithdraw && listWithdraw.map((row, index) => (\r\n                                <TableRow\r\n                                    key={index}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.time}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(row.amount)}</TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(row.notes)}</TableCell>\r\n\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Sales;","import { useState } from 'react';\r\n\r\nimport { MenuItem, FormControl, Select, TextField, Box, Button, Container } from '@mui/material'\r\nimport { handleArrange, handleFilters } from '../../app/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nexport const InputSelect = ({ getFilter }) => {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.filters)\r\n    const myStorage = window.localStorage;\r\n    const [arrange, setArrange] = useState(filters.arrange);\r\n    const [minScore, setMinScore] = useState(filters.minScore);\r\n    const [level, setLevel] = useState(filters.level);\r\n\r\n\r\n    const handleLevelChange = (e) => {\r\n        setLevel(e.target.value);\r\n    }\r\n\r\n    const handleMinScoreChange = (e) => {\r\n        setMinScore(e.target.value);\r\n    }\r\n\r\n    const ArrangeChange = (event) => {\r\n        setArrange(event.target.value);\r\n        dispatch(handleArrange(event.target.value));\r\n       \r\n    };\r\n    const ConfirmHandle = () => {\r\n        dispatch(handleFilters({ minScore, level }));\r\n        setArrange(0)\r\n        myStorage.setItem('metamon', JSON.stringify({\r\n            score: minScore,\r\n            levelMetamon: level\r\n        }))\r\n    }\r\n    return (\r\n        <Container sx={{ marginTop: '20px', color: '#fff', }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                alignItems: 'end'\r\n            }}>\r\n                <TextField value={minScore} onChange={handleMinScoreChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"min-score\" label=\"Min score\" variant=\"standard\" type='number' />\r\n                <TextField value={level} onChange={handleLevelChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"level\" label=\"Level\" variant=\"standard\" type='number' />\r\n                <Button sx={{ color: '#fff', height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={ConfirmHandle}>Confirm</Button>\r\n            </Box>\r\n            <Box>\r\n                <FormControl style={{ margin: '20px 0' }}>\r\n                    <Select\r\n                        size='small'\r\n                        labelId=\"select\"\r\n                        id=\"filter\"\r\n                        value={arrange}\r\n                        onChange={ArrangeChange}\r\n                        sx={{ color: '#fff', }}\r\n                    >\r\n                        <MenuItem value={0}>Lowest Price</MenuItem>\r\n                        <MenuItem value={1}>Highest Level</MenuItem>\r\n                        <MenuItem value={2}>Highest Score</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport React, { createElement, useEffect, useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, cardClasses } from '@mui/material';\r\nimport { InputSelect } from \"./InputSelect\";\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport '../../styles/metamon.css'\r\nimport { handleArrange } from \"../../app/actions\";\r\n\r\n\r\nconst getData = (minScore = 315, level = 1, pageNo = 1) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?saleType&category=13&tokenType&tokenId=-1&pageNo=${pageNo}&pageSize=100&sortBy=single_price&order=asc&min_level=${level}&max_level=60&min_score=${minScore}&max_score=330`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nconst Metamon = () => {\r\n    const { minScore, level, arrange } = useSelector(state => state.filters)\r\n\r\n    const [listMetamon, setListMetamon] = useState([])\r\n    const [listShow, setListShow] = useState([])\r\n    const dispatch = useDispatch();\r\n    const { raca } = useSelector(state => state.price);\r\n\r\n    const showInfo = (e) => {\r\n    }\r\n    const getListMetamon = async () => {\r\n        await getData(minScore, level, 1).then(async (res) => {\r\n            const data = res.data;\r\n            let listData = res.data.list\r\n            // console.log(data.list.total)\r\n            for (let i = 1; i <= Math.floor(data.total / 100); i++) {\r\n                const list = await getData(minScore, level, i + 1).then(res => res.data.list);\r\n                listData = listData.concat(list)\r\n                // console.log(listData)\r\n            }\r\n            setListMetamon(listData)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getListMetamon();\r\n        dispatch(handleArrange(0));\r\n        return () => {\r\n            setListMetamon([])\r\n        }\r\n    }, [minScore, level])\r\n    useEffect(() => {\r\n        //Get list property\r\n        const sortBy = (filter) => {\r\n            return listMetamon.sort((a, b) => {\r\n                if (filter === 'fixed_price') {\r\n                    return Number(a[filter]) - Number(b[filter])\r\n                } else {\r\n                    return Number(b[filter]) - Number(a[filter])\r\n                }\r\n            });\r\n        }\r\n\r\n        switch (arrange) {\r\n            case 0:\r\n                setListShow(sortBy('fixed_price').slice(0, 10));\r\n                break;\r\n            case 1:\r\n                setListShow(sortBy('level').slice(0, 10));\r\n                break;\r\n            case 2:\r\n                setListShow(sortBy('score').slice(0, 10));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return () => {\r\n            setListShow([])\r\n        }\r\n    }, [listMetamon, arrange]);\r\n\r\n    return (\r\n        <Box sx={{ textAlign: 'left' }}>\r\n            <InputSelect />\r\n            <TableContainer id='table-scroll' component={Paper}>\r\n                <Table id='tablePrice' aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                ID\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Score\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Level\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" sx={{ width: '25%' }}>\r\n                                Price\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listShow && listShow.map((metamon, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                    <TableCell id={`metamon-${index + 1}`} onMouseEnter={showInfo} align=\"center\" component=\"th\" scope=\"row\" sx={{ position: 'relative' }}>\r\n                                        <img width='50px' height='50px' src={metamon.image_url} alt='Metamon' />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                        <a href={`https://market.radiocaca.com/#/market-place/${metamon.id}`} target='_blank'\r\n                                            style={{ color: '#fff', textDecoration: 'none' }}\r\n                                            rel=\"noreferrer\"\r\n                                        >\r\n                                            {metamon.token_id}</a></TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{metamon?.score}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{metamon?.level}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{numberWithCommas(metamon.fixed_price)} (~{(raca * metamon.fixed_price).toFixed(2)})</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Metamon;\r\n\r\n","import { Button, TextField, Box } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handlePower, handleSort, handleFilterName, handleTokenId } from '../../app/actions';\r\n\r\nconst InputFilters = () => {\r\n    const { min, max, sort } = useSelector(state => state.filtersElemon);\r\n    const [minPower, setMinPower] = useState(min);\r\n    const [maxPower, setMaxPower] = useState(max);\r\n    const [sortPrice, setSortPrice] = useState(sort)\r\n    const [tokenId, setTokenId] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n    const handleMinPower = (event) => {\r\n        setMinPower(event.target.value);\r\n    }\r\n    const handleMaxPower = (event) => {\r\n        setMaxPower(event.target.value);\r\n    }\r\n    const handleSortPrice = (event) => {\r\n        setSortPrice(event.target.value);\r\n        dispatch(handleSort(event.target.value));\r\n    }\r\n    const handleName = (event) => {\r\n        dispatch(handleFilterName(event.target.value))\r\n    }\r\n    const handleSubmit = () => {\r\n        dispatch(handlePower({ minPower, maxPower }));\r\n        setSortPrice(0);\r\n    }\r\n    // const changeTokenId = (e) => {\r\n    //     setTokenId(e.target.value)\r\n    // }\r\n    useEffect(() => {\r\n        setMinPower(min)\r\n    },[min])\r\n    const changeTokenId = (e) => {\r\n        dispatch(handleTokenId(e.target?.value))\r\n    }\r\n    return (\r\n        <div className=\"filters\">\r\n            <div className=\"filter-content\">\r\n                <div className=\"filter-top\">\r\n                    <select onChange={handleSortPrice} className=\"market__select\">\r\n                        <option value=\"0\">Lowest price</option>\r\n                        <option value=\"1\">Highest price</option>\r\n                        <option value=\"2\">Lowest Point</option>\r\n                        <option value=\"3\">Highest Point</option>\r\n                    </select>\r\n                    <select onChange={e => handleName(e)} className=\"market__select\">\r\n                        <option value=\"0\">Elemon name</option>\r\n                        <option value=\"4\">Neikoo</option>\r\n                        <option value=\"8\">Skurumi</option>\r\n                        <option value=\"9\">RusMoonch</option>\r\n                        <option value=\"10\">PoxArchies</option>\r\n                        <option value=\"11\">Legolas</option>\r\n                        <option value=\"12\">Mykasa</option>\r\n                        <option value=\"15\">Hyugar</option>\r\n                        <option value=\"16\">Inori</option>\r\n                        <option value=\"22\">Kuroo</option>\r\n                        <option value=\"17\">Elight</option>\r\n                        <option value=\"20\">Finter</option>\r\n                        <option value=\"21\">Ties</option>\r\n                        <option value=\"26\">Hoorus</option>\r\n                        <option value=\"6\">Raizer</option>\r\n                        <option value=\"19\">Scary</option>\r\n                        <option value=\"13\">Cokoner</option>\r\n                    </select>\r\n                    <input onBlur={changeTokenId} className=\"market__input\" placeholder=\"Elemon Id\" value={tokenId} type='number' />\r\n\r\n                    <Box className='filter_power'>\r\n                        <TextField value={minPower} onChange={handleMinPower} sx={{ width: 100, marginRight: '0.5rem' }} id=\"min-power\" label=\"Min\" variant=\"standard\" type='number' />\r\n                        <TextField value={maxPower} onChange={handleMaxPower} sx={{ width: 100, marginRight: '0.5rem' }} id=\"max-power\" label=\"Max\" variant=\"standard\" type='number' />\r\n                        <Button sx={{ height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={handleSubmit}>Confirm</Button>\r\n                    </Box>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InputFilters;\r\n","import React from 'react';\r\nimport '../../styles/elemon.css';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\n\r\nconst InfoCard = ({ elemon }) => {\r\n    const rarity = ['B', 'A', 'S', 'SS', 'SSS'];\r\n    const classes = [\r\n        'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel', 'Fairy'\r\n    ]\r\n    const isOwner = elemon.ownerAddress === '0x10201091597635eC7b8e208306E6aDCC7c167925';\r\n    const URI = 'https://app.elemon.io';\r\n    const bodyPart = [elemon.bodyPart1, elemon.bodyPart2, elemon.bodyPart3, elemon.bodyPart4, elemon.bodyPart5, elemon.bodyPart6];\r\n\r\n    return (\r\n        <div className=\"character-item owner\">\r\n            <div className=\"head\">\r\n                <p className=\"id\">ID: {elemon.tokenId}</p>\r\n                <div className=\"character-type\">\r\n                    <img img-rarity=\"\" src={`${URI}/assets/images/rarity_${rarity[elemon.rarity - 1]}.png`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"img\">\r\n                    <div className=\"img-left\">\r\n                        <div className=\"icon\">\r\n                            <img src={`${URI}/assets/images/element/${classes[elemon.class - 1]}.png`} /></div>\r\n                        <p className=\"icon_text\">\r\n                            <span>\r\n                                <img src={`${URI}/assets/images/purity_${elemon.purity == 0 ? 'Hybrid' : 'Pure'}.png`} style={{ width: '100%' }} />\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <img img-elemon=\"\" src={`https://statics.elemon.io/avatar/${elemon.baseCardId}/${elemon.baseCardId}_${bodyPart.join('_')}.png`} className=\"main\" />\r\n                    <div className={`img_aura quality_${elemon.quality}`}></div>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <p className=\"price\">\r\n                        <img src={`${URI}/assets/images/busd_ticker.png`} width=\"40\" alt=\"\" />\r\n                        {elemon.lastPrice / 1000000000000000000} BUSD\r\n                    </p>\r\n                    <div className=\"element\">\r\n                        <div className=\"icon\">\r\n                            <img src={`${URI}/assets/images/icon-power.png`} alt=\"\" />\r\n\r\n                        </div>\r\n                        <p className=\"element__name\" data-power=\"\">{numberWithCommas(elemon.point)}</p>\r\n                    </div>\r\n                    <a target='_blank' href={`https://app.elemon.io/elemon/${elemon.tokenId}`} className={`box__btn buy ${isOwner ? 'owner' : ''}`} type=\"button\">\r\n                        {isOwner ? 'My Elemon' : \"Info\"}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default InfoCard;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport InputFilters from './InputFilters';\r\nimport '../../styles/elemon.css';\r\nimport { Box, CircularProgress, Grid } from '@mui/material';\r\nimport InfoCard from './InfoCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handlePower } from '../../app/actions';\r\n\r\n\r\nconst getElemonItem = (pageNumber = 1, pageSize = 20, priceMode = 2, baseCardId, tokenId, rarities, classes, purities) => {\r\n    return axios.get(`https://app.elemon.io/market/getElemonItems?pageNumber=${pageNumber}&pageSize=${pageSize}&positionType=2&priceMode=${priceMode}&baseCardId=&tokenId=&rarities=&classes=&purities=`).then(res => res.data, {\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    });\r\n}\r\nconst getElemonInfo = (listElemon) => {\r\n    const listTokenId = listElemon.map(item => item.tokenId);\r\n    return axios.get(`https://app.elemon.io/elemon/GetElemonInfo?tokenId=${listTokenId?.join(',')}`).then(res => res.data, {\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    }).catch(error => (error));\r\n}\r\n\r\nconst Elemon = () => {\r\n    const [listElemon, setListElemon] = useState([]);\r\n    const [listElemonInfo, setListElemonInfo] = useState([]);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [loading, setLoading] = useState(true);\r\n    const [listFilter, setListFilter] = useState([]);\r\n    const [myNFT, setMyNFT] = useState();\r\n    const { min, max, sort, name, tokenId } = useSelector(state => state.filtersElemon)\r\n\r\n    const dispatch = useDispatch();\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await getElemonItem(1, 100).then(async (res) => {\r\n                await getElemonItem(1, res.paging.totalCount).then(res => setListElemon(res.data));\r\n            });\r\n        }\r\n        getData();\r\n        convertDateTime()\r\n\r\n        return () => {\r\n            setListElemon([]);\r\n        }\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        const getInfo = async () => {\r\n            setLoading(true)\r\n            const size = 250;\r\n            const lengthList = listElemon.length;\r\n            const loop = lengthList % size === 0 ? lengthList / size : lengthList / size + 1;\r\n            for (let i = 1; i <= loop; i++) {\r\n                const amount = lengthList % size !== 0 && lengthList - (i * size) < 0 ? ((i - 1) * size) + (lengthList % size) : i * size\r\n                await getElemonInfo(listElemon?.slice((i - 1) * size, amount)).then(res => {\r\n                    const listInfo = listElemon.slice((i - 1) * size, amount).map((item, index) => {\r\n                        try {\r\n                            if (item.ownerAddress === '0x10201091597635eC7b8e208306E6aDCC7c167925' && index != undefined) {\r\n                                item.point = res.data[index]?.point;\r\n                                dispatch(handlePower({ minPower: item.point - (item.point % 100000 + 50000), maxPower: max }))\r\n                                setMyNFT(item);\r\n                            }\r\n                            return {\r\n                                ...item,\r\n                                point: res?.data[index]?.point,\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            console.log(err)\r\n                        }\r\n                    });\r\n                    setListElemonInfo(pre => pre.concat(listInfo))\r\n                })\r\n            }\r\n\r\n            setLoading(false);\r\n        }\r\n        getInfo();\r\n        return () => {\r\n            setListElemonInfo([]);\r\n        }\r\n    }, [listElemon]);\r\n    useEffect(() => {\r\n        const filter = listElemonInfo.filter(elemon => {\r\n            let maxP = max;\r\n            let minP = min;\r\n            if (tokenId) {\r\n                return elemon.tokenId == tokenId;\r\n            } else {\r\n                const checkPower = (power, type) => {\r\n                    if (!power)\r\n                        return true;\r\n                    return type == 1 ? elemon?.point >= power : elemon?.point <= power\r\n                }\r\n                if (Number(name) !== 0) {\r\n                    return checkPower(minP, 1) && checkPower(maxP, 2) && elemon.baseCardId == name;\r\n                }\r\n                return checkPower(minP, 1) && checkPower(maxP, 2)\r\n            }\r\n        }).sort((a, b) => {\r\n            switch (Number(sort)) {\r\n                case 0:\r\n                    return a.lastPrice >= b.lastPrice ? 1 : -1;\r\n                case 1:\r\n                    return a.lastPrice <= b.lastPrice ? 1 : -1;\r\n                case 2:\r\n                    return a.point >= b.point ? 1 : -1;\r\n                case 3:\r\n                    return a.point <= b.point ? 1 : -1;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n\r\n        setListFilter(filter)\r\n        return () => {\r\n            setListFilter([])\r\n        }\r\n    }, [loading, min, max, sort, name, tokenId]);\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{ textAlign: 'center' }}>\r\n                <InputFilters />\r\n                <p className='timeUpdate'>{timeUpdated}</p>\r\n                <Grid container spacing={1}>\r\n                    {myNFT && (\r\n                        <Grid item xs={6} md={4} lg={2.2}>\r\n                            <InfoCard elemon={myNFT} />\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {listFilter && listFilter?.slice(0, 100).map((item, index) => (\r\n                        <Grid key={index} item xs={6} md={4} lg={2.2}>\r\n                            <InfoCard elemon={item} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                {loading && <CircularProgress />}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Elemon;\r\n","import { useState } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel';\r\nimport NFTs from './NFTs/NFTs';\r\nimport Sales from './Sales/Sales';\r\nimport Metamon from './Metamon/Metamon'\r\nimport Elemon from './Elemon/Elemon'\r\nimport '../App.css'\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nconst HeaderTabs = (props) => {\r\n    const myStorage = window.localStorage;\r\n    const getTab = myStorage.getItem('tab') === undefined ? 0 : myStorage.getItem('tab');\r\n    const [value, setValue] = useState(Number(getTab));\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        myStorage.setItem('tab', newValue);\r\n\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Box id=\"tabs\" sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <Tabs value={value} sx={{ color: '#ffffff' }} onChange={handleChange}>\r\n                    <Tab label=\"Raca\" {...a11yProps(0)} />\r\n                    <Tab label=\"Metamon\" {...a11yProps(1)} />\r\n                    <Tab label=\"Elemon\" {...a11yProps(2)} />\r\n                    <Tab label=\"Sales\" {...a11yProps(3)} />\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n                <NFTs />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Metamon />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Elemon />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n                <Sales />\r\n            </TabPanel>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HeaderTabs;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport { updatePriceAuto } from './app/actions';\nimport HeaderTabs from './components/Tabs';\nimport axios from \"axios\"\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const getPrice = async () => {\n    const { elmon, raca, btc } = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=radio-caca,elemon,bitcoin&vs_currencies=usd').then(res => {\n      return {\n        raca: res.data['radio-caca'].usd,\n        elmon: res.data['elemon'].usd,\n        btc: res.data['bitcoin'].usd,\n      }\n    });\n    const elcoin = await axios.get('https://api.pancakeswap.info/api/v2/tokens/0x092ffbc968203b652b08361adec75e275573f2db').then(res => Number(res.data.data.price).toFixed(8));\n    document.title = raca + \" - Marketplace RACA\"\n    dispatch(updatePriceAuto({ raca, elmon, elcoin, btc }))\n  }\n  useEffect(() => {\n    getPrice()\n    const updatePrice = setInterval(async () => {\n      getPrice()\n    }, 20000)\n\n    return () => {\n      clearInterval(updatePrice)\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <HeaderTabs />\n    </div>\n\n  );\n}\n\nexport default App;\n","\r\nconst myStorage = window.localStorage;\r\n\r\nconst initState = {\r\n    filters: {\r\n        minScore: myStorage.getItem('metamon') === undefined ? 315 : JSON.parse(myStorage.getItem('metamon'))?.score,\r\n        level: myStorage.getItem('metamon') === undefined ? 20 : JSON.parse(myStorage.getItem('metamon'))?.levelMetamon,\r\n        arrange: 0,\r\n    },\r\n    price: {\r\n        raca: 0,\r\n        elmon: 0,\r\n        elcoin: 0,\r\n        btc: 0,\r\n    },\r\n    filtersElemon: {\r\n        sort: 0,\r\n        name: 0,\r\n        tokenId: '',\r\n        rarity: '',\r\n        purity: '',\r\n        price: '',\r\n        min: '',\r\n        max: '',\r\n    },\r\n    tab: 0,\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'handleFilters':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    minScore: action.payload.minScore,\r\n                    level: action.payload.level\r\n                }\r\n            }\r\n        case 'handleArrange':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    arrange: action.payload\r\n                }\r\n            }\r\n        case 'handlePower':\r\n            return {\r\n                ...state,\r\n                filtersElemon: {\r\n                    ...state.filtersElemon,\r\n                    min: action.payload.min,\r\n                    max: action.payload.max,\r\n                }\r\n            }\r\n        case 'handleSort':\r\n            return {\r\n                ...state,\r\n                filtersElemon: {\r\n                    ...state.filtersElemon,\r\n                    sort: action.payload\r\n                }\r\n            }\r\n        case 'handleName':\r\n            return {\r\n                ...state,\r\n                filtersElemon: {\r\n                    ...state.filtersElemon,\r\n                    name: action.payload\r\n                }\r\n            }\r\n        case 'handleTokenId':\r\n            return {\r\n                ...state,\r\n                filtersElemon: {\r\n                    ...state.filtersElemon,\r\n                    tokenId: action.payload\r\n                }\r\n            }\r\n        case 'updatePrice':\r\n            return {\r\n                ...state,\r\n                price: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer;\r\n\r\n","import { createStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './app/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode >\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}