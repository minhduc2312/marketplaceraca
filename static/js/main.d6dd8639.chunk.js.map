{"version":3,"sources":["app/actions.js","components/TabPanel.js","components/NFTs/Card.js","components/NFTs/SwapRaca.js","components/NFTs/NFTs.js","components/Sales/Sales.js","components/Metamon/InputSelect.js","components/Metamon/Metamon.js","components/Elemon/InputFilters.js","components/Elemon/InfoCard.js","components/Elemon/Elemon.js","context/AppContext.js","components/Metamask.js","components/MarketHistory.js","components/Tabs.js","App.js","app/reducer.js","app/store.js","reportWebVitals.js","index.js"],"names":["handleArrange","arrange","type","payload","handlePower","min","minPower","max","maxPower","TabPanel","props","children","value","index","other","role","hidden","id","sx","color","Box","span","Typography","component","Card","x","nft","name","image_url","fixed_price","raca","useSelector","state","price","className","alt","src","style","fontSize","fontWeight","lineHeight","whiteSpace","textOverflow","margin","toString","replace","toFixed","SwapRacaToUSD","useState","inputRaca","setInputRaca","usdPrice","setUsdPrice","handleChange","e","a","target","useEffect","onChange","getAPI","categoryId","size","axios","ConvertDDMM","datetime","toLocaleString","split","date","time","join","getStatsPotion","numberWithCommas","NFTs","listMetamon","setListMetamon","listDiamond","setListDiamond","listEgg","setListEgg","listPotion","setListPotion","kissUpLand","setKissUpLand","BigGreen","setBigGreen","MetamonR","setMetamonR","MMLand","setMMLand","tokenPrice","setTokenPrice","timeUpdated","setTimeUpdated","listStats","setListStats","listStatsPotion","setListStatsPotion","convertDateTime","now","Date","elmon","elcoin","btc","getData","Promise","all","then","res","data","list","document","querySelector","classList","toggle","rerender","setInterval","clearInterval","SwapRaca","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","width","height","objectFit","TableBody","map","child","scope","Math","floor","position","left","marginTop","item","paddingLeft","count","timestamp","InputSelect","getFilter","dispatch","useDispatch","filters","myStorage","window","localStorage","setArrange","minScore","setMinScore","level","setLevel","Container","display","alignItems","TextField","marginRight","label","variant","Button","onClick","handleFilters","setItem","JSON","stringify","score","levelMetamon","FormControl","Select","labelId","event","MenuItem","pageNo","Metamon","listShow","setListShow","showInfo","getListMetamon","listData","i","total","concat","sortBy","filter","sort","b","Number","slice","textAlign","metamon","onMouseEnter","href","textDecoration","rel","token_id","InputFilters","filtersElemon","setMinPower","setMaxPower","setSortPrice","tokenId","handleSort","onBlur","placeholder","background","InfoCard","elemon","isOwner","ownerAddress","URI","bodyPart","bodyPart1","bodyPart2","bodyPart3","bodyPart4","bodyPart5","bodyPart6","rarity","class","purity","baseCardId","quality","lastPrice","point","getElemonItem","pageNumber","pageSize","priceMode","get","headers","getElemonInfo","listElemon","listTokenId","catch","error","Elemon","setListElemon","listElemonInfo","setListElemonInfo","loading","setLoading","listFilter","setListFilter","myNFT","setMyNFT","paging","totalCount","React","getInfo","lengthList","length","loop","amount","listInfo","undefined","err","console","log","pre","maxP","minP","checkPower","power","Grid","container","spacing","xs","md","lg","CircularProgress","AppContext","createContext","AppProvider","appStatus","setAppStatus","currentAccount","setCurrentAccount","checkIfWalletConnected","ethereum","on","request","method","addressArray","connectToWallet","Provider","Metamask","useContext","noUserFound","justifyContent","flexDirection","userLoggedIn","noMetamaskFound","status","app","MarketHistory","historyList","setHistoryList","setLength","totalList","setTotalList","totalBuy","setTotalBuy","totalSell","setTotalSell","getMarketHistory","getHistoryData","isMD","listNFT","listTotal","buy","sell","forEach","includes","token_name","countBuy","fee","countSell","push","getItem","prev","profit","minWidth","minHeight","colSpan","a11yProps","HeaderTabs","getTab","setValue","borderBottom","borderColor","Tabs","newValue","Tab","App","getPrice","usd","title","updatePrice","initState","parse","tab","rootReducer","action","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6dd8639.chunk.js","sourcesContent":["\r\nexport const handleFilters = ({ minScore, level }) => {\r\n    return {\r\n        type: 'handleFilters',\r\n        payload: {\r\n            minScore,\r\n            level\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleArrange = (arrange) => {\r\n    return {\r\n        type: 'handleArrange',\r\n        payload: arrange\r\n    }\r\n}\r\n\r\nexport const updatePriceAuto = (price) => {\r\n    return {\r\n        type: 'updatePrice',\r\n        payload: price,\r\n    }\r\n}\r\n\r\nexport const handlePower = ({ minPower, maxPower }) => {\r\n    return {\r\n        type: 'handlePower',\r\n        payload: {\r\n            min: minPower,\r\n            max: maxPower\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleSort = (sort) => {\r\n    return {\r\n        type: 'handleSort',\r\n        payload: sort,\r\n    }\r\n}\r\n\r\nexport const handleFilterName = (name) => {\r\n    return {\r\n        type: 'handleName',\r\n        payload: name,\r\n    }\r\n}\r\nexport const handleTokenId = (id) => {\r\n    return {\r\n        type: 'handleTokenId',\r\n        payload: id,\r\n    }\r\n}\r\n\r\n\r\n","import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            sx={{ color: '#ffffff' }}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ span: 3 }}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TabPanel;","import { useSelector } from \"react-redux\";\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Card = (props) => {\r\n\r\n    const { name = \"undefined\", id = \"#0000\", image_url = '', fixed_price = '0000' } = props.nft;\r\n    const { raca } = useSelector(state => state.price)\r\n    return (\r\n        <div className='nft'>\r\n            <div className=\"imgBox\">\r\n                <img className='image-nft' alt={name} src={image_url || \"/marketplaceraca/nft.png\"} />\r\n            </div>\r\n            <div className=\"textBox\">\r\n                <p className='name-nft'>{name} #{id}</p>\r\n                <div className='separate'></div>\r\n                <div className='price'>\r\n                    <p style={{\r\n                        color: '#ffffff',\r\n                        fontSize: 20,\r\n                        fontWeight: 700,\r\n                        lineHeight: '32px',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        margin: '0'\r\n                    }}>Price</p>\r\n                    <p className='priceNum'>{`${numberWithCommas(fixed_price)} (~${(fixed_price * raca).toFixed(2)})`}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst SwapRacaToUSD = () => {\r\n    const [inputRaca, setInputRaca] = useState('');\r\n    const [usdPrice, setUsdPrice] = useState(0);\r\n\r\n    const handleChange = async (e) => {\r\n        setInputRaca(e.target.value);\r\n    }\r\n    const { raca } = useSelector(state => state.price)\r\n    useEffect(() => {\r\n        setUsdPrice(() => inputRaca * raca);\r\n    }, [inputRaca, raca])\r\n    return (\r\n        <div id='swap-raca'>\r\n            <input id=\"RACA\" type=\"number\" value={inputRaca} onChange={handleChange} />\r\n            <span> ~ </span>\r\n            <span id=\"USD\">{usdPrice} USD</span>\r\n        </div>\r\n    )\r\n}\r\nexport default SwapRacaToUSD;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SwapRacaToUSD from \"./SwapRaca\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, buttonClasses } from '@mui/material';\r\nimport '../../styles/nfts.css';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst getAPI = (categoryId, size) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst ConvertDDMM = (datetime)=>{\r\n    const [date, time] = datetime.toLocaleString().split(',');\r\n    const [month, day, year] = date.split('/');\r\n    return `${time.split(' ').join('')}`\r\n}\r\nconst getStats = (categoryId) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=10&status=executed&tokenId=-1&category=${categoryId}`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst getStatsPotion = (categoryId) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=10&status=executed&tokenId=-1&category=${categoryId}`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst NFTs = ({ hidden }) => {\r\n    const [listMetamon, setListMetamon] = useState([]);\r\n    const [listDiamond, setListDiamond] = useState([]);\r\n    const [listEgg, setListEgg] = useState([]);\r\n    const [listPotion, setListPotion] = useState([]);\r\n    const [kissUpLand, setKissUpLand] = useState({});\r\n    const [BigGreen, setBigGreen] = useState({});\r\n    const [MetamonR, setMetamonR] = useState({});\r\n    const [MMLand, setMMLand] = useState({});\r\n    const [tokenPrice, setTokenPrice] = useState(0);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [listStats, setListStats] = useState([]);\r\n    const [listStatsPotion, setListStatsPotion] = useState([]);\r\n\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    const { raca, elmon, elcoin, btc } = useSelector(state => state.price)\r\n    const getData = async () => (\r\n        Promise.all([\r\n            getAPI(13, 10).then(res =>\r\n                setListMetamon(res.data.list)\r\n            ),\r\n            getAPI(15, 10).then(res =>\r\n                setListPotion(res.data.list)\r\n            ),\r\n            getAPI(16, 10).then(res =>\r\n                setListDiamond(res.data.list)\r\n            ),\r\n            getAPI(17, 10).then(res =>\r\n                setListEgg(res.data.list)\r\n            ),\r\n            getStats(17).then(res =>\r\n                setListStats(res.data.list)\r\n            ),\r\n            getStatsPotion(15).then(res =>\r\n                setListStatsPotion(res.data.list)\r\n            ),\r\n            getAPI(20, 1).then(res => {\r\n                setKissUpLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(23, 1).then(res => {\r\n                setMetamonR(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(7, 1).then(res => {\r\n                setMMLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(46, 1).then(res => {\r\n                setBigGreen(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n        ])\r\n    )\r\n    useEffect(() => {\r\n        setTokenPrice(raca)\r\n    }, [raca])\r\n    useEffect(() => {\r\n        getData();\r\n        convertDateTime()\r\n        // const formData = new FormData();\r\n        // formData.append('address', \"0x769ba0cb0d89666f7506194d2cf416ea0f812e16\");\r\n        // formData.append('sign', \"0x6987eccb7cdef2820794cfbd1067d7322175230d752c5a3f4ed2b5405d7cc2f63a3951cf7e2ba03f1ba447d6c720fc1eb304a2e2fd61b43f7afe72a2cff9d1b11c\");\r\n        // formData.append('msg', \"LogIn-17816549-8c50-98b7-f684-163d8e0eaea4\");\r\n        // const payload = {\r\n        //     address: '0x769ba0cb0d89666f7506194d2cf416ea0f812e16',\r\n        //     sign: '0x6987eccb7cdef2820794cfbd1067d7322175230d752c5a3f4ed2b5405d7cc2f63a3951cf7e2ba03f1ba447d6c720fc1eb304a2e2fd61b43f7afe72a2cff9d1b11c',\r\n        //     msg: 'LogIn-17816549-8c50-98b7-f684-163d8e0eaea4',\r\n        // }\r\n        // axios({\r\n        //     method: 'POST',\r\n        //     url: 'https://metamon-api.radiocaca.com/usm-api/login',\r\n        //     data: formData,\r\n        //     headers: {\r\n        //         \"Content-Type\": \"multipart/form-data\",\r\n        //     }\r\n        // }).then(function (response) {\r\n        //     console.log(response.data)\r\n        //     const formData1 = new FormData();\r\n        //     formData1.append('address', '0x769ba0cb0d89666f7506194d2cf416ea0f812e16')\r\n        //     axios({\r\n        //         method: 'POST',\r\n        //         url: 'https://metamon-api.radiocaca.com/usm-api/getBattleRecord',\r\n        //         data: formData1,\r\n        //         headers: {\r\n        //             \"accessToken\": response.data.data\r\n        //         }\r\n        //     }).then(function (response) {\r\n        //         console.log(response);\r\n        //     })\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error);\r\n        // });\r\n        const rerender = setInterval(() => {\r\n            getData();\r\n            convertDateTime();\r\n        }, 20000)\r\n\r\n        return () => {\r\n            setListMetamon([])\r\n            setListDiamond([])\r\n            setListEgg([])\r\n            setListPotion([])\r\n            setListStats([])\r\n            setKissUpLand({})\r\n            setTokenPrice(0)\r\n            clearInterval(rerender);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div hidden={hidden}>\r\n            <div className=\"priceToken\">\r\n                <p className='tokenPrice'>RACA: {raca}</p>\r\n                <p className='tokenPrice'>ELMON: {elmon}</p>\r\n                <p className='tokenPrice'>ELCOIN: {elcoin}</p>\r\n                <p className='tokenPrice'>BTC: {numberWithCommas(btc)}</p>\r\n            </div>\r\n\r\n            <SwapRacaToUSD />\r\n            <p id='timeUpdated'>{timeUpdated}</p>\r\n            <div className='pricetable'>\r\n                <TableContainer className='table-scroll' component={Paper}>\r\n                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">#</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/metamon.png' alt='Metamon' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/MetamonEgg.png' alt='Egg' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/DiamondYellow.png' alt='DiamondYellow' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/potion.png' alt='Potion' />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listEgg && listMetamon && listDiamond && listPotion && listEgg.map((child, index) => {\r\n                                return (\r\n                                    <TableRow key={index + 1}>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listMetamon[index]?.fixed_price))} (~{(tokenPrice * listMetamon[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listEgg[index]?.fixed_price))} (~{(tokenPrice * listEgg[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listDiamond[index]?.fixed_price))} (~{(tokenPrice * listDiamond[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listPotion[index]?.fixed_price))} (~{(tokenPrice * listPotion[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                    </TableRow>)\r\n                            })\r\n                            }\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div id='xike'>\r\n                    <p>Xìke Captain</p>\r\n                    <img alt='Xike' src='/marketplaceraca/xike.png' />\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"stats-session\">\r\n                <div className='stats'>\r\n                    <div className='header'>\r\n                        <p style={{\r\n                            position: 'absolute',\r\n                            left: '0px',\r\n                            marginTop: '0px',\r\n                        }}>Stats</p>\r\n                        <img width='50px' height='50px' className='symbols' src='/marketplaceraca/MetamonEgg.png' alt='Egg' />\r\n\r\n                    </div>\r\n                    <TableContainer className='table-scroll' component={Paper}>\r\n                        <Table className='tablePrice' aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">#</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <p>Price</p>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <p>Count</p>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <p>Time</p>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {listStats && listStats.map((item, index) => {\r\n                                    return (\r\n                                        <TableRow key={index + 1}>\r\n                                            <TableCell align=\"center\" component='th' scope=\"row\">{index + 1}</TableCell>\r\n                                            <TableCell style={{paddingLeft:'5px'}} align=\"center\">{numberWithCommas(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                            <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                            <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                        </TableRow>)\r\n                                })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n                <div className='stats'>\r\n                    <div className='header'>\r\n                        {/* <p style={{\r\n                            position: 'absolute',\r\n                            left: '0px',\r\n                            marginTop: '0px',\r\n                        }}>Stats</p> */}\r\n                        <img width='50px' height='50px' style={{ objectFit: 'contain' }} className='symbols' src='/marketplaceraca/potion.png' alt='Potion' />\r\n                    </div>\r\n                    <TableContainer className='table-scroll' component={Paper}>\r\n                        <Table className='tablePrice' aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">#</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <p>Price</p>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <p>Count</p>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <p>Time</p>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {listStatsPotion && listStatsPotion.map((item, index) => {\r\n                                    return (\r\n                                        <TableRow key={index + 1}>\r\n                                            <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                            <TableCell align=\"center\" style={{ paddingLeft: '1px' }}>{numberWithCommas(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                            <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                            <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                        </TableRow>)\r\n                                })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n           \r\n            <div className=\"cards\">\r\n                {MetamonR &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={MetamonR} />\r\n                    </div>}\r\n\r\n                {BigGreen &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={BigGreen} />\r\n                    </div>}\r\n\r\n                {MMLand &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={MMLand} />\r\n                    </div>}\r\n\r\n                {kissUpLand &&\r\n                    <div className=\"card loading\"><Card nft={kissUpLand} />\r\n                    </div>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default NFTs;","import React, { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport { numberWithCommas } from '../NFTs/NFTs'\r\nimport axios from 'axios';\r\nimport { TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, CircularProgress } from '@mui/material';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"../../config\"\r\nimport { collection, getDocs, getFirestore, query, orderBy } from \"firebase/firestore\";\r\nimport '../../styles/sales.css';\r\n\r\n\r\nfunction createData(name, totalSales, totalCost, totalWithdraw, percent) {\r\n    const sales = totalSales * percent / 100;\r\n    const cost = totalCost * percent / 100;\r\n    const profit = (sales - cost);\r\n    const withdraw = totalWithdraw * percent / 100;\r\n    const remain = profit - withdraw;\r\n    return { name, sales, cost, profit, withdraw, remain };\r\n}\r\n\r\nconst getHistory = (page, size) => {\r\n    return axios.get(`https://market-api.radiocaca.com/users/0x10201091597635eC7b8e208306E6aDCC7c167925/histories?pageNo=${page}&pageSize=${size}`);\r\n\r\n}\r\n\r\n\r\nconst Sales = () => {\r\n    const [listHistory, setListHistory] = useState([]);\r\n    const [listSummary, setListSummary] = useState([]);\r\n    const [listWithdraw, setListWithdraw] = useState([]);\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    const handleAddTrans = () => {\r\n        setToggle(prev => !prev)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let total = 0;\r\n        let currentPage = 1;\r\n        let listTemp = [];\r\n        let size = 10;\r\n        const fetchData = async () => {\r\n            do {\r\n                const response = await getHistory(currentPage, size)\r\n                currentPage++;\r\n                total = response.data.total;\r\n                listTemp = [...listTemp, ...response.data.list]\r\n            } while (listTemp.length < total)\r\n\r\n            setListHistory(listTemp)\r\n        }\r\n        fetchData();\r\n\r\n\r\n        const getData = async () => {\r\n            const app = initializeApp(firebaseConfig);\r\n            const db = getFirestore(app);\r\n\r\n            const q = query(collection(db, \"Transaction\"), orderBy(\"time\"));\r\n            const querySnapshot = await getDocs(q);\r\n            const tempList = [];\r\n            querySnapshot.forEach((doc) => {\r\n                tempList.push(doc.data());\r\n            });\r\n\r\n            const newList = tempList.map(item => {\r\n                return {\r\n                    ...item,\r\n                    time: new Date(item.time.seconds * 1000).toLocaleString().split(',')[0]\r\n\r\n                }\r\n            })\r\n            setListWithdraw(newList);\r\n        }\r\n        getData();\r\n        return () => {\r\n            setListHistory([])\r\n            setListWithdraw([])\r\n        }\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(listHistory.filter(item => item.nft_token_id === 407301))\r\n        console.log(listHistory.filter(item => item.nft_token_id === 403545))\r\n        const listSales = listHistory.filter(item => item.nft_token_id === 407301)\r\n        const listCost = listHistory.filter(item => item.nft_token_id === 403545)\r\n        let sumSales = listSales.reduce((prev, curr) => {\r\n            if (curr.time > Date.parse((\"12/28/2021\")) / 1000) {\r\n                curr.fee = Number(curr.amount) * 5 / 100;\r\n            }\r\n            return prev + (Number(curr.amount) - Number(curr.fee))\r\n        }, 0);\r\n        let sumCost = listCost.reduce((prev, curr) => {\r\n            return prev + Number(curr.amount)\r\n        }, 0);\r\n\r\n        let withdraw = 0;\r\n        let cost = 0;\r\n        listWithdraw.forEach((item, index) => {\r\n            if (item.transfer) {\r\n                withdraw += Number(item.amount);\r\n\r\n            } else {\r\n                cost += Number(item.amount);\r\n            }\r\n        }, 0);\r\n        sumCost += cost;\r\n        if (sumSales !== 0)\r\n            sumSales -= 2700;\r\n        setListSummary([\r\n            createData(\"Johny Duc\", sumSales, sumCost, withdraw, 40),\r\n            createData(\"Khang Pug\", sumSales, sumCost, withdraw, 40),\r\n            createData(\"Duc Professor\", sumSales, sumCost, withdraw, 20),\r\n            createData(\"Total\", sumSales, sumCost, withdraw, 100),\r\n        ]);\r\n    }, [listHistory, listWithdraw])\r\n    return (\r\n        <div className=\"sales\">\r\n            <TableContainer id=\"sales-section\" component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"center\">Sales</TableCell>\r\n                            <TableCell align=\"center\">Cost</TableCell>\r\n                            <TableCell align=\"center\">Profit</TableCell>\r\n                            <TableCell align=\"center\">Withdraw</TableCell>\r\n                            <TableCell align=\"center\">Remain</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listHistory && listSummary && listSummary.map((row) => (\r\n                            <TableRow\r\n                                key={row.name}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.sales))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.cost))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.profit))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.withdraw))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.remain))}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        {!listHistory && <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <CircularProgress size='small' color=\"success\" />\r\n                            </TableCell>\r\n                        </TableRow>}\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div id=\"withdraw-history\">\r\n                <h2 style={{\r\n                    textAlign: 'left'\r\n                }}>Withdraw History</h2>\r\n                <div id=\"addTransaction\">\r\n                    <Button\r\n                        size=\"medium\"\r\n                        id=\"toggleButton\"\r\n                        onClick={handleAddTrans}\r\n                        variant=\"contained\" >Add Transaction</Button>\r\n                    {toggle && (\r\n                        <React.StrictMode>\r\n                            <TextField\r\n                                type='number'\r\n                                label=\"Amount\"\r\n                                variant=\"outlined\" size=\"small\"\r\n                                style={{ marginBottom: '10px' }} />\r\n                            <TextField\r\n                                label=\"Notes\" variant=\"outlined\" size=\"small\" id=\"notes\"\r\n                                style={{ marginBottom: '10px' }} />\r\n                            <Button id=\"addButton\" size=\"medium\" variant=\"contained\">Add</Button>\r\n                        </React.StrictMode>\r\n                    )}\r\n                </div>\r\n                <TableContainer id='withdraw' component={Paper}>\r\n                    <Table sx={{ minWidth: 250 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Time</TableCell>\r\n                                <TableCell align=\"center\">Amount</TableCell>\r\n                                <TableCell align=\"center\">Note</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listWithdraw && listWithdraw.map((row, index) => (\r\n                                <TableRow\r\n                                    key={index}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.time}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(row.amount)}</TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(row.notes)}</TableCell>\r\n\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Sales;","import { useState } from 'react';\r\n\r\nimport { MenuItem, FormControl, Select, TextField, Box, Button, Container } from '@mui/material'\r\nimport { handleArrange, handleFilters } from '../../app/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nexport const InputSelect = ({ getFilter }) => {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.filters)\r\n    const myStorage = window.localStorage;\r\n    const [arrange, setArrange] = useState(filters.arrange);\r\n    const [minScore, setMinScore] = useState(filters.minScore);\r\n    const [level, setLevel] = useState(filters.level);\r\n\r\n\r\n    const handleLevelChange = (e) => {\r\n        setLevel(e.target.value);\r\n    }\r\n\r\n    const handleMinScoreChange = (e) => {\r\n        setMinScore(e.target.value);\r\n    }\r\n\r\n    const ArrangeChange = (event) => {\r\n        setArrange(event.target.value);\r\n        dispatch(handleArrange(event.target.value));\r\n       \r\n    };\r\n    const ConfirmHandle = () => {\r\n        dispatch(handleFilters({ minScore, level }));\r\n        setArrange(0)\r\n        myStorage.setItem('metamon', JSON.stringify({\r\n            score: minScore,\r\n            levelMetamon: level\r\n        }))\r\n    }\r\n    return (\r\n        <Container sx={{ marginTop: '20px', color: '#fff', }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                alignItems: 'end'\r\n            }}>\r\n                <TextField value={minScore} onChange={handleMinScoreChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"min-score\" label=\"Min score\" variant=\"standard\" type='number' />\r\n                <TextField value={level} onChange={handleLevelChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"level\" label=\"Level\" variant=\"standard\" type='number' />\r\n                <Button sx={{ color: '#fff', height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={ConfirmHandle}>Confirm</Button>\r\n            </Box>\r\n            <Box>\r\n                <FormControl style={{ margin: '20px 0' }}>\r\n                    <Select\r\n                        size='small'\r\n                        labelId=\"select\"\r\n                        id=\"filter\"\r\n                        value={arrange}\r\n                        onChange={ArrangeChange}\r\n                        sx={{ color: '#fff', }}\r\n                    >\r\n                        <MenuItem value={0}>Lowest Price</MenuItem>\r\n                        <MenuItem value={1}>Highest Level</MenuItem>\r\n                        <MenuItem value={2}>Highest Score</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport React, { createElement, useEffect, useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, cardClasses } from '@mui/material';\r\nimport { InputSelect } from \"./InputSelect\";\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport '../../styles/metamon.css'\r\nimport '../../styles/nfts.css'\r\nimport { handleArrange } from \"../../app/actions\";\r\n\r\n\r\nconst getData = (minScore = 315, level = 1, pageNo = 1) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?saleType&category=13&tokenType&tokenId=-1&pageNo=${pageNo}&pageSize=100&sortBy=single_price&order=asc&min_level=${level}&max_level=60&min_score=${minScore}&max_score=330`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nconst Metamon = () => {\r\n    const { minScore, level, arrange } = useSelector(state => state.filters)\r\n\r\n    const [listMetamon, setListMetamon] = useState([])\r\n    const [listShow, setListShow] = useState([])\r\n    const dispatch = useDispatch();\r\n    const { raca } = useSelector(state => state.price);\r\n\r\n    const showInfo = (e) => {\r\n    }\r\n    const getListMetamon = async () => {\r\n        await getData(minScore, level, 1).then(async (res) => {\r\n            const data = res.data;\r\n            let listData = res.data.list\r\n            // console.log(data.list.total)\r\n            for (let i = 1; i <= Math.floor(data.total / 100); i++) {\r\n                const list = await getData(minScore, level, i + 1).then(res => res.data.list);\r\n                listData = listData.concat(list)\r\n                // console.log(listData)\r\n            }\r\n            setListMetamon(listData)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getListMetamon();\r\n        dispatch(handleArrange(0));\r\n        return () => {\r\n            setListMetamon([])\r\n        }\r\n    }, [minScore, level])\r\n    useEffect(() => {\r\n        //Get list property\r\n        const sortBy = (filter) => {\r\n            return listMetamon.sort((a, b) => {\r\n                if (filter === 'fixed_price') {\r\n                    return Number(a[filter]) - Number(b[filter])\r\n                } else {\r\n                    return Number(b[filter]) - Number(a[filter])\r\n                }\r\n            });\r\n        }\r\n\r\n        switch (arrange) {\r\n            case 0:\r\n                setListShow(sortBy('fixed_price').slice(0, 10));\r\n                break;\r\n            case 1:\r\n                setListShow(sortBy('level').slice(0, 10));\r\n                break;\r\n            case 2:\r\n                setListShow(sortBy('score').slice(0, 10));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return () => {\r\n            setListShow([])\r\n        }\r\n    }, [listMetamon, arrange]);\r\n\r\n    return (\r\n        <Box sx={{ textAlign: 'left' }}>\r\n            <InputSelect />\r\n            <TableContainer className='table-scroll metamon' component={Paper}>\r\n                <Table className='tablePrice' aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                ID\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Score\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Level\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" sx={{ width: '25%' }}>\r\n                                Price\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listShow && listShow.map((metamon, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                    <TableCell id={`metamon-${index + 1}`} onMouseEnter={showInfo} align=\"center\" component=\"th\" scope=\"row\" sx={{ position: 'relative' }}>\r\n                                        <img width='50px' height='50px' src={metamon.image_url} alt='Metamon' />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">\r\n                                        <a href={`https://market.radiocaca.com/#/market-place/${metamon.id}`} target='_blank'\r\n                                            style={{ color: '#fff', textDecoration: 'none' }}\r\n                                            rel=\"noreferrer\"\r\n                                        >\r\n                                            {metamon.token_id}</a></TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.score}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.level}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{numberWithCommas(metamon.fixed_price)} (~{(raca * metamon.fixed_price).toFixed(2)})</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Metamon;\r\n\r\n","import { Button, TextField, Box } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handlePower, handleSort, handleFilterName, handleTokenId } from '../../app/actions';\r\n\r\nconst InputFilters = () => {\r\n    const { min, max, sort } = useSelector(state => state.filtersElemon);\r\n    const [minPower, setMinPower] = useState(min);\r\n    const [maxPower, setMaxPower] = useState(max);\r\n    const [sortPrice, setSortPrice] = useState(sort)\r\n    const [tokenId, setTokenId] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n    const handleMinPower = (event) => {\r\n        setMinPower(event.target.value);\r\n    }\r\n    const handleMaxPower = (event) => {\r\n        setMaxPower(event.target.value);\r\n    }\r\n    const handleSortPrice = (event) => {\r\n        setSortPrice(event.target.value);\r\n        dispatch(handleSort(event.target.value));\r\n    }\r\n    const handleName = (event) => {\r\n        dispatch(handleFilterName(event.target.value))\r\n    }\r\n    const handleSubmit = () => {\r\n        dispatch(handlePower({ minPower, maxPower }));\r\n        setSortPrice(0);\r\n    }\r\n    // const changeTokenId = (e) => {\r\n    //     setTokenId(e.target.value)\r\n    // }\r\n    useEffect(() => {\r\n        setMinPower(min)\r\n    },[min])\r\n    const changeTokenId = (e) => {\r\n        dispatch(handleTokenId(e.target?.value))\r\n    }\r\n    return (\r\n        <div className=\"filters\">\r\n            <div className=\"filter-content\">\r\n                <div className=\"filter-top\">\r\n                    <select onChange={handleSortPrice} className=\"market__select\">\r\n                        <option value=\"0\">Lowest price</option>\r\n                        <option value=\"1\">Highest price</option>\r\n                        <option value=\"2\">Lowest Point</option>\r\n                        <option value=\"3\">Highest Point</option>\r\n                    </select>\r\n                    <select onChange={e => handleName(e)} className=\"market__select\">\r\n                        <option value=\"0\">Elemon name</option>\r\n                        <option value=\"4\">Neikoo</option>\r\n                        <option value=\"8\">Skurumi</option>\r\n                        <option value=\"9\">RusMoonch</option>\r\n                        <option value=\"10\">PoxArchies</option>\r\n                        <option value=\"11\">Legolas</option>\r\n                        <option value=\"12\">Mykasa</option>\r\n                        <option value=\"15\">Hyugar</option>\r\n                        <option value=\"16\">Inori</option>\r\n                        <option value=\"22\">Kuroo</option>\r\n                        <option value=\"17\">Elight</option>\r\n                        <option value=\"20\">Finter</option>\r\n                        <option value=\"21\">Ties</option>\r\n                        <option value=\"26\">Hoorus</option>\r\n                        <option value=\"6\">Raizer</option>\r\n                        <option value=\"19\">Scary</option>\r\n                        <option value=\"13\">Cokoner</option>\r\n                    </select>\r\n                    <input onBlur={changeTokenId} className=\"market__input\" placeholder=\"Elemon Id\" value={tokenId} type='number' />\r\n\r\n                    <Box className='filter_power'>\r\n                        <TextField value={minPower} onChange={handleMinPower} sx={{ width: 100, marginRight: '0.5rem' }} id=\"min-power\" label=\"Min\" variant=\"standard\" type='number' />\r\n                        <TextField value={maxPower} onChange={handleMaxPower} sx={{ width: 100, marginRight: '0.5rem' }} id=\"max-power\" label=\"Max\" variant=\"standard\" type='number' />\r\n                        <Button sx={{ height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={handleSubmit}>Confirm</Button>\r\n                    </Box>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InputFilters;\r\n","import React from 'react';\r\nimport '../../styles/elemon.css';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\n\r\nconst InfoCard = ({ elemon }) => {\r\n    const rarity = ['B', 'A', 'S', 'SS', 'SSS'];\r\n    const classes = [\r\n        'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel', 'Fairy'\r\n    ]\r\n    const isOwner = elemon.ownerAddress === '0x10201091597635eC7b8e208306E6aDCC7c167925';\r\n    const URI = 'https://app.elemon.io';\r\n    const bodyPart = [elemon.bodyPart1, elemon.bodyPart2, elemon.bodyPart3, elemon.bodyPart4, elemon.bodyPart5, elemon.bodyPart6];\r\n\r\n    return (\r\n        <div className=\"character-item owner\">\r\n            <div className=\"head\">\r\n                <p className=\"id\">ID: {elemon.tokenId}</p>\r\n                <div className=\"character-type\">\r\n                    <img img-rarity=\"\" src={`${URI}/assets/images/rarity_${rarity[elemon.rarity - 1]}.png`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"img\">\r\n                    <div className=\"img-left\">\r\n                        <div className=\"icon\">\r\n                            <img src={`${URI}/assets/images/element/${classes[elemon.class - 1]}.png`} /></div>\r\n                        <p className=\"icon_text\">\r\n                            <span>\r\n                                <img src={`${URI}/assets/images/purity_${elemon.purity == 0 ? 'Hybrid' : 'Pure'}.png`} style={{ width: '100%' }} />\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <img img-elemon=\"\" src={`https://statics.elemon.io/avatar/${elemon.baseCardId}/${elemon.baseCardId}_${bodyPart.join('_')}.png`} className=\"main\" />\r\n                    <div className={`img_aura quality_${elemon.quality}`}></div>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <p className=\"price\">\r\n                        <img src={`${URI}/assets/images/busd_ticker.png`} width=\"40\" alt=\"\" />\r\n                        {elemon.lastPrice / 1000000000000000000} BUSD\r\n                    </p>\r\n                    <div className=\"element\">\r\n                        <div className=\"icon\">\r\n                            <img src={`${URI}/assets/images/icon-power.png`} alt=\"\" />\r\n\r\n                        </div>\r\n                        <p className=\"element__name\" data-power=\"\">{numberWithCommas(elemon.point)}</p>\r\n                    </div>\r\n                    <a target='_blank' href={`https://app.elemon.io/elemon/${elemon.tokenId}`} className={`box__btn buy ${isOwner ? 'owner' : ''}`} type=\"button\">\r\n                        {isOwner ? 'My Elemon' : \"Info\"}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default InfoCard;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport InputFilters from './InputFilters';\r\nimport '../../styles/elemon.css';\r\nimport { Box, CircularProgress, Grid } from '@mui/material';\r\nimport InfoCard from './InfoCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handlePower } from '../../app/actions';\r\n\r\n\r\nconst getElemonItem = (pageNumber = 1, pageSize = 20, priceMode = 2, baseCardId, tokenId, rarities, classes, purities) => {\r\n    return axios.get(`https://app.elemon.io/market/getElemonItems?pageNumber=${pageNumber}&pageSize=${pageSize}&positionType=2&priceMode=${priceMode}&baseCardId=&tokenId=&rarities=&classes=&purities=`).then(res => res.data, {\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    });\r\n}\r\nconst getElemonInfo = (listElemon) => {\r\n    const listTokenId = listElemon.map(item => item.tokenId);\r\n    return axios.get(`https://app.elemon.io/elemon/GetElemonInfo?tokenId=${listTokenId?.join(',')}`).then(res => res.data, {\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    }).catch(error => (error));\r\n}\r\n\r\nconst Elemon = () => {\r\n    const [listElemon, setListElemon] = useState([]);\r\n    const [listElemonInfo, setListElemonInfo] = useState([]);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [loading, setLoading] = useState(true);\r\n    const [listFilter, setListFilter] = useState([]);\r\n    const [myNFT, setMyNFT] = useState();\r\n    const { min, max, sort, name, tokenId } = useSelector(state => state.filtersElemon)\r\n\r\n    const dispatch = useDispatch();\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await getElemonItem(1, 100).then(async (res) => {\r\n                await getElemonItem(1, res.paging.totalCount).then(res => setListElemon(res.data));\r\n            });\r\n        }\r\n        getData();\r\n        convertDateTime()\r\n\r\n        return () => {\r\n            setListElemon([]);\r\n        }\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        const getInfo = async () => {\r\n            setLoading(true)\r\n            const size = 250;\r\n            const lengthList = listElemon.length;\r\n            const loop = lengthList % size === 0 ? lengthList / size : lengthList / size + 1;\r\n            for (let i = 1; i <= loop; i++) {\r\n                const amount = lengthList % size !== 0 && lengthList - (i * size) < 0 ? ((i - 1) * size) + (lengthList % size) : i * size\r\n                await getElemonInfo(listElemon?.slice((i - 1) * size, amount)).then(res => {\r\n                    const listInfo = listElemon.slice((i - 1) * size, amount).map((item, index) => {\r\n                        try {\r\n                            if (item.ownerAddress === '0x10201091597635eC7b8e208306E6aDCC7c167925' && index != undefined) {\r\n                                item.point = res.data[index]?.point;\r\n                                dispatch(handlePower({ minPower: item.point - (item.point % 100000 + 50000), maxPower: max }))\r\n                                setMyNFT(item);\r\n                            }\r\n                            return {\r\n                                ...item,\r\n                                point: res?.data[index]?.point,\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            console.log(err)\r\n                        }\r\n                    });\r\n                    setListElemonInfo(pre => pre.concat(listInfo))\r\n                })\r\n            }\r\n\r\n            setLoading(false);\r\n        }\r\n        getInfo();\r\n        return () => {\r\n            setListElemonInfo([]);\r\n        }\r\n    }, [listElemon]);\r\n    useEffect(() => {\r\n        const filter = listElemonInfo.filter(elemon => {\r\n            let maxP = max;\r\n            let minP = min;\r\n            if (tokenId) {\r\n                return elemon.tokenId == tokenId;\r\n            } else {\r\n                const checkPower = (power, type) => {\r\n                    if (!power)\r\n                        return true;\r\n                    return type == 1 ? elemon?.point >= power : elemon?.point <= power\r\n                }\r\n                if (Number(name) !== 0) {\r\n                    return checkPower(minP, 1) && checkPower(maxP, 2) && elemon.baseCardId == name;\r\n                }\r\n                return checkPower(minP, 1) && checkPower(maxP, 2)\r\n            }\r\n        }).sort((a, b) => {\r\n            switch (Number(sort)) {\r\n                case 0:\r\n                    return a.lastPrice >= b.lastPrice ? 1 : -1;\r\n                case 1:\r\n                    return a.lastPrice <= b.lastPrice ? 1 : -1;\r\n                case 2:\r\n                    return a.point >= b.point ? 1 : -1;\r\n                case 3:\r\n                    return a.point <= b.point ? 1 : -1;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n\r\n        setListFilter(filter)\r\n        return () => {\r\n            setListFilter([])\r\n        }\r\n    }, [loading, min, max, sort, name, tokenId]);\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{ textAlign: 'center' }}>\r\n                <InputFilters />\r\n                <p className='timeUpdate'>{timeUpdated}</p>\r\n                <Grid container spacing={1}>\r\n                    {myNFT && (\r\n                        <Grid item xs={6} md={4} lg={2.2}>\r\n                            <InfoCard elemon={myNFT} />\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {listFilter && listFilter?.slice(0, 100).map((item, index) => (\r\n                        <Grid key={index} item xs={6} md={4} lg={2.2}>\r\n                            <InfoCard elemon={item} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                {loading && <CircularProgress />}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Elemon;\r\n","import { createContext, useEffect, useState } from 'react'\r\nimport useRouter from './useRouter'\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [appStatus, setAppStatus] = useState('loading')\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n\r\n    useEffect(() => {\r\n        checkIfWalletConnected();\r\n        window.ethereum?.on('accountsChanged', async () => {\r\n            checkIfWalletConnected();\r\n        })\r\n    }, [])\r\n\r\n    const checkIfWalletConnected = async () => {\r\n        if (!window.ethereum) return setAppStatus('noMetamask')\r\n        try {\r\n            const addressArray = await window.ethereum.request({\r\n                method: 'eth_accounts',\r\n            })\r\n           \r\n            if (addressArray.length > 0) {\r\n                //connected\r\n                setAppStatus('connected');\r\n                setCurrentAccount(addressArray[0]);\r\n            } else {\r\n                // not connected\r\n                setAppStatus('not-connected');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            setAppStatus('error')\r\n\r\n        }\r\n    }\r\n\r\n    const connectToWallet = async () => {\r\n        if (!window.ethereum) return setAppStatus('noMetamask')\r\n\r\n        try {\r\n            setAppStatus('loading');\r\n            // console.log('asdsad')\r\n            // console.log(window.ethereum);\r\n            const addressArray = await window.ethereum.request({\r\n                method: 'eth_requestAccounts',\r\n            })\r\n            if (addressArray.length > 0) {\r\n                setAppStatus('connected')\r\n                setCurrentAccount(addressArray[0])\r\n            } else {\r\n                setAppStatus('not-connected')\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setAppStatus('error')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ appStatus, currentAccount, connectToWallet }}>{children}</AppContext.Provider>\r\n    )\r\n}","import { Button, buttonGroupClasses } from '@mui/material';\r\nimport React, { useContext } from 'react'\r\nimport { AppContext } from '../context/AppContext'\r\n\r\nconst Metamask = () => {\r\n    const { appStatus, connectToWallet, currentAccount } = useContext(AppContext);\r\n    const app = (status = appStatus) => {\r\n        switch (status) {\r\n            case 'connected':\r\n                return userLoggedIn\r\n\r\n            case 'not-connected':\r\n                return noUserFound\r\n\r\n            case 'noMetamask':\r\n                return noMetamaskFound\r\n\r\n            case 'error':\r\n                return error\r\n\r\n            default:\r\n                return loading\r\n        }\r\n    }\r\n\r\n    const noUserFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <Button sx={{ height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={() => connectToWallet()}>Connect to wallet</Button>\r\n        </div>\r\n    )\r\n    const userLoggedIn = (\r\n        <div>{currentAccount}</div>\r\n    )\r\n    const noMetamaskFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <p> You must install Metamask, a <br /> virtual Ethereum wallet, in your browser</p>\r\n        </div>\r\n\r\n    )\r\n    const error = (\r\n         <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img width={`100px`} height='100px' src='/marketplaceraca/error.png' />\r\n            <p>An error occurred. Please try again later or use another browser</p>\r\n        </div>\r\n    )\r\n    const loading = (\r\n        <div> Loading... </div>\r\n    )\r\n    return (\r\n        <div>{app(appStatus)}</div>\r\n    )\r\n}\r\n\r\nexport default Metamask","import React, { useContext, useEffect, useState } from 'react'\r\nimport Metamask from './Metamask'\r\nimport { TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, CircularProgress, Table } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { AppContext } from '../context/AppContext';\r\nimport { numberWithCommas } from './NFTs/NFTs';\r\nimport WalletConnect from \"@walletconnect/client\";\r\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\r\n\r\n\r\nconst MarketHistory = () => {\r\n  const { currentAccount } = useContext(AppContext);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  const [historyList, setHistoryList] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [totalList, setTotalList] = useState([])\r\n  const [totalBuy, setTotalBuy] = useState('');\r\n  const [totalSell, setTotalSell] = useState('');\r\n  const getMarketHistory = (pageNo, pageSize) => {\r\n    return axios(`https://market-api.radiocaca.com/users/${currentAccount}/histories?pageNo=${pageNo}&pageSize=${pageSize}`).then(res => res.data)\r\n  }\r\n  useEffect(() => {\r\n    const getHistoryData = async () => {\r\n      let pageNo = 1;\r\n      let pageSize = 10;\r\n      const isMD = currentAccount == '0x769ba0cb0d89666f7506194d2cf416ea0f812e16';\r\n      getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n        setLength(res.total);\r\n        setHistoryList(pre => pre.concat(res.list));\r\n        const loop = isMD ? Math.floor(res.total / 10) : Math.floor(res.total / 10) + 1;\r\n        for (let i = 2; i <= loop; i++) {\r\n          if (i == 10)\r\n            continue;\r\n          const listData = await getMarketHistory(i, pageSize);\r\n          setHistoryList(pre => pre.concat(listData.list))\r\n        }\r\n      })\r\n      if (isMD) {\r\n        getMarketHistory(10, 5).then(res => setHistoryList(pre => pre.concat(res.list)))\r\n        // getMarketHistory(10, 5).then(res => setHistoryList(pre => pre.concat(res.list)))\r\n        getMarketHistory(3, 48).then(res => setHistoryList(pre => pre.concat(res.list)))\r\n      }\r\n\r\n    }\r\n\r\n    if (currentAccount) {\r\n      setLoading(true)\r\n      getHistoryData();\r\n    }\r\n    return () => {\r\n      setHistoryList([])\r\n    }\r\n  }, [currentAccount])\r\n\r\n  useEffect(() => {\r\n    console.log(historyList);\r\n    console.log(length);\r\n\r\n    const listNFT = [];\r\n    const listTotal = [];\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let lengthList = length;\r\n    if (currentAccount == '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n      lengthList--;\r\n    }\r\n    if (historyList.length == lengthList && historyList.length != 0) {\r\n      historyList.forEach(item => {\r\n        if (!listNFT.includes(item.token_name)) {\r\n          listNFT.push(item.token_name)\r\n          listTotal.push({\r\n            token_name: item.token_name,\r\n            totalBuy: item.type === 'Buy' ? item.amount : 0,\r\n            totalSell: item.type === 'Sell' ? item.amount - item.fee : 0,\r\n            countBuy: item.type === 'Buy' ? item.count : 0,\r\n            countSell: item.type === 'Sell' ? item.count : 0,\r\n          })\r\n        } else {\r\n          if (item.type == 'Buy') {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalBuy += item.amount;\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countBuy += item.count;\r\n          }\r\n          else {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalSell += item.amount - item.fee\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countSell += item.count\r\n          }\r\n        }\r\n        if (item.type == 'Buy') {\r\n          buy += item.amount\r\n        }\r\n        else {\r\n          sell += item.amount - item.fee\r\n        }\r\n      })\r\n      setTotalBuy(buy);\r\n      setTotalSell(sell);\r\n      // console.log(listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0]?.totalSell)\r\n      if (currentAccount == '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n        const getItem = listTotal.filter(name => name.token_name == \"Metamon Egg#204900010231\")[0];\r\n        getItem.totalSell = 100000;\r\n        setTotalSell(prev => prev + getItem.totalSell)\r\n      }\r\n\r\n      setTotalList(listTotal.map(item => {\r\n        return {\r\n          ...item,\r\n          profit: item.totalSell - item.totalBuy\r\n        }\r\n      }))\r\n      setLoading(false);\r\n      // console.log(listTotal)\r\n    }\r\n\r\n  }, [historyList])\r\n\r\n  return (\r\n    <div>\r\n      <Metamask />\r\n      {currentAccount && (\r\n        <div className=\"sales\">\r\n          <TableContainer id=\"sales-section\" component={Paper}>\r\n            <Table sx={{ minWidth: 650, minHeight: 150 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell component='th' align='center'>NFT</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <TableCell component='td' className='multiRow'>\r\n                      <TableRow >Buy</TableRow>\r\n                      <TableRow>\r\n                        <TableCell component='td'>Amount</TableCell>\r\n                        <TableCell component='td'>Count</TableCell>\r\n                      </TableRow>\r\n                    </TableCell>\r\n\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <TableCell component='td' className='multiRow'>\r\n                      <TableRow>Sell</TableRow>\r\n                      <TableRow >\r\n                        <TableCell component='td'>Amount</TableCell>\r\n                        <TableCell component='td'>Count</TableCell>\r\n                      </TableRow>\r\n                    </TableCell>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">Profit</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {totalList.length !== 0 && totalList.map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell component='th'>{item.token_name}</TableCell>\r\n                    <TableCell>\r\n                      <TableRow className='multiCell'>\r\n                        <TableCell >{numberWithCommas(Math.floor(item.totalBuy))}</TableCell>\r\n                        <TableCell >{numberWithCommas(Math.floor(item.countBuy))}</TableCell>\r\n                      </TableRow>\r\n                    </TableCell>\r\n\r\n                    <TableCell>\r\n                      <TableRow className='multiCell'>\r\n                        <TableCell >{numberWithCommas(Math.floor(item.totalSell))}</TableCell>\r\n                        <TableCell >{numberWithCommas(Math.floor(item.countSell))}</TableCell>\r\n                      </TableRow>\r\n                    </TableCell>\r\n                    <TableCell>{numberWithCommas(Math.floor(item.profit))}</TableCell>\r\n\r\n                  </TableRow>\r\n                ))}\r\n                {totalList.length !== 0 && (\r\n                  <TableRow >\r\n                    <TableCell component='th'>Total</TableCell>\r\n                    <TableCell>{numberWithCommas(Math.floor(totalBuy))}</TableCell>\r\n                    <TableCell>{numberWithCommas(Math.floor(totalSell))}</TableCell>\r\n                    <TableCell>{numberWithCommas(Math.floor(totalSell - totalBuy))}</TableCell>\r\n                  </TableRow>\r\n                )}\r\n                <TableRow >\r\n                  <TableCell colSpan={4} align='center' style={{ textAlign: 'center' }}>\r\n                    {loading && <CircularProgress color=\"primary\" />}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarketHistory","import { useState } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel';\r\nimport NFTs from './NFTs/NFTs';\r\nimport Sales from './Sales/Sales';\r\nimport Metamon from './Metamon/Metamon'\r\nimport Elemon from './Elemon/Elemon'\r\nimport '../App.css'\r\nimport Metamask from './Metamask';\r\nimport MarketHistory from './MarketHistory';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nconst HeaderTabs = (props) => {\r\n    const myStorage = window.localStorage;\r\n    const getTab = myStorage.getItem('tab') === undefined ? 0 : myStorage.getItem('tab');\r\n    const [value, setValue] = useState(Number(getTab));\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        myStorage.setItem('tab', newValue);\r\n\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Box id=\"tabs\" sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <Tabs value={value} sx={{ color: '#ffffff' }} onChange={handleChange}>\r\n                    <Tab label=\"Raca\" {...a11yProps(0)} />\r\n                    <Tab label=\"Metamon\" {...a11yProps(1)} />\r\n                    <Tab label=\"Elemon\" {...a11yProps(2)} />\r\n                    <Tab label=\"Sales\" {...a11yProps(3)} />\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n                <NFTs />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Metamon />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Elemon />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n                <MarketHistory />\r\n            </TabPanel>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HeaderTabs;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport { updatePriceAuto } from './app/actions';\nimport HeaderTabs from './components/Tabs';\nimport axios from \"axios\"\nimport { AppProvider } from './context/AppContext';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const getPrice = async () => {\n    const { elmon, raca, btc } = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=radio-caca,elemon,bitcoin&vs_currencies=usd').then(res => {\n      return {\n        raca: res.data['radio-caca'].usd,\n        elmon: res.data['elemon'].usd,\n        btc: res.data['bitcoin'].usd,\n      }\n    });\n    const elcoin = await axios.get('https://api.pancakeswap.info/api/v2/tokens/0x092ffbc968203b652b08361adec75e275573f2db').then(res => Number(res.data.data.price).toFixed(8));\n    document.title = raca + \" - Marketplace RACA\"\n    dispatch(updatePriceAuto({ raca, elmon, elcoin, btc }))\n  }\n  useEffect(() => {\n    getPrice()\n    const updatePrice = setInterval(async () => {\n      getPrice()\n    }, 20000)\n\n    return () => {\n      clearInterval(updatePrice)\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <AppProvider>\n        <HeaderTabs />\n      </AppProvider>\n    </div>\n\n  );\n}\n\nexport default App;\n","\r\nconst myStorage = window.localStorage;\r\n\r\nconst initState = {\r\n    filters: {\r\n        minScore: myStorage.getItem('metamon') === undefined ? 315 : JSON.parse(myStorage.getItem('metamon'))?.score,\r\n        level: myStorage.getItem('metamon') === undefined ? 20 : JSON.parse(myStorage.getItem('metamon'))?.levelMetamon,\r\n        arrange: 0,\r\n    },\r\n    price: {\r\n        raca: 0,\r\n        elmon: 0,\r\n        elcoin: 0,\r\n        btc: 0,\r\n    },\r\n    filtersElemon: {\r\n        sort: 0,\r\n        name: 0,\r\n        tokenId: '',\r\n        rarity: '',\r\n        purity: '',\r\n        price: '',\r\n        min: '',\r\n        max: '',\r\n    },\r\n    tab: 0,\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'handleFilters':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    minScore: action.payload.minScore,\r\n                    level: action.payload.level\r\n                }\r\n            }\r\n        case 'handleArrange':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    arrange: action.payload\r\n                }\r\n            }\r\n        case 'handlePower':\r\n            return {\r\n                ...state,\r\n                filtersElemon: {\r\n                    ...state.filtersElemon,\r\n                    min: action.payload.min,\r\n                    max: action.payload.max,\r\n                }\r\n            }\r\n        case 'handleSort':\r\n            return {\r\n                ...state,\r\n                filtersElemon: {\r\n                    ...state.filtersElemon,\r\n                    sort: action.payload\r\n                }\r\n            }\r\n        case 'handleName':\r\n            return {\r\n                ...state,\r\n                filtersElemon: {\r\n                    ...state.filtersElemon,\r\n                    name: action.payload\r\n                }\r\n            }\r\n        case 'handleTokenId':\r\n            return {\r\n                ...state,\r\n                filtersElemon: {\r\n                    ...state.filtersElemon,\r\n                    tokenId: action.payload\r\n                }\r\n            }\r\n        case 'updatePrice':\r\n            return {\r\n                ...state,\r\n                price: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer;\r\n\r\n","import { createStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './app/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode >\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}