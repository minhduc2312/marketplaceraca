{"version":3,"sources":["components/TabPanel.js","components/NFTs/Card.js","components/NFTs/SwapRaca.js","components/NFTs/PriceTable.js","config.js","components/Sales.js","components/Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","span","Typography","component","Card","x","nft","name","image_url","fixed_price","className","alt","src","style","color","fontSize","fontWeight","lineHeight","whiteSpace","textOverflow","overflow","toString","replace","SwapRacaToUSD","priceRaca","useState","inputRaca","setInputRaca","usdPrice","setUsdPrice","handleChange","e","a","target","useEffect","type","onChange","getAPI","categoryId","size","axios","numberWithCommas","PriceTable","listMetamon","setListMetamon","listDiamond","setListDiamond","listEgg","setListEgg","listPotion","setListPotion","kissUpLand","setKissUpLand","tokenPrice","setTokenPrice","timeUpdated","setTimeUpdated","convertDateTime","now","Date","toLocaleString","getData","Promise","all","then","res","data","list","get","document","title","usd","setInterval","clearInterval","SwapRaca","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","child","scope","Math","floor","toFixed","StrictMode","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createData","totalSales","totalCost","totalWithdraw","percent","sales","cost","profit","withdraw","remain","getHistory","page","Sales","listHistory","setListHistory","listSummary","setListSummary","listWithdraw","setListWithdraw","toggle","setToggle","total","currentPage","listTemp","fetchData","response","length","app","initializeApp","db","getFirestore","q","query","collection","orderBy","getDocs","querySnapshot","tempList","forEach","doc","push","newList","item","time","seconds","split","listSales","filter","nft_token_id","listCost","sumSales","reduce","prev","curr","Number","amount","fee","sumCost","transfer","minWidth","row","border","CircularProgress","textAlign","Button","onClick","variant","TextField","label","marginBottom","notes","a11yProps","RacaTabs","setValue","width","borderBottom","borderColor","Tabs","event","newValue","Tab","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d231da14.chunk.js","sourcesContent":["import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ span: 3 }}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TabPanel;","\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Card = (props) => {\r\n    const { name = \"undefined\", id = \"#0000\", image_url = '', fixed_price = '0000' } = props.nft;\r\n    return (\r\n        <div className='nft'>\r\n            <div className=\"imgBox\">\r\n                <img className='image-nft' alt={name} src={image_url || \"/marketplaceraca/nft.png\"} />\r\n            </div>\r\n            <div className=\"textBox\">\r\n                <p className='name-nft'>{name&&\"\"}#{id}</p>\r\n                <div className='separate'></div>\r\n                <div className='price'>\r\n                    <p style={{\r\n                        color: 'rgba(56, 56, 56, .4)',\r\n                        fontSize: 20,\r\n                        fontWeight: 700,\r\n                        lineHeight:'32px',\r\n                        whiteSpace:'nowrap',\r\n                        textOverflow:'ellipsis',\r\n                        overflow:'hidden',\r\n                    }}>Price</p>\r\n                    <p className='priceNum'>{numberWithCommas(fixed_price)}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { useEffect, useState } from \"react\"\r\n\r\n\r\nconst SwapRacaToUSD = ({ priceRaca }) => {\r\n    const [inputRaca, setInputRaca] = useState('');\r\n    const [usdPrice, setUsdPrice] = useState(0);\r\n\r\n    const handleChange = async (e) => {\r\n        setInputRaca(e.target.value);\r\n    }\r\n    useEffect(() => {\r\n        setUsdPrice(() => inputRaca * priceRaca);\r\n    }, [inputRaca, priceRaca])\r\n    return (\r\n        <div id='swap-raca'>\r\n            <input id=\"RACA\" type=\"number\" value={inputRaca} onChange={handleChange} />\r\n            <span> ~ </span>\r\n            <span id=\"USD\">{usdPrice} USD</span>\r\n        </div>\r\n    )\r\n}\r\nexport default SwapRacaToUSD;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SwapRacaToUSD from \"./SwapRaca\";\r\nimport { Table, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, CircularProgress } from '@mui/material';\r\n\r\nconst getAPI = (categoryId, size) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`, {\r\n        \"Access- Control - Allow - Origin\": \"*\"\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst PriceTable = ({ hidden }) => {\r\n    const [listMetamon, setListMetamon] = useState([]);\r\n    const [listDiamond, setListDiamond] = useState([]);\r\n    const [listEgg, setListEgg] = useState([]);\r\n    const [listPotion, setListPotion] = useState([]);\r\n    const [kissUpLand, setKissUpLand] = useState({});\r\n    const [tokenPrice, setTokenPrice] = useState(0);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n\r\n    const getData = async () => {\r\n        Promise.all([\r\n            getAPI(13, 1000).then(res =>\r\n                setListMetamon(res.data.list)\r\n            ),\r\n            getAPI(15, 10).then(res =>\r\n                setListPotion(res.data.list)\r\n            ),\r\n            getAPI(16, 10).then(res =>\r\n                setListDiamond(res.data.list)\r\n            ),\r\n            getAPI(17, 10).then(res =>\r\n                setListEgg(res.data.list)\r\n            ),\r\n            getAPI(20, 1).then(res =>\r\n                setKissUpLand(res.data.list[0])\r\n            ),\r\n            axios.get('https://api.coingecko.com/api/v3/simple/price?ids=radio-caca&vs_currencies=usd')\r\n                .then(res => {\r\n                    document.title = res.data['radio-caca'].usd + \" - Marketplace RACA\"\r\n                    setTokenPrice(res.data['radio-caca'].usd)\r\n                })\r\n        ])\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        convertDateTime()\r\n        // const formData = new FormData();\r\n        // formData.append('address', \"0x769ba0cb0d89666f7506194d2cf416ea0f812e16\");\r\n        // formData.append('sign', \"0x6987eccb7cdef2820794cfbd1067d7322175230d752c5a3f4ed2b5405d7cc2f63a3951cf7e2ba03f1ba447d6c720fc1eb304a2e2fd61b43f7afe72a2cff9d1b11c\");\r\n        // formData.append('msg', \"LogIn-17816549-8c50-98b7-f684-163d8e0eaea4\");\r\n        // const payload = {\r\n        //     address: '0x769ba0cb0d89666f7506194d2cf416ea0f812e16',\r\n        //     sign: '0x6987eccb7cdef2820794cfbd1067d7322175230d752c5a3f4ed2b5405d7cc2f63a3951cf7e2ba03f1ba447d6c720fc1eb304a2e2fd61b43f7afe72a2cff9d1b11c',\r\n        //     msg: 'LogIn-17816549-8c50-98b7-f684-163d8e0eaea4',\r\n        // }\r\n        // axios({\r\n        //     method: 'POST',\r\n        //     url: 'https://metamon-api.radiocaca.com/usm-api/login',\r\n        //     data: formData,\r\n        //     headers: {\r\n        //         \"Content-Type\": \"multipart/form-data\",\r\n        //     }\r\n        // }).then(function (response) {\r\n        //     console.log(response.data)\r\n        //     const formData1 = new FormData();\r\n        //     formData1.append('address', '0x769ba0cb0d89666f7506194d2cf416ea0f812e16')\r\n        //     axios({\r\n        //         method: 'POST',\r\n        //         url: 'https://metamon-api.radiocaca.com/usm-api/getBattleRecord',\r\n        //         data: formData1,\r\n        //         headers: {\r\n        //             \"accessToken\": response.data.data\r\n        //         }\r\n        //     }).then(function (response) {\r\n        //         console.log(response);\r\n        //     })\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error);\r\n        // });\r\n        setInterval(() => {\r\n            getData();\r\n            convertDateTime();\r\n        }, 20000)\r\n\r\n        return () => {\r\n            setListMetamon([])\r\n            setListDiamond([])\r\n            setListEgg([])\r\n            setListPotion([])\r\n            setKissUpLand({})\r\n            setTokenPrice(0)\r\n            clearInterval(() => {\r\n                getData();\r\n                setTimeUpdated(\"\")\r\n            }, 20000);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div hidden={hidden}>\r\n            <p id='tokenPrice'>RACA Price: {tokenPrice}</p>\r\n            <SwapRacaToUSD priceRaca={tokenPrice} />\r\n            <p id='timeUpdated'>{timeUpdated}</p>\r\n            <TableContainer id='table-scroll' component={Paper}>\r\n                <Table id='tablePrice' aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">Metamon</TableCell>\r\n                            <TableCell align=\"center\">Egg</TableCell>\r\n                            <TableCell align=\"center\">Yellow Diamond</TableCell>\r\n                            <TableCell align=\"center\">Potion</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listEgg && listMetamon && listDiamond && listPotion && listEgg.map((child, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(Math.floor(listMetamon[index]?.fixed_price))} (~{(tokenPrice * listMetamon[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(Math.floor(listEgg[index]?.fixed_price))} (~{(tokenPrice * listEgg[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(Math.floor(listDiamond[index]?.fixed_price))} (~{(tokenPrice * listDiamond[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(Math.floor(listPotion[index]?.fixed_price))} (~{(tokenPrice * listPotion[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                </TableRow>)\r\n                        })\r\n                        }\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n           \r\n            <div className=\"cards\">\r\n                {listEgg && listMetamon && listDiamond && listPotion &&\r\n                    <React.StrictMode>\r\n                        <div className=\"card\">\r\n                            {listMetamon[0] && <Card nft={listMetamon[0]}></Card>}\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            {listMetamon[1] && <Card nft={listMetamon[1]}></Card>}\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            {listMetamon[2] && <Card nft={listMetamon[2]}></Card>}\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            {listMetamon[3] && <Card nft={listMetamon[3]}></Card>}\r\n                        </div>\r\n                    </React.StrictMode>\r\n                }\r\n                {listEgg && listMetamon && listDiamond && listPotion &&\r\n                    (\r\n                        <React.StrictMode>\r\n                            {listEgg[0] &&\r\n                                <div className=\"card\">\r\n                                    <Card nft={listEgg[0]}></Card>\r\n                                </div>}\r\n\r\n                            {listDiamond[0] &&\r\n                                <div className=\"card\">\r\n                                    <Card nft={listDiamond[0]} />\r\n                                </div>}\r\n\r\n                            {listPotion[0] &&\r\n                                <div className=\"card\"><Card nft={listPotion[0]}></Card>\r\n                                </div>}\r\n\r\n                            {kissUpLand &&\r\n                                <div className=\"card\"><Card nft={kissUpLand}></Card>\r\n                                </div>}\r\n                        </React.StrictMode>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PriceTable;","\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCQItrkH9bp7aT1yiwobbNbHtXcKcZ45Qk\",\r\n    authDomain: \"sales-nft-raca.firebaseapp.com\",\r\n    projectId: \"sales-nft-raca\",\r\n    storageBucket: \"sales-nft-raca.appspot.com\",\r\n    messagingSenderId: \"547281695761\",\r\n    appId: \"1:547281695761:web:bade483d397ca7e9cd2db0\"\r\n};\r\nexport default firebaseConfig","import React, { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport { numberWithCommas } from './NFTs/PriceTable'\r\nimport axios from 'axios';\r\nimport { TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, CircularProgress } from '@mui/material';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"../config\"\r\nimport { collection, getDocs, getFirestore, query, orderBy } from \"firebase/firestore\";\r\n\r\nfunction createData(name, totalSales, totalCost, totalWithdraw, percent) {\r\n    const sales = totalSales * percent / 100;\r\n    const cost = totalCost * percent / 100;\r\n    const profit = (sales - cost);\r\n    const withdraw = totalWithdraw * percent / 100;\r\n    const remain = profit - withdraw;\r\n    return { name, sales, cost, profit, withdraw, remain };\r\n}\r\n\r\nconst getHistory = (page, size) => {\r\n    return axios.get(`https://market-api.radiocaca.com/users/0x10201091597635eC7b8e208306E6aDCC7c167925/histories?pageNo=${page}&pageSize=${size}`);\r\n\r\n}\r\n\r\n\r\nconst Sales = () => {\r\n    const [listHistory, setListHistory] = useState([]);\r\n    const [listSummary, setListSummary] = useState([]);\r\n    const [listWithdraw, setListWithdraw] = useState([]);\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    const handleAddTrans = () => {\r\n        setToggle(prev => !prev)\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let total = 0;\r\n        let currentPage = 1;\r\n        let listTemp = [];\r\n        let size = 10;\r\n        const fetchData = async () => {\r\n            do {\r\n                const response = await getHistory(currentPage, size)\r\n                currentPage++;\r\n                total = response.data.total;\r\n                listTemp = [...listTemp, ...response.data.list]\r\n            } while (listTemp.length < total)\r\n\r\n            setListHistory(listTemp)\r\n        }\r\n        fetchData();\r\n\r\n        const app = initializeApp(firebaseConfig);\r\n        const db = getFirestore(app);\r\n\r\n        const q = query(collection(db, \"Transaction\"), orderBy(\"time\"));\r\n            \r\n        const querySnapshot = await getDocs(q);\r\n        const tempList = [];\r\n        querySnapshot.forEach((doc) => {\r\n            tempList.push(doc.data());\r\n        });\r\n\r\n        const newList = tempList.map(item => {\r\n            return {\r\n                ...item,\r\n                time: new Date(item.time.seconds * 1000).toLocaleString().split(',')[0]\r\n\r\n            }\r\n        })\r\n        setListWithdraw(newList);\r\n        return () => {\r\n            setListHistory([])\r\n            setListWithdraw([])\r\n        }\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n        const listSales = listHistory.filter(item => item.nft_token_id === 407301)\r\n        const listCost = listHistory.filter(item => item.nft_token_id === 403545)\r\n\r\n        let sumSales = listSales.reduce((prev, curr) => {\r\n            return prev + (Number(curr.amount) - Number(curr.fee))\r\n        }, 0);\r\n        let sumCost = listCost.reduce((prev, curr) => {\r\n            return prev + Number(curr.amount)\r\n        }, 0);\r\n\r\n        let withdraw = 0;\r\n        let cost = 0;\r\n        listWithdraw.forEach((item) => {\r\n            if (item.transfer) {\r\n                withdraw += item.amount;\r\n            } else {\r\n                cost += item.amount;\r\n            }\r\n\r\n        }, 0);\r\n        sumCost += cost;\r\n        if (sumSales !== 0)\r\n            sumSales -= 2700;\r\n        setListSummary([\r\n            createData(\"Johny Duc\", sumSales, sumCost, withdraw, 40),\r\n            createData(\"Khang Pug\", sumSales, sumCost, withdraw, 40),\r\n            createData(\"Duc Professor\", sumSales, sumCost, withdraw, 20),\r\n            createData(\"Total\", sumSales, sumCost, withdraw, 100),\r\n        ]);\r\n    }, [listHistory, listWithdraw])\r\n    return (\r\n        <div className=\"sales\">\r\n            <TableContainer id=\"sales-section\" component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"center\">Sales</TableCell>\r\n                            <TableCell align=\"center\">Cost</TableCell>\r\n                            <TableCell align=\"center\">Profit</TableCell>\r\n                            <TableCell align=\"center\">Withdraw</TableCell>\r\n                            <TableCell align=\"center\">Remain</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listHistory && listSummary && listSummary.map((row) => (\r\n                            <TableRow\r\n                                key={row.name}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.sales))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.cost))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.profit))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.withdraw))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.remain))}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        {!listHistory && <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <CircularProgress size='small' color=\"success\" />\r\n                            </TableCell>\r\n                        </TableRow>}\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div id=\"withdraw-history\">\r\n                <h2 style={{\r\n                    textAlign: 'left'\r\n                }}>Withdraw History</h2>\r\n                <div id=\"addTransaction\">\r\n                    <Button\r\n                        size=\"medium\"\r\n                        id=\"toggleButton\"\r\n                        onClick={handleAddTrans}\r\n                        variant=\"contained\" >Add Transaction</Button>\r\n                    {toggle && (\r\n                        <React.StrictMode>\r\n                            <TextField\r\n                                type='number'\r\n                                label=\"Amount\"\r\n                                variant=\"outlined\" size=\"small\"\r\n                                style={{ marginBottom: '10px' }} />\r\n                            <TextField\r\n                                label=\"Notes\" variant=\"outlined\" size=\"small\" id=\"notes\"\r\n                                style={{ marginBottom: '10px' }} />\r\n                            <Button id=\"addButton\" size=\"medium\" variant=\"contained\">Add</Button>\r\n                        </React.StrictMode>\r\n                    )}\r\n                </div>\r\n                <TableContainer id='withdraw' component={Paper}>\r\n                    <Table sx={{ minWidth: 250 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Time</TableCell>\r\n                                <TableCell align=\"center\">Amount</TableCell>\r\n                                <TableCell align=\"center\">Note</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listWithdraw && listWithdraw.map((row, index) => (\r\n                                <TableRow\r\n                                    key={index}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.time}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(row.amount)}</TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(row.notes)}</TableCell>\r\n\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Sales;","import { useState } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel';\r\nimport PriceTable from './NFTs/PriceTable';\r\nimport Sales from './Sales';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst RacaTabs = () => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Box id=\"tabs\" sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                    <Tab label=\"NFTs\" {...a11yProps(0)} />\r\n                    <Tab label=\"Sales\" {...a11yProps(1)} />\r\n                    {/* <Tab label=\"Metamon\" {...a11yProps(2)} /> */}\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n                <PriceTable/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Sales/>\r\n            </TabPanel>\r\n            {/* <TabPanel value={value} index={2}>\r\n                Item Three\r\n            </TabPanel> */}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default RacaTabs;","import './App.css';\nimport RacaTabs from './components/Tabs';\n\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <RacaTabs/>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}