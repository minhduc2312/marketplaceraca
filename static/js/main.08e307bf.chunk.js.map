{"version":3,"sources":["app/actions.js","components/TabPanel.js","components/NFTs/Card.js","components/NFTs/SwapRaca.js","components/StatsChart/data.js","components/StatsChart/StatsChart.js","components/NFTs/NFTs.js","components/Metamon/InputSelect.js","components/Metamon/Metamon.js","components/Elemon/InputFilters.js","components/Elemon/InfoCard.js","components/Elemon/Elemon.js","context/constants.js","context/AppContext.js","components/Portfolio/MarketHistory.js","components/Metamask.js","components/Portfolio/InfoToken.js","components/Portfolio/ModalUI.js","components/Loading.js","components/Portfolio/ImportTokenModal.js","components/Portfolio/TransactionsModal.js","components/Portfolio/StatWallet.js","config.js","components/Portfolio/Portfolio.js","components/ImageAnimation.js","components/Tabs.js","App.js","app/reducer.js","app/store.js","reportWebVitals.js","index.js"],"names":["handleArrange","arrange","type","payload","addToken","token","removeToken","TabPanel","props","children","index","value","other","useState","transition","useTransition","from","x","y","opacity","enter","display","leave","role","id","style","color","item","div","Typography","component","Card","nft","name","image_url","fixed_price","raca","useSelector","state","price","className","alt","src","fontSize","fontWeight","lineHeight","whiteSpace","textOverflow","margin","toString","replace","toFixed","SwapRacaToUSD","inputRaca","setInputRaca","usdPrice","setUsdPrice","handleChange","e","a","target","useEffect","Box","TextField","sx","height","variant","onChange","options","chart","foreColor","toolbar","tools","download","autoSelected","zoom","enabled","resetIcon","offsetX","offsetY","fillColor","strokeColor","selection","background","border","events","plotOptions","candlestick","wick","useFillColor","title","text","align","xaxis","labels","datetimeUTC","datetimeFormatter","year","month","day","hour","yaxis","tooltip","show","format","formatter","undefined","selectNFTsList","img","StatsChart","selectedStats","setSelectedStats","optionsCustom","setOptionsCustom","series","setSeries","getStats","then","res","data","list","sort","b","dataTemp","forEach","time","Date","Math","floor","timestamp","unitPrice","count","high","low","open","close","Object","values","push","keys","nameSelected","filter","Number","prev","FormControl","width","Select","size","labelId","map","MenuItem","getDataMarket","categoryId","axios","ConvertDDMM","datetime","toLocaleString","split","tokenId","pageSize","getSellIngameList","formDataPrams","formDataLogin","FormData","append","method","url","headers","accessToken","catch","err","console","log","numberWithCommas","getFormData","formData","selectStatsList","selectIngameList","NFTs","listMetamon","setListMetamon","listDiamond","setListDiamond","listEgg","setListEgg","listPotion","setListPotion","kissUpLand","setKissUpLand","BigGreen","setBigGreen","MetamonR","setMetamonR","MMLand","setMMLand","selectStats","setSelectStats","selectedStatsList","setSelectedStatsList","tokenPrice","setTokenPrice","timeUpdated","setTimeUpdated","listStats","setListStats","sellIngameList","setSellIngameList","selectTypeIngame","setSelectTypeIngame","refSelect","useRef","convertDateTime","now","elmon","elcoin","btc","getData","Promise","all","document","querySelector","classList","toggle","rerenderData","setInterval","clearInterval","rerenderStats","getChild","current","childNodes","removeChild","shopOrderList","flexDirection","justifyContent","Table","TableHead","TableRow","TableCell","colSpan","TableBody","SwapRaca","TableContainer","Paper","objectFit","padding","ref","child","borderLeft","millify","length","amount","textTransform","gap","paddingLeft","level","score","InputSelect","handleConfirm","dispatch","useDispatch","filters","myStorage","window","localStorage","setArrange","minScore","setMinScore","setLevel","Container","maxWidth","marginTop","alignItems","marginRight","label","autoComplete","Button","onClick","handleFilters","setItem","JSON","stringify","levelMetamon","textAlign","event","pageNo","Metamon","stateMinScore","stateLevel","listShow","setListShow","loading","setLoading","getListMetamon","listData","i","total","concat","handleListMetamon","sortBy","slice","CircularProgress","metamon","position","scope","href","textDecoration","rel","token_id","InputFilters","filtersElemon","min","max","minPower","setMinPower","maxPower","setMaxPower","listAura","Array","listRarity","rarity","textShadow","handleRarity","checked","removeRarity","handleAura","removeAura","FormControlLabel","control","Checkbox","labelPlacement","onBlur","placeholder","InfoCard","elemon","isOwner","ownerAddress","URI","bodyPart","bodyPart1","bodyPart2","bodyPart3","bodyPart4","bodyPart5","bodyPart6","class","purity","baseCardId","join","quality","lastPrice","point","getElemonItem","pageNumber","priceMode","get","getElemonInfo","listElemon","listTokenId","error","Elemon","setListElemon","listElemonInfo","setListElemonInfo","listFilter","setListFilter","aura","paging","totalCount","React","getInfo","lengthList","loop","listInfo","pre","checkPower","power","checkName","checkRarity","includes","checkAura","Grid","container","spacing","boxShadow","xs","md","lg","contractABI","AppContext","createContext","AppProvider","appStatus","setAppStatus","currentAccount","setCurrentAccount","provider","WalletConnectProvider","rpc","qrcodeModalOptions","mobileLinks","checkIfWalletConnected","ethereum","web3","Web3","abi","eth","Contract","request","addressArray","alert","on","disconnectWC","disconnect","w3","walletConnect","enable","getAccounts","accounts","account","toLowerCase","connectToWallet","Provider","MarketHistory","useContext","historyList","setHistoryList","setLength","totalList","setTotalList","totalBuy","setTotalBuy","totalSell","setTotalSell","getMarketHistory","getHistoryData","listDataMD2","listDataMD","listNFT","listTotal","buy","sell","token_name","countBuy","fee","countSell","getItem","profit","minWidth","minHeight","Metamask","noUserFound","userLoggedIn","lineBreak","noMetamaskFound","status","app","getInfoToken","coins","InfoToken","infoToken","listToken","find","tokenName","symbol","db","addTokenToDB","q","query","collection","where","getDocs","querySnapshot","empty","addDoc","address","tokens","finally","doc","docRef","updateDoc","mt","thumb","large","borderRadius","platforms","disabled","ModalUI","isOpen","setOpen","onClose","Modal","top","left","transform","bgcolor","p","Loading","ImportTokenModal","isOpenModal","setIsOpenModal","tokenInput","setTokenInput","tokenQuery","setTokenQuery","invalidToken","setInvalidToken","bounceInput","setTimeout","clearTimeout","StrictMode","autoFocus","handleChangeInput","maxHeight","overflowY","overflowX","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","headCells","EnhancedTableHead","onRequestSort","headCell","sortDirection","TableSortLabel","active","direction","property","TransactionsModal","infoTransactions","setInfoTransactions","setOrder","setOrderBy","listTransactions","stickyHeader","row","date","precision","decimalSeparator","toUpperCase","StatWallet","setListTransactions","prevLength","listBalance","setListBalance","deleteToken","parentNode","dataset","docItem","exists","result","listResult","getDataFireBase","listTokens","limit","end","start","getBalance","balanceFromWei","utils","fromWei","balance","abs","totalDeposit","totalDepositPrice","totalWithdraw","totalWithdrawPrice","startTime","timeStamp","endTime","listTransactionsTemp","hashmap","prices","toLocaleDateString","hashmapPrice","transaction","getDateTransaction","infoTransaction","getTransaction","showDetailTransaction","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Portfolio","initializeApp","getFirestore","isVisible","setIsVisible","initApp","marginBottom","ImageAnimation","a11yProps","TabInfo","others","HeaderTabs","getTab","setValue","isMute","setIsMute","statusMute","setStatusMute","audioRef","handleChangeSound","audioEl","paused","play","pause","onClickChangeSound","handlePressSpace","keyCode","body","preventDefault","addEventListener","removeEventListener","controls","Tabs","newValue","centered","Tab","memo","App","getPrice","usd","updatePrice","initState","parse","tab","rootReducer","action","positionRarity","indexOf","positionAura","newList","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.08e307bf.chunk.js","sourcesContent":["\r\nexport const handleFilters = ({ minScore, level }) => {\r\n    return {\r\n        type: 'handleFilters',\r\n        payload: {\r\n            minScore,\r\n            level\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleArrange = (arrange) => {\r\n    return {\r\n        type: 'handleArrange',\r\n        payload: arrange\r\n    }\r\n}\r\n\r\nexport const updatePriceAuto = (price) => {\r\n    return {\r\n        type: 'updatePrice',\r\n        payload: price,\r\n    }\r\n}\r\n\r\nexport const handlePower = ({ minPower, maxPower }) => {\r\n    return {\r\n        type: 'handlePower',\r\n        payload: {\r\n            min: minPower,\r\n            max: maxPower\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleSort = (sort) => {\r\n    return {\r\n        type: 'handleSort',\r\n        payload: sort,\r\n    }\r\n}\r\n\r\nexport const handleFilterName = (name) => {\r\n    return {\r\n        type: 'handleName',\r\n        payload: name,\r\n    }\r\n}\r\nexport const handleTokenId = (id) => {\r\n    return {\r\n        type: 'handleTokenId',\r\n        payload: id,\r\n    }\r\n}\r\nexport const addRarity = (id) => {\r\n    return {\r\n        type: 'elemon/addRarity',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const removeRarity = (id) => {\r\n    return {\r\n        type: 'elemon/removeRarity',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const addAura = (id) => {\r\n    return {\r\n        type: 'elemon/addAura',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const removeAura = (id) => {\r\n    return {\r\n        type: 'elemon/removeAura',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const changeCurrentAccount = (address) => {\r\n    return {\r\n        type: 'changeCurrentAccount',\r\n        payload: address,\r\n    }\r\n}\r\nexport const addToken = (token) => {\r\n    return {\r\n        type: 'tokens/add',\r\n        payload: token,\r\n    }\r\n}\r\nexport const removeToken = (token) => {\r\n    return {\r\n        type: 'tokens/remove',\r\n        payload: token,\r\n    }\r\n}\r\nexport const initTokens = (tokens) => {\r\n    return {\r\n        type: 'initTokens',\r\n        payload: tokens,\r\n    }\r\n}\r\nexport const initApp = (app) => {\r\n    return {\r\n        type: 'initApp',\r\n        payload: app,\r\n    }\r\n}\r\nexport const clearListToken = () => {\r\n    return {\r\n        type:'clearListToken'\r\n    }\r\n}\r\n\r\n\r\n","import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { useState } from 'react'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    const [show, setShow] = useState(true)\r\n    const transition = useTransition(true, {\r\n        from: { x: -500, y: 10, opacity: 0 },\r\n        enter: { x: 0, y: 0, opacity: 1, display: 'block' },\r\n        leave: { x: 500, y: 10, opacity: 0, display: 'none' }\r\n    })\r\n    return (\r\n\r\n        <div\r\n            role=\"tabpanel\"\r\n            id={`simple-tabpanel-${index}`}\r\n            style={{ color: '#ffffff' }}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {(\r\n\r\n                transition((style, item) =>\r\n                (<animated.div style={style}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </animated.div>)\r\n                )\r\n                /*{ <Box sx={{ span: 3 }}>\r\n                    {transition((style, item) =>\r\n                        (<animated.div style={style}>\r\n                            <Typography component={'span'}>{children}</Typography>\r\n                        </animated.div>)\r\n                    )}\r\n\r\n                </Box> }*/\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TabPanel;","import { useSelector } from \"react-redux\";\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Card = (props) => {\r\n\r\n    const { name = \"undefined\", id = \"#0000\", image_url = '', fixed_price = '0000' } = props.nft;\r\n    const { raca } = useSelector(state => state.price)\r\n    return (\r\n        <div className='nft'>\r\n            <div className=\"imgBox\">\r\n                <img className='image-nft' alt={name} src={image_url || \"/marketplaceraca/raca/nft.png\"} />\r\n            </div>\r\n            <div className=\"textBox\">\r\n                <p className='name-nft'>{name} #{id}</p>\r\n                <div className='separate'></div>\r\n                <div className='price'>\r\n                    <p style={{\r\n                        color: '#ffffff',\r\n                        fontSize: 20,\r\n                        fontWeight: 700,\r\n                        lineHeight: '32px',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        margin: '0'\r\n                    }}>Price</p>\r\n                    <p className='priceNum'>{`${numberWithCommas(fixed_price)} (~${(fixed_price * raca).toFixed(2)})`}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { Box, Input, TextField } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst SwapRacaToUSD = () => {\r\n    const [inputRaca, setInputRaca] = useState('');\r\n    const [usdPrice, setUsdPrice] = useState(0);\r\n\r\n    const handleChange = async (e) => {\r\n        setInputRaca(e.target.value);\r\n    }\r\n    const { raca } = useSelector(state => state.price)\r\n    useEffect(() => {\r\n        setUsdPrice(() => inputRaca * raca);\r\n    }, [inputRaca, raca])\r\n    return (\r\n        <Box id='swap-raca'>\r\n            <TextField sx={{ height: '50px' }} id=\"RACA\" type=\"number\" variant=\"outlined\" value={inputRaca} onChange={handleChange} />\r\n            <span> ~ </span>\r\n            <span id=\"USD\">{usdPrice.toFixed(4)} USD</span>\r\n        </Box>\r\n    )\r\n}\r\nexport default SwapRacaToUSD;","\r\nexport const options = {\r\n    chart: {\r\n        type: 'candlestick',\r\n        height: 350,\r\n        foreColor: '#fff',\r\n        toolbar: {\r\n            tools: {\r\n                download: false\r\n            },\r\n            autoSelected: 'pan'\r\n        },\r\n        zoom: {\r\n            enabled: true,\r\n            type: 'x',\r\n            resetIcon: {\r\n                offsetX: -10,\r\n                offsetY: 0,\r\n                fillColor: '#fff',\r\n                strokeColor: '#37474F'\r\n            },\r\n            selection: {\r\n                background: '#90CAF9',\r\n                border: '#0D47A1'\r\n            }\r\n        },\r\n        events: {\r\n            // scrolled: function (chartContext, { xaxis }) {\r\n            //     console.log(chartContext, xaxis)\r\n            //     return;\r\n            // }\r\n        }\r\n    },\r\n    plotOptions: {\r\n        candlestick: {\r\n            wick: {\r\n                useFillColor: true,\r\n            }\r\n        }\r\n    },\r\n    title: {\r\n        text: 'CandleStick Chart',\r\n        align: 'left'\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n        labels: {\r\n            datetimeUTC: false,\r\n            datetimeFormatter: {\r\n                year: 'yyyy',\r\n                month: \"MMM 'yy\",\r\n                day: 'dd MMM',\r\n                hour: 'HH:mm',\r\n            },\r\n        }\r\n\r\n    },\r\n    yaxis: {\r\n        tooltip: {\r\n            enabled: true\r\n        }\r\n    },\r\n    tooltip: {\r\n        x: {\r\n            show: true,\r\n            format: 'HH:mm\\ndd MMM',\r\n            formatter: undefined,\r\n        },\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport ApexCharts from 'apexcharts'\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport { options, seriesExample } from './data'\r\nimport { getStats } from '../NFTs/NFTs'\r\nimport { Box } from '@mui/system'\r\nimport { FormControl, MenuItem, Select } from '@mui/material'\r\n\r\nconst selectNFTsList = [\r\n  {\r\n    name: 'Metamon',\r\n    id: 13,\r\n    img: 'metamon.png'\r\n  },\r\n  {\r\n    name: 'Egg',\r\n    id: 17,\r\n    img: 'egg.png'\r\n  },\r\n  {\r\n    name: 'Yellow Diamond',\r\n    id: 16,\r\n    img: 'DiamondYellow.png'\r\n  },\r\n  {\r\n    name: 'Potion',\r\n    id: 15,\r\n    img: 'potion.png'\r\n  },\r\n  {\r\n    name: 'Kiss-up State Land',\r\n    id: 20,\r\n    img: 'kissup.png'\r\n  },\r\n  {\r\n    name: 'Musk USM Land',\r\n    id: 7,\r\n    img: 'mml.png'\r\n  },\r\n]\r\n\r\nconst StatsChart = () => {\r\n  const [selectedStats, setSelectedStats] = useState(selectNFTsList[0].id);\r\n  const [statsList, setStatsList] = useState([]);\r\n  const [optionsCustom, setOptionsCustom] = useState(options)\r\n  const [series, setSeries] = useState([])\r\n  const handleChangeSelect = (e) => {\r\n    setSelectedStats(e.target.value)\r\n    options.title.text = selectNFTsList.filter(item => item.id === Number(e.target.value))[0].name\r\n    // options.title.text = selectNFTsList[e.target.value].name\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getStats(selectedStats, 1000).then(res => {\r\n      const data = res.data.list;\r\n      data.sort((a, b) => a < b ? 1 : -1);\r\n      const timeSplit = 15 * 60;\r\n      const dataTemp = {}\r\n      const series = [{\r\n        data: []\r\n      }];\r\n      data.forEach(item => {\r\n        const time = new Date((Math.floor(item.timestamp / timeSplit) * timeSplit) * 1000)\r\n\r\n        const unitPrice = Math.floor(item.fixed_price / item.count);\r\n        if (!dataTemp[time]) {\r\n          dataTemp[time] = {\r\n            open: unitPrice,\r\n            high: unitPrice,\r\n            low: unitPrice,\r\n          }\r\n        } else {\r\n          dataTemp[time] = {\r\n            ...dataTemp[time],\r\n            high: dataTemp[time].high < unitPrice ? unitPrice : dataTemp[time].high,\r\n            low: dataTemp[time].low > unitPrice ? unitPrice : dataTemp[time].low,\r\n          }\r\n        }\r\n        dataTemp[time].close = unitPrice;\r\n      })\r\n      \r\n      Object.values(dataTemp).forEach((item, index) => {\r\n        series[0].data.push([[Object.keys(dataTemp)[index]], [...Object.values(item)]])\r\n      })\r\n      setSeries(series)\r\n\r\n    })\r\n\r\n    const nameSelected = selectNFTsList.filter(item => item.id === Number(selectedStats))[0].name\r\n    setOptionsCustom(prev => {\r\n      return {\r\n        ...prev,\r\n        title: {\r\n          text: nameSelected + ' Chart',\r\n        },\r\n      }\r\n    })\r\n  }, [selectedStats])\r\n  return (\r\n    <Box id=\"chart\" sx={{ color: '#333' }}>\r\n      <FormControl className='select-stats' style={{ width: '150px' }}>\r\n        <Select\r\n          size='small'\r\n          labelId=\"select\"\r\n          id=\"filter\"\r\n          value={selectedStats}\r\n          onChange={handleChangeSelect}\r\n          sx={{ color: '#fff', }}\r\n          className='select-stats'\r\n        >\r\n          {selectNFTsList && selectNFTsList.map((item, index) => (\r\n            <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Chart options={optionsCustom} series={series} type=\"candlestick\" height={350} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default StatsChart","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SwapRacaToUSD from \"./SwapRaca\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, Typography, MenuItem, Select, FormControl, Grid } from '@mui/material';\r\nimport '../../styles/nfts.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport millify from \"millify\";\r\nimport StatsChart from \"../StatsChart/StatsChart\";\r\n\r\n\r\nconst getDataMarket = (categoryId = '', size = '') => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst ConvertDDMM = (datetime) => {\r\n    const [date, time] = datetime.toLocaleString().split(',');\r\n    return `${time.split(' ')[1]}`\r\n}\r\nexport const getStats = (categoryId = '', pageSize = 10) => {\r\n    let tokenId;\r\n    if (categoryId === 15 || categoryId === 16) {\r\n        tokenId = 0\r\n    } else {\r\n        tokenId = -1\r\n    }\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=${pageSize}&status=executed&tokenId=${tokenId}&category=${categoryId}`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst getSellIngameList = (formDataPrams) => {\r\n    const formDataLogin = new FormData();\r\n    formDataLogin.append('address', \"0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16\");\r\n    formDataLogin.append('sign', \"0x44063b19d6cd4ce60cda4db25aade076e2206b3539f6f5a62237fb6c0ed31fe84e7770f66cc3e623cf520cdf353a116491af88f4c53894d424914888c677ac321c\");\r\n    formDataLogin.append('msg', \"LogIn-79a8ee53-dc8b-ef50-a811-086c474b1566\");\r\n    formDataLogin.append('network', \"1\");\r\n    formDataLogin.append('clientType', \"MetaMask\");\r\n\r\n    return axios({\r\n        method: 'POST',\r\n        url: 'https://metamon-api.radiocaca.com/usm-api/login',\r\n        data: formDataLogin,\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        }\r\n    }).then((res) => {\r\n        const data = res.data.data;\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'https://metamon-api.radiocaca.com/usm-api/shop-order/sellList',\r\n            data: formDataPrams,\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                \"accesstoken\": data.accessToken,\r\n            }\r\n        });\r\n    }).catch(err => console.log(err))\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nconst getFormData = (type) => {\r\n    const formData = new FormData();\r\n    formData.append('address', '0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16')\r\n    formData.append('type', type)\r\n    formData.append('orderType', 3)\r\n    formData.append('orderId', -1)\r\n    formData.append('pageSize', 5)\r\n    return formData;\r\n}\r\nconst selectStatsList = [\r\n    {\r\n        name: 'Metamon',\r\n        id: 13,\r\n        img: 'metamon.png'\r\n    },\r\n    {\r\n        name: 'Diamond Yellow',\r\n        id: 16,\r\n        img: 'DiamondYellow.png'\r\n    },\r\n    {\r\n        name: 'Potion',\r\n        id: 15,\r\n        img: 'potion.png'\r\n    },\r\n    {\r\n        name: 'Kiss-up State Land',\r\n        id: 20,\r\n        img: 'kissup.png'\r\n    },\r\n    {\r\n        name: 'Musk USM Land',\r\n        id: 7,\r\n        img: 'mml.png'\r\n    },\r\n]\r\n\r\nconst selectIngameList = [\r\n    {\r\n        name: 'Valhalla',\r\n        type: 8,\r\n        img: 'valhalla.png'\r\n    },\r\n    {\r\n        name: 'Valhalla',\r\n        type: 6,\r\n        img: 'MetamonEgg.png'\r\n    },\r\n    {\r\n        name: 'Anti Fatigue',\r\n        type: 11,\r\n        img: 'AntiFatiguePotion.png'\r\n    },\r\n    {\r\n        name: 'Purple Potion',\r\n        type: 10,\r\n        img: 'purple-potion.png'\r\n    },\r\n    {\r\n        name: 'Villa Fragments',\r\n        type: 1015,\r\n        img: 'villa.png'\r\n    },\r\n    {\r\n        name: 'Mansion Fragments',\r\n        type: 1016,\r\n        img: 'mansion.png'\r\n    },\r\n    {\r\n        name: 'Castle Fragments',\r\n        type: 1017,\r\n        img: 'castle.png'\r\n    },\r\n    {\r\n        name: 'Donuts',\r\n        type: 1004,\r\n        img: 'Donuts.png'\r\n    },\r\n]\r\n\r\nconst NFTs = () => {\r\n    const [listMetamon, setListMetamon] = useState([]);\r\n    const [listDiamond, setListDiamond] = useState([]);\r\n    const [listEgg, setListEgg] = useState([]);\r\n    const [listPotion, setListPotion] = useState([]);\r\n    const [kissUpLand, setKissUpLand] = useState({});\r\n    const [BigGreen, setBigGreen] = useState({});\r\n    const [MetamonR, setMetamonR] = useState({});\r\n    const [MMLand, setMMLand] = useState({});\r\n    const [selectStats, setSelectStats] = useState(selectStatsList[0].id);\r\n    const [selectedStatsList, setSelectedStatsList] = useState();\r\n    const [tokenPrice, setTokenPrice] = useState(0);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [listStats, setListStats] = useState([]);\r\n    const [sellIngameList, setSellIngameList] = useState([]);\r\n    const [selectTypeIngame, setSelectTypeIngame] = useState(6);\r\n    const refSelect = useRef();\r\n\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    const handleChangeSelect = (e) => {\r\n        // console.log(e.target.value)\r\n        setSelectStats(e.target.value)\r\n    }\r\n    const handleChangeSelectSellIngame = (e) => {\r\n        setSelectTypeIngame(e.target.value)\r\n    }\r\n    const { raca, elmon, elcoin, btc } = useSelector(state => state.price)\r\n    const getData = async () => (\r\n        Promise.all([\r\n            getDataMarket(13, 5).then(res =>\r\n                setListMetamon(res.data.list)\r\n            ),\r\n            getDataMarket(15, 5).then(res =>\r\n                setListPotion(res.data.list)\r\n            ),\r\n            getDataMarket(16, 5).then(res =>\r\n                setListDiamond(res.data.list)\r\n            ),\r\n            getDataMarket(17, 5).then(res =>\r\n                setListEgg(res.data.list)\r\n            ),\r\n            getStats(17).then(res =>\r\n                setListStats(res.data.list)\r\n            ),\r\n\r\n            getDataMarket(20, 1).then(res => {\r\n                setKissUpLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getDataMarket(23, 1).then(res => {\r\n                setMetamonR(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getDataMarket(7, 1).then(res => {\r\n                setMMLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getDataMarket(46, 1).then(res => {\r\n                setBigGreen(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n        ])\r\n    )\r\n    useEffect(() => {\r\n        // axios.get(\"/api/raca/market/price\").then(res => console.log(res.data))\r\n       \r\n        setTokenPrice(raca)\r\n    }, [raca])\r\n    useEffect(() => {\r\n        getData();\r\n        convertDateTime();\r\n        const rerenderData = setInterval(() => {\r\n            getData();\r\n            convertDateTime();\r\n        }, 20000)\r\n\r\n        return () => {\r\n            setListMetamon([])\r\n            setListDiamond([])\r\n            setListEgg([])\r\n            setListPotion([])\r\n            setListStats([])\r\n            setKissUpLand({})\r\n            setTokenPrice(0)\r\n            clearInterval(rerenderData);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        // refSelect.current.textContent = 'something'\r\n        getStats(selectStats).then(res => setSelectedStatsList(res.data.list));\r\n        const rerenderStats = setInterval(() => {\r\n            getStats(selectStats).then(res => setSelectedStatsList(res.data.list));\r\n        }, 60000);\r\n        return () => {\r\n            clearInterval(rerenderStats)\r\n            setSelectedStatsList()\r\n        }\r\n    }, [selectStats])\r\n\r\n    useEffect(() => {\r\n        const getChild = refSelect.current.childNodes[0]\r\n\r\n        if (getChild?.childNodes[1]) {\r\n            getChild?.removeChild(getChild?.childNodes[1])\r\n        }\r\n        getSellIngameList(getFormData(selectTypeIngame)).then(res => {\r\n            if (res?.data) {\r\n                const data = res.data.data;\r\n                setSellIngameList(data.shopOrderList)\r\n            }\r\n\r\n        }).catch(err => console.log(err));\r\n        const rerenderStats = setInterval(() => {\r\n            getSellIngameList(getFormData(selectTypeIngame)).then(res => {\r\n                if (res?.data) {\r\n                    const data = res.data.data;\r\n                    setSellIngameList(data.shopOrderList)\r\n                }\r\n\r\n            });\r\n        }, 60000);\r\n        return () => {\r\n            clearInterval(rerenderStats)\r\n            setSellIngameList([])\r\n        }\r\n\r\n    }, [selectTypeIngame])\r\n    return (\r\n        <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n                <div className=\"statistical\">\r\n                    <Table className=\"priceToken\" sx={{ color: '#fff' }}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell colSpan={4}>Token Price</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className='tokenPrice'>RACA</TableCell>\r\n                                <TableCell className='tokenPrice'>ELMON</TableCell>\r\n                                <TableCell className='tokenPrice'>ELCOIN</TableCell>\r\n                                <TableCell className='tokenPrice'>BTC </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    {raca}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {elmon}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {elcoin}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {numberWithCommas(btc)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                        </TableBody>\r\n\r\n                    </Table>\r\n                    <SwapRacaToUSD />\r\n                    <p id='timeUpdated'>{timeUpdated}</p>\r\n                    <div className='pricetable'>\r\n                        <TableContainer className='table-scroll' component={Paper}>\r\n                            <Table className='tablePrice' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">#</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/metamon.png' alt='Metamon' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/MetamonEgg.png' alt='Egg' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/DiamondYellow.png' alt='DiamondYellow' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/raca/potion.png' alt='Potion' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <FormControl className='select-ingame'>\r\n                                                <Select\r\n                                                    size='small'\r\n                                                    labelId=\"select-ingame\"\r\n                                                    id=\"select-ingame\"\r\n                                                    value={selectTypeIngame}\r\n                                                    onChange={handleChangeSelectSellIngame}\r\n                                                    sx={{ color: '#fff', padding: 0 }}\r\n                                                    className='select-stats'\r\n                                                    ref={refSelect}>\r\n                                                    {selectIngameList && selectIngameList.map((item, index) => (\r\n                                                        <MenuItem key={item.type} value={item.type}>\r\n                                                            <img style={{ objectFit: 'contain' }} width='50px' height='50px' src={`/marketplaceraca/raca/${item.img}`} alt={item.name} />\r\n                                                            {item.name}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {/* <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/valhalla.png' alt='valhalla' /> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {listEgg && listMetamon && listDiamond && listPotion && listEgg.map((child, index) => {\r\n                                        return (\r\n                                            <TableRow key={index + 1}>\r\n                                                <TableCell align=\"center\" sx={{ borderLeft: '1px solid' }}>{index + 1}</TableCell>\r\n                                                <TableCell align=\"center\">{millify(Math.floor(listMetamon[index]?.fixed_price))} (~{(tokenPrice * listMetamon[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listEgg[index]?.fixed_price))} (~{(tokenPrice * listEgg[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listDiamond[index]?.fixed_price))} (~{(tokenPrice * listDiamond[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listPotion[index]?.fixed_price))} (~{(tokenPrice * listPotion[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{sellIngameList.length !== 0 ? `${numberWithCommas(Math.floor(sellIngameList[index]?.amount))} (~${(tokenPrice * sellIngameList[index]?.amount).toFixed(2)})` : 0}</TableCell>\r\n                                            </TableRow>)\r\n                                    })}\r\n\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n                    <Box className=\"stats-session\">\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', padding: '5px 12px' }}>\r\n                            <Typography style={{\r\n                                textTransform: 'uppercase',\r\n                                fontWeight: \"bold\",\r\n                                fontSize: \"larger\",\r\n                            }}>Stats</Typography>\r\n                            <FormControl className='select-stats' style={{ width: '150px' }}>\r\n                                <Select\r\n                                    size='small'\r\n                                    labelId=\"select\"\r\n                                    id=\"filter\"\r\n                                    value={selectStats}\r\n                                    onChange={handleChangeSelect}\r\n                                    sx={{ color: '#fff', }}\r\n                                    className='select-stats'\r\n                                >\r\n                                    {selectStatsList && selectStatsList.map((item, index) => (\r\n                                        <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <Box sx={{ display: 'flex', gap: \"2%\" }}>\r\n                            <Box className='stats'>\r\n                                <img width='50px' height='50px' className='symbols' src='/marketplaceraca/raca/MetamonEgg.png' alt='Egg' />\r\n                                <TableContainer className='table-scroll' component={Paper}>\r\n                                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">#</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Price</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Count</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Time</p>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {listStats && listStats.map((item, index) => {\r\n                                                return (\r\n                                                    <TableRow key={index + 1}>\r\n                                                        <TableCell align=\"center\" sx={{ borderLeft: \"1px solid\" }}>{index + 1}</TableCell>\r\n                                                        <TableCell style={{ paddingLeft: '5px' }} align=\"center\">{numberWithCommas(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                                        <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                                        <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                                    </TableRow>)\r\n                                            })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                            <Box className='stats'>\r\n                                <img width='50px' height='50px' style={{ objectFit: 'contain' }} className='symbols' src={`/marketplaceraca/raca/${selectStatsList.filter(item => item.id === selectStats)[0].img}`} alt={selectStatsList.filter(item => item.id === selectStats)[0].name} />\r\n                                <TableContainer className='table-scroll' component={Paper}>\r\n                                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">#</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Price</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>{Number(selectStats) === 13 ? \"Info\" : \"Count\"}</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Time</p>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {selectedStatsList && selectedStatsList.map((item, index) => {\r\n                                                return (\r\n                                                    <TableRow key={index + 1}>\r\n                                                        <TableCell align=\"center\" sx={{ borderLeft: \"1px solid\" }}>{index + 1}</TableCell>\r\n                                                        <TableCell align=\"center\" style={{ paddingLeft: '1px' }}>{millify(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                                        {Number(selectStats) === 13 ? (\r\n                                                            <TableCell className=\"info-metamon-cell\" padding='none'>\r\n                                                                <Typography sx={{ color: '#fff', fontSize: '12px' }}>{item.level}</Typography>\r\n                                                                <Typography sx={{ color: '#fff', fontSize: '12px' }}>{item.score}</Typography>\r\n                                                            </TableCell>\r\n\r\n                                                        ) : (\r\n                                                            <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n\r\n                                                        )}\r\n                                                        <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                                    </TableRow>)\r\n                                            })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                    </Box>\r\n\r\n\r\n                </div>\r\n                {/* <div id=\"xike\" style={{ transform: 'translateY(10%)' }}>\r\n                    <p>Xìke Captain</p>\r\n                    <img alt=\"Xike\" src=\"/marketplaceraca/raca/xike.png\" />\r\n                </div> */}\r\n            </Box>\r\n            <Box className=\"cards\">\r\n                {MetamonR &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={MetamonR} />\r\n                    </Box>}\r\n\r\n                {BigGreen &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={BigGreen} />\r\n                    </Box>}\r\n\r\n                {MMLand &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={MMLand} />\r\n                    </Box>}\r\n\r\n                {kissUpLand &&\r\n                    <Box className=\"card loading\"><Card nft={kissUpLand} />\r\n                    </Box>}\r\n            </Box>\r\n            <StatsChart />\r\n        </Box>\r\n\r\n    );\r\n}\r\nexport default NFTs;","import { useEffect, useState } from 'react';\r\n\r\nimport { MenuItem, FormControl, Select, TextField, Box, Button, Container } from '@mui/material'\r\nimport { handleArrange, handleFilters } from '../../app/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const InputSelect = ({ handleConfirm }) => {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.filters)\r\n    const myStorage = window.localStorage;\r\n    const [arrange, setArrange] = useState(filters.arrange);\r\n    const [minScore, setMinScore] = useState(filters.minScore);\r\n    const [level, setLevel] = useState(filters.level);\r\n\r\n\r\n    const handleLevelChange = (e) => {\r\n        setLevel(e.target.value);\r\n    }\r\n\r\n    const handleMinScoreChange = (e) => {\r\n        setMinScore(e.target.value);\r\n    }\r\n\r\n    const ArrangeChange = (event) => {\r\n        setArrange(event.target.value);\r\n        dispatch(handleArrange(event.target.value));\r\n\r\n    };\r\n    const ConfirmHandle = () => {\r\n        dispatch(handleFilters({ minScore, level }));\r\n        setArrange(0)\r\n        handleConfirm(minScore, level);\r\n        myStorage.setItem('metamon', JSON.stringify({\r\n            score: minScore,\r\n            levelMetamon: level\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='lg xl' className='container' sx={{ margin: '20px 0px 0px 0px', marginTop: '20px', color: '#fff', }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                alignItems: 'end',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <TextField value={minScore} onChange={handleMinScoreChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"min-score\" label=\"Min score\" variant=\"standard\" type='number' autoComplete=\"new-password\"\r\n                />\r\n                <TextField value={level} onChange={handleLevelChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"level\" label=\"Level\" variant=\"standard\" type='number' autoComplete=\"new-password\"\r\n                />\r\n                <Button sx={{ height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={ConfirmHandle}>Confirm</Button>\r\n            </Box>\r\n            <Box sx={{\r\n                textAlign: 'center',\r\n                // transform: 'translateX(-85px)'\r\n            }}>\r\n                <FormControl className='select-metamon' style={{ margin: '20px 0' }}>\r\n                    <Select\r\n                        size='small'\r\n                        labelId=\"select\"\r\n                        id=\"filter\"\r\n                        value={arrange}\r\n                        onChange={ArrangeChange}\r\n                        sx={{ color: '#fff', }}\r\n                    >\r\n                        <MenuItem value={0}>Lowest Price</MenuItem>\r\n                        <MenuItem value={1}>Highest Level</MenuItem>\r\n                        <MenuItem value={2}>Highest Score</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\r\nimport { InputSelect } from \"./InputSelect\";\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nimport '../../styles/metamon.css'\r\nimport '../../styles/nfts.css'\r\nimport { handleArrange } from \"../../app/actions\";\r\n\r\n\r\nconst getData = (minScore = 315, level = 1, pageNo = 1) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?saleType&category=13&tokenType&tokenId=-1&pageNo=${pageNo}&pageSize=100&sortBy=single_price&order=asc&min_level=${level}&max_level=60&min_score=${minScore}&max_score=`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nconst Metamon = () => {\r\n    const { minScore: stateMinScore, level:stateLevel, arrange } = useSelector(state => state.filters)\r\n\r\n    const [listMetamon, setListMetamon] = useState([])\r\n    const [listShow, setListShow] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const dispatch = useDispatch();\r\n    const { raca } = useSelector(state => state.price);\r\n\r\n    const getListMetamon = async (minScore = stateMinScore, level = stateLevel) => {\r\n        setLoading(true);\r\n        await getData(minScore, level, 1).then(async (res) => {\r\n            const data = res.data;\r\n            let listData = res.data.list\r\n            for (let i = 1; i <= Math.floor(data.total / 100); i++) {\r\n                const list = await getData(minScore, level, i + 1).then(res => res.data.list);\r\n                listData = listData.concat(list)\r\n                // console.log(listData)\r\n            }\r\n            setListMetamon(listData)\r\n        });\r\n        setLoading(false);\r\n\r\n    }\r\n    const handleListMetamon = (minScore, level) => {\r\n        // console.log(minScore, level)\r\n        setListMetamon([])\r\n        getListMetamon(minScore, level);\r\n        dispatch(handleArrange(0));\r\n    }\r\n    useEffect(() => {\r\n        handleListMetamon();\r\n    }, [])\r\n    useEffect(() => {\r\n        //Get list property\r\n        const sortBy = (filter) => {\r\n            return listMetamon.sort((a, b) => {\r\n                if (filter === 'fixed_price') {\r\n                    return Number(a[filter]) - Number(b[filter])\r\n                } else {\r\n                    return Number(b[filter]) - Number(a[filter])\r\n                }\r\n            });\r\n        }\r\n\r\n        switch (arrange) {\r\n            case 0:\r\n                setListShow(sortBy('fixed_price').slice(0, 10));\r\n                break;\r\n            case 1:\r\n                setListShow(sortBy('level').slice(0, 10));\r\n                break;\r\n            case 2:\r\n                setListShow(sortBy('score').slice(0, 10));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return () => {\r\n            setListShow([])\r\n        }\r\n    }, [listMetamon, arrange]);\r\n\r\n    return (\r\n        <Box sx={{ textAlign: 'left' }}>\r\n            <InputSelect handleConfirm={handleListMetamon} />\r\n            <TableContainer className='table-scroll metamon' component={Paper}>\r\n                <Table className='tablePrice ' aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                ID\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Score\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Level\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" sx={{ width: '25%' }}>\r\n                                Price\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {loading && (\r\n                            <TableRow >\r\n                                <TableCell sx={{ borderLeft: '2px solid' }} colSpan={6} align=\"center\">\r\n                                    <CircularProgress />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                        {listShow && listShow.map((metamon, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell align=\"center\" sx={{borderLeft:'1px solid'}}>{index + 1}</TableCell>\r\n                                    <TableCell id={`metamon-${index + 1}`} align=\"center\" sx={{ position: 'relative' }}>\r\n                                        <img width='50px' height='50px' src={metamon.image_url} alt='Metamon' />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">\r\n                                        <a href={`https://market.radiocaca.com/#/market-place/${metamon.id}`} target='_blank'\r\n                                            style={{ color: '#fff', textDecoration: 'none' }}\r\n                                            rel=\"noreferrer\"\r\n                                        >\r\n                                            {metamon.token_id}</a></TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.score}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.level}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{numberWithCommas(metamon.fixed_price)} (~{(raca * metamon.fixed_price).toFixed(2)})</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Metamon;\r\n\r\n","import {\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  handlePower,\r\n  handleSort,\r\n  handleFilterName,\r\n  handleTokenId,\r\n  addRarity,\r\n  removeRarity,\r\n  addAura,\r\n  removeAura,\r\n} from \"../../app/actions\";\r\n\r\nconst InputFilters = () => {\r\n  const { min, max } = useSelector(\r\n    (state) => state.filtersElemon\r\n  );\r\n  const [minPower, setMinPower] = useState(min);\r\n  const [maxPower, setMaxPower] = useState(max);\r\n  const listAura = [...Array(9).keys()];\r\n  const dispatch = useDispatch();\r\n\r\n  const listRarity = [\r\n    {\r\n      rarity: \"B\",\r\n      color: \"#7ebeff\",\r\n      textShadow: \"0 0 6px #4553ff\",\r\n    },\r\n    {\r\n      rarity: \"A\",\r\n      color: \"#83ffcb\",\r\n      textShadow: \"0 0 6px #45ffb0\",\r\n    },\r\n    {\r\n      rarity: \"S\",\r\n      color: \"#ff83fa\",\r\n      textShadow: \"0 0 6px #ff45d4\",\r\n    },\r\n    {\r\n      rarity: \"SS\",\r\n      color: \"#ffe283\",\r\n      textShadow: \"0 0 6px #eaff45\",\r\n    },\r\n    {\r\n      rarity: \"SSS\",\r\n      color: \"#ff8383\",\r\n      textShadow: \"0 0 6px #ff2424\",\r\n    },\r\n  ];\r\n\r\n  const handleMinPower = (event) => {\r\n    setMinPower(event.target.value);\r\n  };\r\n  const handleMaxPower = (event) => {\r\n    setMaxPower(event.target.value);\r\n  };\r\n  const handleSortPrice = (event) => {\r\n    dispatch(handleSort(event.target.value));\r\n  };\r\n  const handleName = (event) => {\r\n    dispatch(handleFilterName(event.target.value));\r\n  };\r\n  const handleSubmit = () => {\r\n    dispatch(handlePower({ minPower, maxPower }));\r\n  };\r\n  const changeTokenId = (e) => {\r\n    dispatch(handleTokenId(e.target?.value));\r\n  };\r\n  const handleRarity = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addRarity(e.target.value));\r\n    } else {\r\n      dispatch(removeRarity(e.target.value));\r\n    }\r\n  };\r\n  const handleAura = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addAura(e.target.value));\r\n    } else {\r\n      dispatch(removeAura(e.target.value));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMinPower(min);\r\n  }, [min]);\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filter-content\">\r\n        <div className=\"filter-top\">\r\n          <select onChange={handleSortPrice} className=\"market__select\">\r\n            <option value=\"0\">Lowest price</option>\r\n            <option value=\"1\">Highest price</option>\r\n            <option value=\"2\">Lowest Point</option>\r\n            <option value=\"3\">Highest Point</option>\r\n          </select>\r\n          <select onChange={(e) => handleName(e)} className=\"market__select\">\r\n            <option value=\"0\">Elemon name</option>\r\n            <option value=\"4\">Neikoo</option>\r\n            <option value=\"8\">Skurumi</option>\r\n            <option value=\"9\">RusMoonch</option>\r\n            <option value=\"10\">PoxArchies</option>\r\n            <option value=\"11\">Legolas</option>\r\n            <option value=\"12\">Mykasa</option>\r\n            <option value=\"15\">Hyugar</option>\r\n            <option value=\"16\">Inori</option>\r\n            <option value=\"22\">Kuroo</option>\r\n            <option value=\"17\">Elight</option>\r\n            <option value=\"20\">Finter</option>\r\n            <option value=\"21\">Ties</option>\r\n            <option value=\"26\">Hoorus</option>\r\n            <option value=\"6\">Raizer</option>\r\n            <option value=\"19\">Scary</option>\r\n            <option value=\"13\">Cokoner</option>\r\n          </select>\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <Box className=\"filters_expand\">\r\n              <Box className=\"filter_item\">\r\n                <Typography variant=\"h5\">Rarity</Typography>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className=\"checkbox_item rarity\"\r\n                >\r\n                  {listRarity.length &&\r\n                    listRarity.map((item, index) => (\r\n                      <FormControlLabel\r\n                        onChange={handleRarity}\r\n                        key={index}\r\n                        value={index + 1}\r\n                        control={\r\n                          <Checkbox\r\n                            sx={{\r\n                              color: item.color,\r\n                              \"&.Mui-checked\": {\r\n                                color: item.color,\r\n                              },\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item.rarity}\r\n                        labelPlacement=\"end\"\r\n                        sx={{ color: item.color, textShadow: item.textShadow }}\r\n                      />\r\n                    ))}\r\n                </FormControl>\r\n              </Box>\r\n              <Box className=\"filter_item\">\r\n                <Typography variant=\"h5\">Aura</Typography>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className=\"checkbox_item aura\"\r\n                >\r\n                  {listAura.map((item, index) => (\r\n                    <FormControlLabel\r\n                      key={index}\r\n                      onChange={handleAura}\r\n                      value={item + 1}\r\n                      control={\r\n                        <Checkbox\r\n                          sx={{\r\n                            color: \"#ffe283\",\r\n                            \"&.Mui-checked\": {\r\n                              color: \"#ffe283\",\r\n                            },\r\n                          }}\r\n                        />\r\n                      }\r\n                      label={\r\n                        <img\r\n                          width=\"35px\"\r\n                          alt=\"aura\"\r\n                          src={`https://app.elemon.io/assets/images/aura/quality_${item + 1\r\n                            }.png`}\r\n                        />\r\n                      }\r\n                      labelPlacement=\"end\"\r\n                    />\r\n                  ))}\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <input\r\n            onBlur={changeTokenId}\r\n            className=\"market__input\"\r\n            placeholder=\"Elemon Id\"\r\n            type=\"number\"\r\n          />\r\n\r\n          <Box className=\"filter_power\">\r\n            <TextField\r\n              value={minPower}\r\n              onChange={handleMinPower}\r\n              sx={{ width: 100, marginRight: \"0.5rem\" }}\r\n              id=\"min-power\"\r\n              label=\"Min\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              className=\"input_power min\"\r\n            />\r\n            <TextField\r\n              value={maxPower}\r\n              onChange={handleMaxPower}\r\n              sx={{ width: 100, marginRight: \"0.5rem\" }}\r\n              id=\"max-power\"\r\n              label=\"Max\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              className=\"input_power max\"\r\n            />\r\n            <Button\r\n              sx={{ height: \"100%\", color: \"#383838\", background: \"#fcc33c\" }}\r\n              variant=\"contained\"\r\n              onClick={handleSubmit}\r\n              className=\"btnConfirm_power\"\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputFilters;\r\n","import React from 'react';\r\nimport '../../styles/elemon.css';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\n\r\nconst InfoCard = ({ elemon }) => {\r\n    const rarity = ['B', 'A', 'S', 'SS', 'SSS'];\r\n    const classes = [\r\n        'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel', 'Fairy'\r\n    ]\r\n    const isOwner = elemon.ownerAddress === '0x10201091597635eC7b8e208306E6aDCC7c167925';\r\n    const URI = 'https://app.elemon.io';\r\n    const bodyPart = [elemon.bodyPart1, elemon.bodyPart2, elemon.bodyPart3, elemon.bodyPart4, elemon.bodyPart5, elemon.bodyPart6];\r\n\r\n    return (\r\n        <div className=\"character-item owner\">\r\n            <div className=\"head\">\r\n                <p className=\"id\">ID: {elemon.tokenId}</p>\r\n                <div className=\"character-type\">\r\n                    <img alt='' img-rarity=\"\" src={`${URI}/assets/images/rarity_${rarity[elemon.rarity - 1]}.png`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"img\">\r\n                    <div className=\"img-left\">\r\n                        <div className=\"icon\">\r\n                            <img alt='' src={`${URI}/assets/images/element/${classes[elemon.class - 1]}.png`} /></div>\r\n                        <p className=\"icon_text\">\r\n                            <span>\r\n                                <img alt='' src={`${URI}/assets/images/purity_${elemon.purity === 0 ? 'Hybrid' : 'Pure'}.png`} style={{ width: '100%' }} />\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <img  alt='' src={`https://statics.elemon.io/avatar/${elemon.baseCardId}/${elemon.baseCardId}_${bodyPart.join('_')}.png`} className=\"main\" />\r\n                    <div className={`img_aura quality_${elemon.quality}`}></div>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <p className=\"price\">\r\n                        <img  src={`${URI}/assets/images/busd_ticker.png`} width=\"40\" alt=\"\" />\r\n                        {elemon.lastPrice / 1000000000000000000} BUSD\r\n                    </p>\r\n                    <div className=\"element\">\r\n                        <div className=\"icon\">\r\n                            <img  src={`${URI}/assets/images/icon-power.png`} alt=\"\" />\r\n\r\n                        </div>\r\n                        <p className=\"element__name\" data-power=\"\">{numberWithCommas(elemon.point)}</p>\r\n                    </div>\r\n                    <a rel=\"noreferrer\" target='_blank' href={`https://app.elemon.io/elemon/${elemon.tokenId}`} className={`box__btn buy ${isOwner ? 'owner' : ''}`} type=\"button\">\r\n                        {isOwner ? 'My Elemon' : \"Info\"}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default InfoCard;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InputFilters from \"./InputFilters\";\r\nimport \"../../styles/elemon.css\";\r\nimport { Box, CircularProgress, Grid } from \"@mui/material\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst getElemonItem = (\r\n  pageNumber = 1,\r\n  pageSize = 20,\r\n  priceMode = 2,\r\n  baseCardId,\r\n  tokenId,\r\n  rarities,\r\n  classes,\r\n  purities\r\n) => {\r\n  return axios\r\n    .get(\r\n      `https://app.elemon.io/market/getElemonItems?pageNumber=${pageNumber}&pageSize=${pageSize}&positionType=2&priceMode=${priceMode}&baseCardId=&tokenId=&rarities=&classes=&purities=`\r\n    )\r\n    .then((res) => res.data, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    });\r\n};\r\nconst getElemonInfo = (listElemon) => {\r\n  const listTokenId = listElemon.map((item) => item.tokenId);\r\n  return axios\r\n    .get(\r\n      `https://app.elemon.io/elemon/GetElemonInfo?tokenId=${listTokenId?.join(\r\n        \",\"\r\n      )}`\r\n    )\r\n    .then((res) => res.data, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    })\r\n    .catch((error) => error);\r\n};\r\n\r\nconst Elemon = () => {\r\n  const [listElemon, setListElemon] = useState([]);\r\n  const [listElemonInfo, setListElemonInfo] = useState([]);\r\n  const [timeUpdated, setTimeUpdated] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [listFilter, setListFilter] = useState([]);\r\n  const { min, max, sort, name, tokenId, aura, rarity } = useSelector(\r\n    (state) => state.filtersElemon\r\n  );\r\n\r\n  const convertDateTime = () => {\r\n    const now = new Date();\r\n    setTimeUpdated(now.toLocaleString());\r\n  };\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getElemonItem(1, 100).then(async (res) => {\r\n        await getElemonItem(1, res.paging.totalCount).then((res) =>\r\n          setListElemon(res.data)\r\n        );\r\n      });\r\n    };\r\n    getData();\r\n    convertDateTime();\r\n\r\n    return () => {\r\n      setListElemon([]);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const getInfo = async () => {\r\n      setLoading(true);\r\n      const size = 250;\r\n      const lengthList = listElemon.length;\r\n      const loop =\r\n        lengthList % size === 0 ? lengthList / size : lengthList / size + 1;\r\n      for (let i = 1; i <= loop; i++) {\r\n        const amount =\r\n          lengthList % size !== 0 && lengthList - i * size < 0\r\n            ? (i - 1) * size + (lengthList % size)\r\n            : i * size;\r\n        await getElemonInfo(listElemon?.slice((i - 1) * size, amount)).then(\r\n          (res) => {\r\n            const listInfo = listElemon\r\n              .slice((i - 1) * size, amount)\r\n              .map((item, index) => {\r\n                return {\r\n                  ...item,\r\n                  point: res?.data[index]?.point,\r\n                };\r\n              });\r\n            setListElemonInfo((pre) => pre.concat(listInfo));\r\n          }\r\n        );\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    getInfo();\r\n    return () => {\r\n      setListElemonInfo([]);\r\n    };\r\n  }, [listElemon]);\r\n  useEffect(() => {\r\n    const filter = listElemonInfo\r\n      .filter((elemon) => {\r\n        if (tokenId) {\r\n          return elemon.tokenId === tokenId;\r\n        } else {\r\n          const checkPower = (power, type) => {\r\n            if (!power) return true;\r\n            return type === 1 ? elemon?.point >= power : elemon?.point <= power;\r\n          };\r\n\r\n          const checkName =\r\n            Number(name) !== 0 ? elemon.baseCardId === Number(name) : true;\r\n          const checkRarity =\r\n            rarity.length !== 0 ? rarity.includes(elemon.rarity) : true;\r\n          const checkAura =\r\n            aura.length !== 0 ? aura.includes(elemon.quality) : true;\r\n          return checkPower(min, 1) && checkPower(max, 2) && checkName && checkRarity && checkAura;\r\n        }\r\n      })\r\n      .sort((a, b) => {\r\n        switch (Number(sort)) {\r\n          case 0:\r\n            return a.lastPrice >= b.lastPrice ? 1 : -1;\r\n          case 1:\r\n            return a.lastPrice <= b.lastPrice ? 1 : -1;\r\n          case 2:\r\n            return a.point >= b.point ? 1 : -1;\r\n          case 3:\r\n            return a.point <= b.point ? 1 : -1;\r\n          default:\r\n            return 0;\r\n        }\r\n      });\r\n\r\n    setListFilter(filter);\r\n    return () => {\r\n      setListFilter([]);\r\n    };\r\n  }, [loading, min, max, sort, name, tokenId, aura, rarity, listElemonInfo]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ textAlign: \"center\" }}>\r\n        <InputFilters />\r\n        <p style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }} className=\"timeUpdate\">{timeUpdated}</p>\r\n        <Grid container spacing={1} sx={{ boxShadow: 'none', justifyContent: 'center' }}>\r\n          {listFilter &&\r\n            listFilter?.slice(0, 100).map((item, index) => (\r\n              <Grid key={index} item xs={6} md={4} lg={2.2} >\r\n                <InfoCard elemon={item} />\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        {loading && <CircularProgress />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Elemon;\r\n","export const contractAddress = '0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16'\r\nexport const contractABI = [\r\n    {\r\n        \"type\": \"constructor\",\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"string\", \"name\": \"symbol\" },\r\n            { \"type\": \"string\", \"name\": \"name\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"transferFrom\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"from\" },\r\n            { \"type\": \"address\", \"name\": \"to\" },\r\n            { \"type\": \"uint256\", \"name\": \"value\" }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"balanceOf\",\r\n        \"constant\": true,\r\n        \"stateMutability\": \"view\",\r\n        \"payable\": false, \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"owner\" }\r\n        ],\r\n        \"outputs\": [\r\n            { \"type\": \"uint256\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"event\",\r\n        \"anonymous\": false,\r\n        \"name\": \"Transfer\",\r\n        \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"from\", \"indexed\": true },\r\n            { \"type\": \"address\", \"name\": \"to\", \"indexed\": true },\r\n            { \"type\": \"address\", \"name\": \"value\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"error\",\r\n        \"name\": \"InsufficientBalance\",\r\n        \"inputs\": [\r\n            { \"type\": \"account\", \"name\": \"owner\" },\r\n            { \"type\": \"uint256\", \"name\": \"balance\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"addPerson\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"addPeople\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"type\": \"tuple[]\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"getPerson\",\r\n        \"constant\": true,\r\n        \"stateMutability\": \"view\",\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"uint256\", \"name\": \"id\" }\r\n        ],\r\n        \"outputs\": [\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"event\",\r\n        \"anonymous\": false,\r\n        \"name\": \"PersonAdded\",\r\n        \"inputs\": [\r\n            { \"type\": \"uint256\", \"name\": \"id\", \"indexed\": true },\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\", \"indexed\": false },\r\n                    { \"type\": \"uint16\", \"name\": \"age\", \"indexed\": false }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];","import { createContext, useEffect, useState } from 'react'\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport Web3 from \"web3\";\r\nimport { ethers } from \"ethers\";\r\nimport { contractABI, contractAddress } from './constants'\r\nexport const AppContext = createContext();\r\n\r\nconst getEthereumProvider = () => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n    const signer = provider.getSigner();\r\n    const transactionContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n    console.log({\r\n        provider, signer, transactionContract\r\n    })\r\n}\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [appStatus, setAppStatus] = useState('loading')\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n    const provider = new WalletConnectProvider({\r\n        rpc: {\r\n            56: 'https://bsc-dataseed1.binance.org',\r\n            1: \"https://cloudflare-eth.com\",\r\n\r\n        },\r\n        // bridge: 'https://bridge.walletconnect.org',\r\n        qrcodeModalOptions: {\r\n            mobileLinks: [\r\n                \"metamask\",\r\n                \"trust\",\r\n                \"rainbow\",\r\n                \"argent\",\r\n                \"imtoken\",\r\n                \"pillar\",\r\n            ],\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        const checkIfWalletConnected = async () => {\r\n            if (!window?.ethereum && !currentAccount) return setAppStatus('noMetamask')\r\n            try {\r\n                if (currentAccount) {\r\n                    setAppStatus('connected');\r\n                    // getEthereumProvider()\r\n                    const web3 = new Web3(window.ethereum);\r\n                    const abi = contractABI;\r\n                    const address = '0xD40C03B8680D4b6a4d78FC3C6F6A28C854e94A79';\r\n                    const contract = new web3.eth.Contract(abi, address);\r\n                    // const totalSupply = await contract.methods.totalSupply().call();\r\n                    // console.log(contract.methods);\r\n                    // console.log(contract)\r\n\r\n                } else {\r\n                    const addressArray = await window?.ethereum?.request({\r\n                        method: 'eth_accounts',\r\n                    })\r\n\r\n                    if (addressArray?.length > 0) {\r\n                        //connected\r\n                        setAppStatus('connected');\r\n                        setCurrentAccount(addressArray[0]);\r\n\r\n                    } else {\r\n                        // not connected\r\n                        setAppStatus('not-connected');\r\n                        setCurrentAccount();\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                alert(err)\r\n                console.log(err);\r\n                setAppStatus('error')\r\n            }\r\n        }\r\n        checkIfWalletConnected();\r\n        window?.ethereum?.on('accountsChanged', async () => {\r\n            checkIfWalletConnected();\r\n        })\r\n\r\n    }, [currentAccount])\r\n\r\n\r\n    const disconnectWC = async () => {\r\n        await provider.disconnect();\r\n        setAppStatus('not-connected');\r\n        setCurrentAccount();\r\n        window.w3 = undefined;\r\n    }\r\n    const walletConnect = async () => {\r\n        try {\r\n            await provider.enable();\r\n\r\n            //create Web3 instance\r\n            const web3 = new Web3(provider)\r\n            window.w3 = web3\r\n            const accounts = await web3.eth.getAccounts();\r\n            const account = accounts[0];\r\n            setCurrentAccount(account.toLowerCase())\r\n            console.log(account)\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n        }\r\n    }\r\n    const connectToWallet = async () => {\r\n        if (!window.ethereum && !currentAccount) return setAppStatus('noMetamask')\r\n\r\n        try {\r\n            setAppStatus('loading');\r\n\r\n            const addressArray = await window?.ethereum?.request({\r\n                method: 'eth_requestAccounts',\r\n            })\r\n            if (addressArray.length > 0) {\r\n                setAppStatus('connected')\r\n                setCurrentAccount(addressArray[0])\r\n            } else {\r\n                setAppStatus('not-connected')\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setAppStatus('error')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ appStatus, currentAccount, connectToWallet, walletConnect, disconnectWC }}>{children}</AppContext.Provider>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Table } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport '../../styles/market_history.css'\r\n\r\n\r\nconst MarketHistory = () => {\r\n  const { currentAccount } = useContext(AppContext);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [historyList, setHistoryList] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [totalList, setTotalList] = useState([])\r\n  const [totalBuy, setTotalBuy] = useState('');\r\n  const [totalSell, setTotalSell] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getMarketHistory = (pageNo, pageSize) => {\r\n      return axios(`https://market-api.radiocaca.com/users/${currentAccount}/histories?pageNo=${pageNo}&pageSize=${pageSize}`).then(res => res.data)\r\n    }\r\n    const getHistoryData = async () => {\r\n      let pageNo = 1;\r\n      let pageSize = 10;\r\n      const isMD = currentAccount.toLowerCase() === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16';\r\n      if (isMD) {\r\n        getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n          setLength(res.total)\r\n          const listDataMD = await getMarketHistory(1, res.total - 8).then(async (res) => {\r\n            const listDataMD2 = await getMarketHistory(2, res.total - 7).then(res => res.list);\r\n\r\n            return res.list.concat(listDataMD2)\r\n          });\r\n          setHistoryList(listDataMD)\r\n\r\n        })\r\n      } else {\r\n        const listData = await getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n          setLength(res.total);\r\n          return getMarketHistory(pageNo, res.total).then(res => res.list);\r\n        })\r\n        setHistoryList(listData);\r\n      }\r\n\r\n    }\r\n\r\n    if (currentAccount) {\r\n      setLoading(true)\r\n      getHistoryData();\r\n    }\r\n    return () => {\r\n      setHistoryList([])\r\n    }\r\n  }, [currentAccount])\r\n\r\n  useEffect(() => {\r\n\r\n    const listNFT = [];\r\n    const listTotal = [];\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let lengthList = length;\r\n    if (currentAccount === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n      lengthList--;\r\n    }\r\n    if (historyList.length === lengthList && historyList.length !== 0) {\r\n      historyList.forEach(item => {\r\n        if (item.token_name === 'Metamon#363811')\r\n          return;\r\n        if (!listNFT.includes(item.token_name)) {\r\n          listNFT.push(item.token_name)\r\n          listTotal.push({\r\n            token_name: item.token_name,\r\n            totalBuy: item.type === 'Buy' ? item.amount : 0,\r\n            totalSell: item.type === 'Sell' ? item.amount - item.fee : 0,\r\n            countBuy: item.type === 'Buy' ? item.count : 0,\r\n            countSell: item.type === 'Sell' ? item.count : 0,\r\n          })\r\n        } else {\r\n          if (item.type === 'Buy') {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalBuy += item.amount;\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countBuy += item.count;\r\n          }\r\n          else {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalSell += item.amount - item.fee\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countSell += item.count\r\n          }\r\n        }\r\n        if (item.type === 'Buy') {\r\n          buy += item.amount\r\n        }\r\n        else {\r\n          sell += item.amount - item.fee\r\n        }\r\n      })\r\n      setTotalBuy(buy);\r\n      setTotalSell(sell);\r\n      // console.log(listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0]?.totalSell)\r\n      if (currentAccount === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n        const getItem = listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0];\r\n        getItem.totalSell = 100000;\r\n        setTotalSell(prev => prev + getItem.totalSell)\r\n      }\r\n\r\n      setTotalList(listTotal.map(item => {\r\n        return {\r\n          ...item,\r\n          profit: item.totalSell - item.totalBuy\r\n        }\r\n      }))\r\n      setLoading(false);\r\n    }\r\n\r\n  }, [historyList,currentAccount])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sales\">\r\n        <TableContainer id=\"sales-section\" component={Paper}>\r\n          <Table sx={{ minWidth: 650, minHeight: 150 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell component='th' align='center'>NFT</TableCell>\r\n                <TableCell component='th' align=\"center\">\r\n                  <div>\r\n                    <p colSpan={2}>Buy</p>\r\n                    <div className='multiRow'>\r\n                      <p>Amount</p>\r\n                      <p>Count</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <div>\r\n                    <p>Sell</p>\r\n                    <div className='multiRow'>\r\n                      <p>Amount</p>\r\n                      <p>Count</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\">Profit</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalList.length !== 0 && totalList.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell component='th'>{item.token_name}</TableCell>\r\n\r\n                  <TableCell>\r\n                    <div className=\"multiRow\">\r\n                      <p>{numberWithCommas(Math.floor(item.totalBuy))}</p>\r\n                      <p>{numberWithCommas(Math.floor(item.countBuy))}</p>\r\n                    </div>\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <div className='multiRow'>\r\n                      <p>{numberWithCommas(Math.floor(item.totalSell))}</p>\r\n                      <p>{numberWithCommas(Math.floor(item.countSell))}</p>\r\n                    </div>\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(item.profit))}</TableCell>\r\n\r\n                </TableRow>\r\n              ))}\r\n              {totalList.length !== 0 && (\r\n                <TableRow >\r\n                  <TableCell component='th'>Total</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalBuy))}</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalSell))}</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalSell - totalBuy))}</TableCell>\r\n                </TableRow>\r\n              )}\r\n              <TableRow >\r\n                <TableCell colSpan={2} align='center' id='loading' style={{ textAlign: 'center' }}>\r\n                  {loading && <CircularProgress color=\"primary\" />}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarketHistory","import { Button } from '@mui/material';\r\nimport React, { useContext } from 'react'\r\nimport { AppContext } from '../context/AppContext'\r\n\r\nconst Metamask = () => {\r\n    const { appStatus, connectToWallet, currentAccount, walletConnect, disconnectWC } = useContext(AppContext);\r\n\r\n\r\n    const app = (status = appStatus) => {\r\n        switch (status) {\r\n            case 'connected':\r\n                return userLoggedIn\r\n\r\n            case 'not-connected':\r\n                return noUserFound\r\n\r\n            case 'noMetamask':\r\n                return noMetamaskFound\r\n\r\n            case 'error':\r\n                return error\r\n\r\n            default:\r\n                return loading\r\n        }\r\n    }\r\n\r\n    const noUserFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px' }} variant=\"contained\" onClick={() => connectToWallet()}>Connect to Wallet</Button>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px', marginTop: '10px' }} variant=\"contained\" onClick={() => walletConnect()}>\r\n                <img alt='' width='30px' style={{ marginRight: '5px' }} src='/marketplaceraca/wallet-connect.svg'></img>\r\n                Wallet Connect</Button>\r\n\r\n        </div>\r\n    )\r\n    const userLoggedIn = (\r\n        <div style={{ margin: '5px 0',lineBreak:'anywhere' }}>{currentAccount}\r\n            {window.w3 && <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '2px 10px' }} variant=\"contained\" onClick={() => disconnectWC()}>\r\n                Log out</Button>}\r\n        </div>\r\n    )\r\n    const noMetamaskFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <p> You must install Metamask, a <br /> virtual Ethereum wallet, in your browser</p>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px', marginTop: '10px' }} variant=\"contained\" onClick={() => walletConnect()}>\r\n                <img alt='' width='30px' style={{ marginRight: '5px' }} src='/marketplaceraca/wallet-connect.svg'></img>\r\n                Wallet Connect</Button>\r\n\r\n        </div>\r\n\r\n    )\r\n    const error = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/error.png' />\r\n            <p>An error occurred. Please try again later or use another browser</p>\r\n            {/* <p>{errLog}</p> */}\r\n        </div>\r\n    )\r\n    const loading = (\r\n        <div> Loading... </div>\r\n    )\r\n    return (\r\n        <div>{app(appStatus)}</div>\r\n    )\r\n}\r\n\r\nexport default Metamask","import React, { useContext, } from 'react'\r\nimport { Box, Button, Typography } from '@mui/material';\r\nimport '../../styles/statwallet.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToken } from '../../app/actions';\r\nimport { addDoc, collection, getDocs, where, updateDoc, doc, query } from 'firebase/firestore';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport axios from 'axios';\r\n\r\nexport const getInfoToken = async (token) => {\r\n    return await axios.get(`https://api.coingecko.com/api/v3/search?query=${token}`)\r\n        .then(res => {\r\n            if (res.data.coins.length !== 0) {\r\n                const coins = res.data.coins;\r\n                // console.log(coins)\r\n                return coins;\r\n            } else {\r\n                return axios.get(`https://api.pancakeswap.info/api/v2/tokens/${token\r\n                    }`).then(res => {\r\n                        const result = res.data.data\r\n                        return result;\r\n                    });\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nconst InfoToken = ({ token, setLoading }) => {\r\n    const { currentAccount } = useContext(AppContext);\r\n    const { listToken } = useSelector(state => state)\r\n    const infoToken = listToken.find(item => {\r\n        return item.tokenName?.toLowerCase() === token.symbol?.toLowerCase()\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const db = useSelector(state => state.db);\r\n    const addTokenToDB = async (token) => {\r\n        setLoading(true)\r\n        const q = query(collection(db, \"users\"), where('address', '==', currentAccount));\r\n        const querySnapshot = await getDocs(q);\r\n        if (querySnapshot.empty) {\r\n            await addDoc(collection(db, \"users\"), {\r\n                address: currentAccount.toLowerCase(),\r\n                tokens: [\r\n                    {\r\n                        address: token.address.toLowerCase(),\r\n                        timestamp: Date.now(),\r\n                        id: token.id\r\n                    }\r\n                ]\r\n            }).finally(() => setLoading(false));\r\n        } else {\r\n            querySnapshot.forEach(async (data) => {\r\n                if (!data.data().tokens.includes(token.address?.toLowerCase())) {\r\n                    const docRef = await doc(db, \"users\", data.id);\r\n                    await updateDoc(docRef, {\r\n                        tokens: [\r\n                            ...data.data().tokens,\r\n                            {\r\n                                address: token.address.toLowerCase(),\r\n                                timestamp: Date.now(),\r\n                                id: token.id\r\n                            }\r\n                        ]\r\n                    }).then(() => {\r\n                        console.log(token)\r\n                        dispatch(addToken(\r\n                            {\r\n                                ...token,\r\n                                token: token.address.toLowerCase(),\r\n                                id: token.id\r\n                            }))\r\n                    }).finally(() => setLoading(false));\r\n                } else {\r\n                    alert('Token is exist!')\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleAddUserDb = () => {\r\n        setLoading(true)\r\n        if (currentAccount) {\r\n            if (!token.address) {\r\n                axios.get(`https://api.coingecko.com/api/v3/coins/${token.id}`).then(res => {\r\n                    const data = res.data;\r\n                    const address = data.platforms['binance-smart-chain']\r\n                    if (address) {\r\n                        getInfoToken(address).then((async (res) => {\r\n                            if (res) {\r\n                                console.log(token.id)\r\n                                addTokenToDB({ ...res, address: address, id: token.id ?? '' })\r\n                            }\r\n                        }))\r\n                    }\r\n                }).finally(() => setLoading(false))\r\n            } else {\r\n                getInfoToken(token.address).then((async (res) => {\r\n                    if (res) {\r\n                        addTokenToDB({\r\n                            ...res, address: token.address, id: res.id ?? ''\r\n                        })\r\n                    }\r\n                })).finally(() => setLoading(false))\r\n            }\r\n        } else {\r\n            alert('No user')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\r\n            <Box sx={{ display: 'flex', width: '80%', gap: '5px', alignItems: 'center' }}>\r\n                <img alt='' width={'25px'} src={token.thumb ? token.large : '/marketplaceraca/help_outline.svg'} />\r\n                <Typography variant=\"h6\">{token.symbol}</Typography>\r\n                <Typography variant=\"h7\">{token.name}</Typography>\r\n            </Box>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(31, 199, 212)', padding: '5px 10px', width: '30%', borderRadius: 15 }} variant=\"contained\" onClick={() => handleAddUserDb()} disabled={infoToken ? true : false}>Import</Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default InfoToken","import React from 'react'\r\nimport '../../styles/statwallet.css'\r\nimport { Box, Modal } from '@mui/material';\r\n\r\nconst ModalUI = ({ isOpen, setOpen, children, onClose }) => {\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        onClose();\r\n    }\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '25%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -22%)',\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #00000087',\r\n        boxShadow: 24,\r\n        borderRadius: 4,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n            <Box sx={style} id='modalUI'>\r\n                {children}\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalUI","import { CircularProgress, Box } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <Box sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\r\n            <CircularProgress color=\"primary\" />\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useEffect, useState } from 'react'\r\nimport { Box, Typography, TextField, Button } from '@mui/material';\r\nimport InfoToken, { getInfoToken } from './InfoToken';\r\nimport ModalUI from './ModalUI';\r\nimport Loading from '../Loading'\r\nconst ImportTokenModal = () => {\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [tokenInput, setTokenInput] = useState('');\r\n    const [tokenQuery, setTokenQuery] = useState();\r\n    const [invalidToken, setInvalidToken] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChangeInput = (e) => {\r\n        setTokenInput(e.target.value.toLowerCase());\r\n    }\r\n    const handleOpen = () => {\r\n        setIsOpenModal(prev => !prev);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setTokenInput('');\r\n        setTokenQuery();\r\n    }\r\n    useEffect(() => {\r\n        const bounceInput = setTimeout(() => {\r\n            if (tokenInput !== '') {\r\n                getInfoToken(tokenInput).then(res => {\r\n                    if (res.length !== 0 && res.length !== undefined) {\r\n                        setInvalidToken(false)\r\n                        setTokenQuery([...res])\r\n                        // console.log(res?.length)\r\n                    } else {\r\n                        setInvalidToken(false)\r\n                        setTokenQuery([{\r\n                            ...res,\r\n                            address: tokenInput\r\n                        }])\r\n                    }\r\n                }).catch(err => {\r\n                    setInvalidToken(false)\r\n                }).finally(() => setLoading(false));\r\n            } else {\r\n                setInvalidToken(false)\r\n                setLoading(false)\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            setTokenQuery()\r\n            setLoading(true)\r\n            clearTimeout(bounceInput)\r\n        }\r\n    }, [tokenInput])\r\n    return (\r\n        <React.StrictMode>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)' }} variant=\"contained\" onClick={handleOpen}>Import</Button>\r\n            <ModalUI isOpen={isOpenModal} setOpen={setIsOpenModal} onClose={handleClose}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" align='center' component=\"h2\">\r\n                    Import Token\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\r\n                    <TextField value={tokenInput} autoFocus onChange={(e) => handleChangeInput(e)} label=\"Token\" variant=\"outlined\" className='input-token' sx={{ mt: 2 }} />\r\n                    {tokenQuery && <Box sx={{ mt: 2, maxHeight: '200px', overflowY: 'auto', overflowX: 'hidden' }} className=\"list-token-query\">\r\n                        {tokenQuery.map((infoToken, index) => (\r\n                            <InfoToken key={index} token={infoToken} setLoading={setLoading} />)\r\n                        )}\r\n                    </Box>}\r\n                    {invalidToken && (\r\n                        <Typography variant=\"h6\" color=\"#d42d31\">Enter valid token address </Typography>\r\n                    )}\r\n                </Box>\r\n                {loading && (\r\n                    <Loading />\r\n                )}\r\n            </ModalUI>\r\n        </React.StrictMode>\r\n\r\n    )\r\n}\r\n\r\nexport default ImportTokenModal","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, TableSortLabel } from '@mui/material'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport millify from 'millify'\r\nimport React, { useState } from 'react'\r\nimport ModalUI from './ModalUI'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (orderBy === 'value') {\r\n\r\n    }\r\n    switch (orderBy) {\r\n        case 'value':\r\n            a[orderBy] = a.price * a.amount;\r\n            b[orderBy] = b.price * b.amount;\r\n            break;\r\n        case 'date':\r\n            if (new Date(b[orderBy]) < new Date(b[orderBy])) {\r\n                return -1;\r\n            }\r\n            return 1\r\n            // console.log(new Date(a[orderBy])> new Date(b[orderBy]))\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'date',\r\n        label: 'Date',\r\n    },\r\n    {\r\n        id: 'amount',\r\n        label: 'Amount',\r\n    },\r\n    {\r\n        id: 'price',\r\n        label: 'Price',\r\n    },\r\n    {\r\n        id: 'status',\r\n        label: 'Status',\r\n    },\r\n    {\r\n        id: 'value',\r\n        label: 'Value',\r\n    },\r\n]\r\nfunction EnhancedTableHead(props) {\r\n    const { order, orderBy, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            className='sort-icon'\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                            sx={{ margin: 0 }}\r\n                        >\r\n                            {headCell.label}\r\n\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n\r\n};\r\nconst TransactionsModal = ({ infoTransactions, setInfoTransactions }) => {\r\n    const [isOpen, setOpen] = useState(true)\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('date');\r\n    const { tokenName, listTransactions } = infoTransactions;\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    return (\r\n        <ModalUI isOpen={isOpen} setOpen={setOpen} onClose={setInfoTransactions}>\r\n            <Typography align='center'>{tokenName}'s Transactions</Typography>\r\n            <TableContainer id='table_transactions'>\r\n                <Table stickyHeader>\r\n                    <EnhancedTableHead\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(listTransactions, getComparator(order, orderBy))\r\n                            .map((row, index) => {\r\n                                return (\r\n                                    <TableRow key={index} >\r\n                                        <TableCell align='center'>{row.date}</TableCell>\r\n                                        <TableCell align='center'>{millify(row.amount, {\r\n                                            precision: 2,\r\n                                            decimalSeparator: \",\"\r\n                                        })}</TableCell>\r\n                                        <TableCell align='center'>{millify(row.price, {\r\n                                            precision: 5,\r\n                                            decimalSeparator: \",\"\r\n                                        })}</TableCell>\r\n                                        <TableCell align='center'>{row.status.toUpperCase()}</TableCell>\r\n\r\n                                        <TableCell align='center'>{millify(row.price * row.amount, {\r\n                                            precision: 2,\r\n                                            decimalSeparator: \",\"\r\n                                        })} $</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        </ModalUI>\r\n    )\r\n}\r\n\r\nexport default TransactionsModal","import React, { useContext, useEffect, useState } from 'react'\r\nimport Web3 from 'web3'\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Table, Button } from '@mui/material';\r\nimport { AppContext } from '../../context/AppContext'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//FireBase\r\nimport { collection, query, getDocs, where, updateDoc, doc } from \"firebase/firestore\"\r\nimport { addToken, clearListToken, removeToken } from '../../app/actions';\r\nimport { getInfoToken } from './InfoToken'\r\nimport millify from 'millify';\r\nimport ImportTokenModal from './ImportTokenModal';\r\nimport TransactionsModal from './TransactionsModal';\r\n\r\nconst StatWallet = () => {\r\n  const { currentAccount } = useContext(AppContext)\r\n  const [loading, setLoading] = useState(true);\r\n  const [listTransactions, setListTransactions] = useState({})\r\n  const [infoTransactions, setInfoTransactions] = useState();\r\n  const listToken = useSelector(state => state.listToken)\r\n  const prevLength = useSelector(state => state.prevLength)\r\n  const rpcUrl = 'https://bsc-dataseed1.binance.org:443'\r\n  const web3 = new Web3(rpcUrl);\r\n  const [listBalance, setListBalance] = useState([]);\r\n  const db = useSelector(state => state.db);\r\n  const dispatch = useDispatch();\r\n\r\n  const getTransaction = ({ tokenName, address, id }) => {\r\n    if (tokenName !== 'BNB') {\r\n      axios.get(`https://api.bscscan.com/api?module=account&action=tokentx&contractaddress=${address}&address=${currentAccount}&page=1&offset=10000&startblock=0&endblock=999999999&sort=asc&apikey=RWBIX4SRF8ZCSSDVHIM8YGSK5V65J9UNNN`).then(async (res) => {\r\n        const data = res.data.result;\r\n        let totalDeposit = 0;\r\n        let totalDepositPrice = 0;\r\n        let totalWithdraw = 0;\r\n        let totalWithdrawPrice = 0;\r\n        let startTime = data[0].timeStamp - 86400;\r\n        let endTime = data[data.length - 1].timeStamp;\r\n        const listTransactionsTemp = {};\r\n\r\n        listTransactionsTemp[tokenName] = []\r\n        let hashmapPrice;\r\n        if (id) {\r\n          hashmapPrice = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`).then(res => {\r\n            const hashmap = {};\r\n            const data = res.data.prices;\r\n            data.forEach((price) => {\r\n              const date = new Date(price[0]).toLocaleDateString()\r\n              hashmap[date] = price[1]\r\n            })\r\n            return hashmap;\r\n          }).catch((err) => console.log(err))\r\n        }\r\n        data?.forEach(transaction => {\r\n          const value = Number(Web3.utils.fromWei(transaction.value, 'ether'))\r\n          let getDateTransaction = new Date(transaction.timeStamp * 1000).toLocaleDateString();\r\n          const infoTransaction = {\r\n            amount:value,\r\n            date: getDateTransaction,\r\n            status: transaction.from === currentAccount ? 'out' : 'in',\r\n            \r\n          }\r\n          if (id) {\r\n            let index = 1;\r\n            while (hashmapPrice[getDateTransaction] === undefined && index <= 10) {\r\n              getDateTransaction = new Date((transaction.timeStamp - 0 + 86400) * 1000).toLocaleDateString()\r\n              index++;\r\n            }\r\n          }\r\n\r\n          infoTransaction.price = hashmapPrice ? hashmapPrice[getDateTransaction] : 0;\r\n          listTransactionsTemp[tokenName].push(infoTransaction)\r\n          if (transaction.from === currentAccount) {\r\n            totalWithdraw += value;\r\n            if (id)\r\n              totalWithdrawPrice += value * hashmapPrice[getDateTransaction];\r\n          } else {\r\n            totalDeposit += Number(Web3.utils.fromWei(transaction.value, 'ether'));\r\n            if (id)\r\n              totalDepositPrice += value * hashmapPrice[getDateTransaction];\r\n          }\r\n        })\r\n        setListTransactions(prev => {\r\n          return {\r\n            ...prev,\r\n            ...listTransactionsTemp\r\n          }\r\n        })\r\n        const balance = Number(totalDeposit.toFixed(4) - totalWithdraw.toFixed(4));\r\n\r\n        setListBalance(prev => {\r\n          return {\r\n            ...prev,\r\n            [tokenName]: {\r\n              totalWithdraw: totalWithdraw <= 0 ? totalWithdraw : Number(totalWithdraw).toFixed(4),\r\n              totalDeposit: totalDeposit <= 0 ? totalDeposit : Number(totalDeposit).toFixed(4),\r\n              balance: balance <= 0 ? Math.floor(balance) : balance.toFixed(4),\r\n              totalWithdrawPrice,\r\n              totalDepositPrice,\r\n            }\r\n          }\r\n        })\r\n\r\n      }).catch(err => {\r\n        console.log(err)\r\n      }).finally(() => setLoading(false))\r\n    }\r\n  }\r\n\r\n  const deleteToken = async (e) => {\r\n    let token;\r\n    if (e.target.parentNode.dataset.token) {\r\n      token = e.target.parentNode.dataset.token\r\n    } else {\r\n      token = e.target.dataset.token\r\n    }\r\n    const q = query(collection(db, 'users'), where('address', '==', currentAccount));\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach(async (docItem) => {\r\n      if (docItem.exists()) {\r\n        const result = docItem.data().tokens;\r\n        const listResult = result.filter(item => item.address !== token);\r\n        const docRef = await doc(db, \"users\", docItem.id);\r\n        await updateDoc(docRef, {\r\n          tokens: [\r\n            ...listResult\r\n          ]\r\n        }).then((res) => {\r\n          dispatch(removeToken(token));\r\n          setLoading(false)\r\n        }).finally(() => setLoading(false))\r\n      }\r\n    })\r\n  }\r\n  const showDetailTransaction = (e) => {\r\n    const tokenName = e.target.parentNode.dataset.name\r\n    setInfoTransactions({\r\n      tokenName,\r\n      listTransactions: [\r\n        ...listTransactions[tokenName]\r\n      ]\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(clearListToken());\r\n    if (currentAccount) {\r\n      const getDataFireBase = async () => {\r\n        const q = query(collection(db, \"users\"), where('address', '==', currentAccount));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists()) {\r\n            // dispatch(initTokens(doc.data().tokens))\r\n            const listTokens = doc.data().tokens;\r\n            if (listTokens.length !== 0) {\r\n              let limit = listTokens.length >= 4 ? 4 : listTokens.length;\r\n              let end = limit;\r\n              let start = end - limit;\r\n              // let flag = limit;\r\n              const loop = setInterval(() => {\r\n                for (let i = start; i < end; i++) {\r\n                  setLoading(true)\r\n                  getInfoToken(listTokens[i]?.address).then(async (res) => {\r\n                    const token = listTokens[i].address;\r\n                    dispatch(addToken({\r\n                      ...res,\r\n                      token,\r\n                      id: listTokens[i].id\r\n                    }))\r\n                  })\r\n                }\r\n                if (end === listToken.length) {\r\n                  clearInterval(loop)\r\n                }\r\n                start = end;\r\n                if (end + limit > listTokens.length) {\r\n                  end = listTokens.length;\r\n                } else {\r\n                  end += limit\r\n                }\r\n              }, 2000)\r\n              setLoading(false)\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      web3.eth.getBalance(currentAccount).then(res => {\r\n        const balanceFromWei = Web3.utils.fromWei(res, 'ether')\r\n        setListBalance(prev => {\r\n          return {\r\n            ...prev,\r\n            'BNB': {\r\n              balance: balanceFromWei <= 0 ? Math.abs(Number(balanceFromWei)) : Number(balanceFromWei).toFixed(5)\r\n            }\r\n          }\r\n        })\r\n      }).finally(() => setLoading(false));\r\n      if (listToken)\r\n        getDataFireBase();\r\n    }\r\n    return () => {\r\n      setListBalance([]);\r\n      setLoading(true)\r\n    }\r\n  }, [currentAccount])\r\n  useEffect(() => {\r\n    if (prevLength <= listToken.length && listToken.length !== 0) {\r\n      const length = listToken.length;\r\n      getTransaction(listToken[length - 1]);\r\n    }\r\n    return () => {\r\n      setLoading(true)\r\n    }\r\n  }, [listToken])\r\n  return (\r\n    <div className=\"PortfolioWallet\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <TableContainer sx={{ maxWidth: '650px' }} id=\"PortfolioWallet-section\" component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell component='th' align='center'>Token Name</TableCell>\r\n              <TableCell align=\"center\">Deposit</TableCell>\r\n              <TableCell align=\"center\">Withdraw</TableCell>\r\n              <TableCell align=\"center\">Balance</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {listBalance && listToken && (listToken.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component='th' data-name={item.tokenName}>{item.tokenName} {listTransactions[item.tokenName] ? (<Button className='button-detail' sx={{\r\n                  fontSize: \"12px\",\r\n                  padding: 0,\r\n                  justifyContent: \"center\",\r\n                }} onClick={(e) => showDetailTransaction(e)}>Details</Button>) : ''} </TableCell>\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.totalDeposit) ? millify(listBalance[item.tokenName]?.totalDeposit, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0} (~{listBalance[item.tokenName]?.totalDepositPrice ? millify(listBalance[item.tokenName]?.totalDepositPrice, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0})</TableCell>\r\n\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.totalWithdraw) ? millify(listBalance[item.tokenName]?.totalWithdraw, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0} (~{listBalance[item.tokenName]?.totalWithdrawPrice ? millify(listBalance[item.tokenName]?.totalWithdrawPrice, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0})</TableCell>\r\n\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.balance) && item.tokenName !== \"BNB\" ? millify(listBalance[item.tokenName]?.balance, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : (listBalance[item.tokenName]?.balance)}</TableCell>\r\n                <TableCell sx={{ padding: 0, width: '20px' }} align='center'>\r\n                  {index !== 0 && (\r\n                    <Button sx={{ minWidth: '20px', padding: '0px' }} data-token={item.address} onClick={(e) => deleteToken(e)}><img src='/marketplaceraca/delete_outline.svg' alt='' /></Button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            )))}\r\n            <TableRow >\r\n              <TableCell colSpan={5} align='center' style={{ textAlign: 'center', padding: '10px 0' }}>\r\n                <ImportTokenModal />\r\n              </TableCell>\r\n            </TableRow>\r\n            {loading && (\r\n              <TableRow >\r\n                <TableCell colSpan={5} align='center' style={{ textAlign: 'center' }}>\r\n                  <CircularProgress color=\"primary\" />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {infoTransactions && (\r\n        <TransactionsModal infoTransactions={infoTransactions} setInfoTransactions={setInfoTransactions}>\r\n\r\n        </TransactionsModal>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default StatWallet","\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDMPGSZM9TbhHyO_dnV5yXanp-XsDnCT9A\",\r\n    authDomain: \"portfolio-mind.firebaseapp.com\",\r\n    projectId: \"portfolio-mind\",\r\n    storageBucket: \"portfolio-mind.appspot.com\",\r\n    messagingSenderId: \"993307046762\",\r\n    appId: \"1:993307046762:web:a00d4f8dd7756c6d8a6b13\"\r\n};\r\nexport default firebaseConfig","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\n\r\nimport MarketHistory from './MarketHistory';\r\nimport Metamask from '../Metamask';\r\nimport StatWallet from './StatWallet';\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from '../../config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { initApp } from '../../app/actions';\r\nimport { getFirestore } from \"firebase/firestore\"\r\nconst Portfolio = () => {\r\n    const app = initializeApp(firebaseConfig);\r\n    const db = getFirestore(app)\r\n    const dispatch = useDispatch()\r\n    const { currentAccount } = useContext(AppContext);\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const transition = useTransition(isVisible, {\r\n        from: { x: -500, y: 10, opacity: 0 },\r\n        enter: { x: 0, y: 0, opacity: 1, display: 'block' },\r\n        leave: { x: 500, y: 10, opacity: 0, display: 'none' }\r\n    })\r\n    useEffect(() => {\r\n        dispatch(initApp(db));\r\n    }, [db])\r\n    const handleSwitch = () => {\r\n        setIsVisible(state => !state)\r\n    }\r\n    return (\r\n        <div className=\"portfolio\">\r\n            <Metamask />\r\n            {currentAccount && (\r\n                <React.StrictMode>\r\n                    <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px',marginBottom:'10px' }} variant=\"contained\" onClick={handleSwitch}>{isVisible ? \"Stat Raca\" : \"Portfolio\"}</Button>\r\n                    {transition((style, item) =>\r\n                        item ? <animated.div style={style}>\r\n                            <StatWallet />\r\n                        </animated.div> : <animated.div style={style}>\r\n                            <MarketHistory />\r\n                        </animated.div>\r\n                    )}\r\n                </React.StrictMode>\r\n            )}\r\n\r\n            {/* {currentAccount && <MarketHistory />}\r\n            {currentAccount && <StatWallet />} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import { Box } from '@mui/material';\r\n\r\nconst ImageAnimation = () => {\r\n   \r\n\r\n    return (\r\n        <Box style={{height:'150px',position:'relative'}}>\r\n            <img width={'150px'} src=\"/marketplaceraca/astronaut-1.png\" alt=\"\" id='astronaut' />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ImageAnimation","import { memo, useEffect, useRef, useState } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel';\r\nimport NFTs from './NFTs/NFTs';\r\nimport Metamon from './Metamon/Metamon'\r\nimport Elemon from './Elemon/Elemon'\r\nimport '../App.css'\r\nimport Portfolio from './Portfolio/Portfolio';\r\nimport { Button, Typography } from '@mui/material';\r\nimport ImageAnimation from './ImageAnimation';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nconst TabInfo = (props) => {\r\n    const { label, style, ...others } = props\r\n    return (\r\n        <Box className='tab-info'>\r\n            <img {...others} className={`icon-${label.toLowerCase()}`} />\r\n            <Typography style={style} sx={{ fontSize: '16px', fontWeight: '600' }}>{label}</Typography>\r\n        </Box>\r\n    )\r\n}\r\nconst HeaderTabs = () => {\r\n    const myStorage = window.localStorage;\r\n    const getTab = myStorage.getItem('tab') === undefined ? 0 : myStorage.getItem('tab');\r\n    const [value, setValue] = useState(Number(getTab));\r\n    const [isMute, setIsMute] = useState(true);\r\n    const [statusMute, setStatusMute] = useState(true)\r\n    const audioRef = useRef();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        myStorage.setItem('tab', newValue);\r\n    };\r\n    const handleChangeSound = () => {\r\n        const audioEl = audioRef?.current?.audioEl.current;\r\n        // audioEl.paused = !isMute\r\n        console.log(audioEl.paused)\r\n        if (audioEl.paused) {\r\n            audioEl.play()\r\n        } else {\r\n            audioEl.pause()\r\n        }\r\n        setIsMute(prev => !prev)\r\n    }\r\n    const onClickChangeSound = () => {\r\n        handleChangeSound();\r\n        setStatusMute(prev => !prev);\r\n    }\r\n    useEffect(() => {\r\n        const audioEl = audioRef?.current?.audioEl.current;\r\n        // console.log(audioEl.paused)\r\n        const handlePressSpace = (event) => {\r\n            if (event.keyCode === 32 && document.body) {\r\n                onClickChangeSound()\r\n                event.preventDefault();\r\n            }\r\n        }\r\n        window.addEventListener('keydown', handlePressSpace)\r\n        return () => {\r\n            window.removeEventListener('keydown', handlePressSpace)\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if (!statusMute) {\r\n            window.addEventListener('blur', handleChangeSound)\r\n            window.addEventListener('focus', handleChangeSound)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('blur', handleChangeSound)\r\n            window.removeEventListener('focus', handleChangeSound)\r\n        }\r\n\r\n    }, [statusMute])\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <ImageAnimation />\r\n            <Button className='icon-muted' onClick={onClickChangeSound}><img width={35} src={`/marketplaceraca/${isMute ? 'mute.png' : 'sound.png'}`} /></Button>\r\n            <ReactAudioPlayer\r\n                src=\"/marketplaceraca/metamon-sound.mp3\"\r\n                \r\n                controls\r\n                loop\r\n                ref={audioRef}\r\n                style={{ display: 'none' }}\r\n            />\r\n            <Box id=\"tabs\" sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Tabs id=\"tabs-bar\" value={value} sx={{ color: '#ffffff', width: '600px' }} onChange={handleChange} centered>\r\n                    <Tab className=\"tab\" label={<TabInfo label='RACA' alt='raca' width='20px' src='/marketplaceraca/favicon.svg' />} {...a11yProps(0)} />\r\n                    <Tab className=\"tab\" label={<TabInfo label='METAMON' alt='metamon' width='40px' src='/marketplaceraca/raca/metamon-SR.png' />} {...a11yProps(1)} />\r\n                    <Tab className=\"tab\" label={<TabInfo label='ElEMON' alt='elemon' width='30px' src='/marketplaceraca/elemon-logo.png' />} {...a11yProps(2)} />\r\n                    <Tab className=\"tab\" label={<TabInfo label='STATISTICS' alt='sales' width='30px' src='/marketplaceraca/metamask.png' />} {...a11yProps(3)} />\r\n                </Tabs>\r\n            </Box>\r\n            {\r\n                value === 0 &&\r\n                (<TabPanel className='tab-panel' value={value} index={0}>\r\n                    <NFTs />\r\n                </TabPanel>)\r\n            }\r\n            {\r\n                value === 1 &&\r\n                (<TabPanel className='tab-panel' value={value} index={1}>\r\n                    <Metamon />\r\n                </TabPanel>)\r\n            }\r\n            {\r\n                value === 2 &&\r\n                (<TabPanel className='tab-panel' value={value} index={2}>\r\n                    <Elemon />\r\n                </TabPanel>)\r\n            }\r\n            {\r\n                value === 3 &&\r\n                (<TabPanel className='tab-panel' value={value} index={3}>\r\n                    <Portfolio />\r\n                </TabPanel>)\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default memo(HeaderTabs);","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './App.css';\r\nimport { updatePriceAuto } from './app/actions';\r\nimport HeaderTabs from './components/Tabs';\r\nimport axios from \"axios\"\r\nimport { AppProvider } from './context/AppContext';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nexport const log = (info) => {\r\n  console.log(info);\r\n}\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    const getPrice = async () => {\r\n      const { elmon, raca, btc } = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=radio-caca,elemon,bitcoin&vs_currencies=usd').then(res => {\r\n        return {\r\n          raca: res.data['radio-caca'].usd,\r\n          elmon: res.data['elemon'].usd,\r\n          btc: res.data['bitcoin'].usd,\r\n        }\r\n      });\r\n      const elcoin = await axios.get('https://api.pancakeswap.info/api/v2/tokens/0x092ffbc968203b652b08361adec75e275573f2db').then(res => Number(res.data.data.price).toFixed(8));\r\n      document.title = raca + \" - Marketplace RACA\"\r\n      dispatch(updatePriceAuto({ raca, elmon, elcoin, btc }))\r\n    }\r\n    getPrice()\r\n    const updatePrice = setInterval(async () => {\r\n      getPrice()\r\n    }, 20000)\r\n\r\n    return () => {\r\n      clearInterval(updatePrice)\r\n    }\r\n  }, [])\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <AppProvider>\r\n          <HeaderTabs />\r\n        </AppProvider>\r\n      </div>\r\n    </Router>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const myStorage = window.localStorage;\r\n\r\nconst listToken = [\r\n  {\r\n    tokenName: 'BNB',\r\n    address: '0xB8c77482e45F1F44dE1745F52C74426C631bDD52'\r\n  },\r\n  // {\r\n  //   tokenName: \"BUSD\",\r\n  //   address: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n  // },\r\n  // {\r\n  //   tokenName: \"RACA\",\r\n  //   address: '0x12BB890508c125661E03b09EC06E404bc9289040',\r\n  // },\r\n  // {\r\n  //   tokenName: \"ELMON\",\r\n  //   address: '0xE3233fdb23F1c27aB37Bd66A19a1f1762fCf5f3F',\r\n  // },\r\n  // {\r\n  //   tokenName: \"ELCOIN\",\r\n  //   address: '0x092FFBc968203B652B08361aDec75E275573F2db',\r\n  // }\r\n]\r\nconst initState = {\r\n  filters: {\r\n    minScore:\r\n      myStorage.getItem(\"metamon\") === undefined\r\n        ? 315 : JSON.parse(myStorage.getItem(\"metamon\"))?.score,\r\n    level:\r\n      myStorage.getItem(\"metamon\") === undefined\r\n        ? 20 : JSON.parse(myStorage.getItem(\"metamon\"))?.levelMetamon,\r\n    arrange: 0,\r\n  },\r\n  price: {\r\n    raca: 0,\r\n    elmon: 0,\r\n    elcoin: 0,\r\n    btc: 0,\r\n  },\r\n  filtersElemon: {\r\n    sort: 0,\r\n    name: 0,\r\n    tokenId: \"\",\r\n    rarity: [],\r\n    purity: [],\r\n    aura: [],\r\n    price: \"\",\r\n    min: \"\",\r\n    max: \"\",\r\n  },\r\n  tab: 0,\r\n  currentAccount: '',\r\n  listToken,\r\n  db: {},\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"handleFilters\":\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          minScore: action.payload.minScore,\r\n          level: action.payload.level,\r\n        },\r\n      };\r\n    case \"handleArrange\":\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          arrange: action.payload,\r\n        },\r\n      };\r\n    case \"handlePower\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          min: action.payload.min,\r\n          max: action.payload.max,\r\n        },\r\n      };\r\n    case \"handleSort\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          sort: action.payload,\r\n        },\r\n      };\r\n    case \"handleName\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          name: action.payload,\r\n        },\r\n      };\r\n    case \"handleTokenId\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          tokenId: action.payload,\r\n        },\r\n      };\r\n    case \"updatePrice\":\r\n      return {\r\n        ...state,\r\n        price: action.payload,\r\n      };\r\n    case \"elemon/addRarity\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          rarity: [...state.filtersElemon.rarity, action.payload],\r\n        },\r\n      };\r\n    case \"elemon/removeRarity\":\r\n      const listRarity = [...state.filtersElemon.rarity];\r\n      const positionRarity = listRarity.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          rarity: listRarity\r\n            .slice(0, positionRarity)\r\n            .concat(listRarity.slice(positionRarity + 1)),\r\n        },\r\n      };\r\n    case \"elemon/addAura\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          aura: [...state.filtersElemon.aura, action.payload],\r\n        },\r\n      };\r\n    case \"elemon/removeAura\":\r\n      const listAura = state.filtersElemon.aura;\r\n      const positionAura = listAura.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          aura: listAura\r\n            .slice(0, positionAura)\r\n            .concat(listAura.slice(positionAura + 1)),\r\n        },\r\n      };\r\n    case 'changeCurrentAccount':\r\n      return {\r\n        ...state,\r\n        currentAccount: action.payload,\r\n      }\r\n    case 'tokens/add':\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          ...state.listToken,\r\n          {\r\n            tokenName: action.payload.symbol,\r\n            address: action.payload.token,\r\n            price: action.payload.price,\r\n            id:action.payload?.id\r\n          },\r\n        ],\r\n        prevLength: state.listToken.length\r\n      }\r\n    case 'tokens/remove':\r\n      const newList = state.listToken.filter(token => token.address !== action.payload);\r\n      return {\r\n        ...state,\r\n        prevLength: state.listToken.length,\r\n        listToken: [\r\n          ...newList\r\n        ]\r\n      }\r\n    case 'initTokens':\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          ...state.listToken,\r\n          ...action.payload\r\n        ]\r\n      }\r\n    case 'clearListToken':\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          state.listToken[0]\r\n        ]\r\n      }\r\n    case 'initApp':\r\n      return {\r\n        ...state,\r\n        db: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import { createStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}