{"version":3,"sources":["app/actions.js","components/TabPanel.js","components/NFTs/Card.js","components/NFTs/SwapRaca.js","components/NFTs/PriceTable.js","config.js","components/Sales/Sales.js","components/Metamon/InputSelect.js","components/Metamon/Metamon.js","components/Tabs.js","App.js","app/reducer.js","app/store.js","reportWebVitals.js","index.js"],"names":["handleArrange","arrange","type","payload","updatePriceAuto","price","TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","span","Typography","component","Card","x","nft","name","image_url","fixed_price","className","alt","src","style","color","fontSize","fontWeight","lineHeight","whiteSpace","textOverflow","overflow","margin","toString","replace","SwapRacaToUSD","priceRaca","useState","inputRaca","setInputRaca","usdPrice","setUsdPrice","handleChange","e","a","target","useEffect","onChange","getAPI","categoryId","size","axios","numberWithCommas","PriceTable","listMetamon","setListMetamon","listDiamond","setListDiamond","listEgg","setListEgg","listPotion","setListPotion","kissUpLand","setKissUpLand","tokenPrice","setTokenPrice","timeUpdated","setTimeUpdated","convertDateTime","now","Date","toLocaleString","useSelector","state","getData","Promise","all","then","res","data","list","document","querySelector","classList","toggle","rerender","setInterval","clearInterval","SwapRaca","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","width","height","objectFit","TableBody","map","child","scope","Math","floor","toFixed","StrictMode","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createData","totalSales","totalCost","totalWithdraw","percent","sales","cost","profit","withdraw","remain","getHistory","page","get","Sales","listHistory","setListHistory","listSummary","setListSummary","listWithdraw","setListWithdraw","setToggle","total","currentPage","listTemp","fetchData","response","length","app","initializeApp","db","getFirestore","q","query","collection","orderBy","getDocs","querySnapshot","tempList","forEach","doc","push","newList","item","time","seconds","split","listSales","filter","nft_token_id","listCost","sumSales","reduce","prev","curr","parse","fee","Number","amount","sumCost","transfer","minWidth","row","border","CircularProgress","textAlign","Button","onClick","variant","TextField","label","marginBottom","notes","InputSelect","getFilter","dispatch","useDispatch","filters","setArrange","minScore","setMinScore","level","setLevel","Container","maxWidth","marginTop","display","alignItems","marginRight","background","handleFilters","FormControl","Select","labelId","event","MenuItem","pageNo","Metamon","listShow","setListShow","getListMetamon","listData","i","concat","sortBy","sort","b","slice","metamon","href","rel","textDecoration","token_id","score","a11yProps","RacaTabs","setValue","borderBottom","borderColor","Tabs","newValue","Tab","App","getPrice","usd","title","updatePrice","initState","rootReducer","action","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.32c1380b.chunk.js","sourcesContent":["\r\nexport const handleFilters = ({ minScore, level }) => {\r\n    return {\r\n        type: 'handleFilters',\r\n        payload: {\r\n            minScore,\r\n            level\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleArrange = (arrange) => {\r\n    return {\r\n        type: 'handleArrange',\r\n        payload: arrange\r\n    }\r\n}\r\n\r\nexport const updatePriceAuto = (price) => {\r\n    return {\r\n        type: 'updatePrice',\r\n        payload: price,\r\n    }\r\n}","import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ span: 3 }}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TabPanel;","\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Card = (props) => {\r\n\r\n    const { name = \"undefined\", id = \"#0000\", image_url = '', fixed_price = '0000' } = props.nft;\r\n    return (\r\n        <div className='nft'>\r\n            <div className=\"imgBox\">\r\n                <img className='image-nft' alt={name} src={image_url || \"/marketplaceraca/nft.png\"} />\r\n            </div>\r\n            <div className=\"textBox\">\r\n                <p className='name-nft'>{name&&\"\"}#{id}</p>\r\n                <div className='separate'></div>\r\n                <div className='price'>\r\n                    <p style={{\r\n                        color: 'rgba(56, 56, 56, .4)',\r\n                        fontSize: 20,\r\n                        fontWeight: 700,\r\n                        lineHeight:'32px',\r\n                        whiteSpace:'nowrap',\r\n                        textOverflow:'ellipsis',\r\n                        overflow:'hidden',\r\n                        margin: '0'\r\n                    }}>Price</p>\r\n                    <p className='priceNum'>{numberWithCommas(fixed_price)}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { useEffect, useState } from \"react\"\r\n\r\n\r\nconst SwapRacaToUSD = ({ priceRaca }) => {\r\n    const [inputRaca, setInputRaca] = useState('');\r\n    const [usdPrice, setUsdPrice] = useState(0);\r\n\r\n    const handleChange = async (e) => {\r\n        setInputRaca(e.target.value);\r\n    }\r\n    useEffect(() => {\r\n        setUsdPrice(() => inputRaca * priceRaca);\r\n    }, [inputRaca, priceRaca])\r\n    return (\r\n        <div id='swap-raca'>\r\n            <input id=\"RACA\" type=\"number\" value={inputRaca} onChange={handleChange} />\r\n            <span> ~ </span>\r\n            <span id=\"USD\">{usdPrice} USD</span>\r\n        </div>\r\n    )\r\n}\r\nexport default SwapRacaToUSD;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SwapRacaToUSD from \"./SwapRaca\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\r\nimport '../../styles/nfts.css';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst getAPI = (categoryId, size) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst PriceTable = ({ hidden }) => {\r\n    const [listMetamon, setListMetamon] = useState([]);\r\n    const [listDiamond, setListDiamond] = useState([]);\r\n    const [listEgg, setListEgg] = useState([]);\r\n    const [listPotion, setListPotion] = useState([]);\r\n    const [kissUpLand, setKissUpLand] = useState({});\r\n    const [tokenPrice, setTokenPrice] = useState(0);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    const price = useSelector(state => state.price)\r\n    const getData = async () => (\r\n        Promise.all([\r\n            getAPI(13, 10).then(res =>\r\n                setListMetamon(res.data.list)\r\n            ),\r\n            getAPI(15, 10).then(res =>\r\n                setListPotion(res.data.list)\r\n            ),\r\n            getAPI(16, 10).then(res =>\r\n                setListDiamond(res.data.list)\r\n            ),\r\n            getAPI(17, 10).then(res =>\r\n                setListEgg(res.data.list)\r\n            ),\r\n            getAPI(20, 1).then(res => {\r\n                setKissUpLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n\r\n        ])\r\n    )\r\n    useEffect(() => {\r\n        setTokenPrice(price)\r\n    }, [price])\r\n    useEffect(() => {\r\n        getData();\r\n        convertDateTime()\r\n        // const formData = new FormData();\r\n        // formData.append('address', \"0x769ba0cb0d89666f7506194d2cf416ea0f812e16\");\r\n        // formData.append('sign', \"0x6987eccb7cdef2820794cfbd1067d7322175230d752c5a3f4ed2b5405d7cc2f63a3951cf7e2ba03f1ba447d6c720fc1eb304a2e2fd61b43f7afe72a2cff9d1b11c\");\r\n        // formData.append('msg', \"LogIn-17816549-8c50-98b7-f684-163d8e0eaea4\");\r\n        // const payload = {\r\n        //     address: '0x769ba0cb0d89666f7506194d2cf416ea0f812e16',\r\n        //     sign: '0x6987eccb7cdef2820794cfbd1067d7322175230d752c5a3f4ed2b5405d7cc2f63a3951cf7e2ba03f1ba447d6c720fc1eb304a2e2fd61b43f7afe72a2cff9d1b11c',\r\n        //     msg: 'LogIn-17816549-8c50-98b7-f684-163d8e0eaea4',\r\n        // }\r\n        // axios({\r\n        //     method: 'POST',\r\n        //     url: 'https://metamon-api.radiocaca.com/usm-api/login',\r\n        //     data: formData,\r\n        //     headers: {\r\n        //         \"Content-Type\": \"multipart/form-data\",\r\n        //     }\r\n        // }).then(function (response) {\r\n        //     console.log(response.data)\r\n        //     const formData1 = new FormData();\r\n        //     formData1.append('address', '0x769ba0cb0d89666f7506194d2cf416ea0f812e16')\r\n        //     axios({\r\n        //         method: 'POST',\r\n        //         url: 'https://metamon-api.radiocaca.com/usm-api/getBattleRecord',\r\n        //         data: formData1,\r\n        //         headers: {\r\n        //             \"accessToken\": response.data.data\r\n        //         }\r\n        //     }).then(function (response) {\r\n        //         console.log(response);\r\n        //     })\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error);\r\n        // });\r\n        const rerender = setInterval(() => {\r\n            getData();\r\n            convertDateTime();\r\n        }, 20000)\r\n\r\n        return () => {\r\n            setListMetamon([])\r\n            setListDiamond([])\r\n            setListEgg([])\r\n            setListPotion([])\r\n            setKissUpLand({})\r\n            setTokenPrice(0)\r\n            clearInterval(rerender);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div hidden={hidden}>\r\n            <p id='tokenPrice'>RACA Price: {tokenPrice}</p>\r\n            <SwapRacaToUSD priceRaca={tokenPrice} />\r\n            <p id='timeUpdated'>{timeUpdated}</p>\r\n            <div className='pricetable'>\r\n                <TableContainer id='table-scroll' component={Paper}>\r\n                    <Table id='tablePrice' aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">#</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/metamon.png' alt='Metamon' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/MetamonEgg.png' alt='Egg' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/DiamondYellow.png' alt='DiamondYellow' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/potion.png' alt='Potion' />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listEgg && listMetamon && listDiamond && listPotion && listEgg.map((child, index) => {\r\n                                return (\r\n                                    <TableRow key={index + 1}>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listMetamon[index]?.fixed_price))} (~{(tokenPrice * listMetamon[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listEgg[index]?.fixed_price))} (~{(tokenPrice * listEgg[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listDiamond[index]?.fixed_price))} (~{(tokenPrice * listDiamond[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listPotion[index]?.fixed_price))} (~{(tokenPrice * listPotion[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                    </TableRow>)\r\n                            })\r\n                            }\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div id='xike'>\r\n                    <p>Xìke Captain</p>\r\n                    <img alt='Xike' src='/marketplaceraca/xike.png' />\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"cards\">\r\n                {listMetamon[0] &&\r\n                    <React.StrictMode>\r\n                        <div className=\"card\">\r\n                            {listMetamon[0] && <Card nft={listMetamon[0]}></Card>}\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            {listMetamon[1] && <Card nft={listMetamon[1]}></Card>}\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            {listMetamon[2] && <Card nft={listMetamon[2]}></Card>}\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            {listMetamon[3] && <Card nft={listMetamon[3]}></Card>}\r\n                        </div>\r\n                    </React.StrictMode>\r\n                }\r\n\r\n\r\n                {listEgg[0] &&\r\n                    <div className=\"card\">\r\n                        <Card nft={listEgg[0]}></Card>\r\n                    </div>}\r\n\r\n                {listDiamond[0] &&\r\n                    <div className=\"card\">\r\n                        <Card nft={listDiamond[0]} />\r\n                    </div>}\r\n\r\n                {listPotion[0] &&\r\n                    <div className=\"card\">\r\n                        <Card nft={listPotion[0]} />\r\n                    </div>}\r\n\r\n                {kissUpLand &&\r\n                    <div className=\"card loading\"><Card nft={kissUpLand}></Card>\r\n                    </div>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PriceTable;","\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCQItrkH9bp7aT1yiwobbNbHtXcKcZ45Qk\",\r\n    authDomain: \"sales-nft-raca.firebaseapp.com\",\r\n    projectId: \"sales-nft-raca\",\r\n    storageBucket: \"sales-nft-raca.appspot.com\",\r\n    messagingSenderId: \"547281695761\",\r\n    appId: \"1:547281695761:web:bade483d397ca7e9cd2db0\"\r\n};\r\nexport default firebaseConfig","import React, { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport { numberWithCommas } from '../NFTs/PriceTable'\r\nimport axios from 'axios';\r\nimport { TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, CircularProgress } from '@mui/material';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"../../config\"\r\nimport { collection, getDocs, getFirestore, query, orderBy } from \"firebase/firestore\";\r\nimport '../../styles/sales.css';\r\n\r\n\r\nfunction createData(name, totalSales, totalCost, totalWithdraw, percent) {\r\n    const sales = totalSales * percent / 100;\r\n    const cost = totalCost * percent / 100;\r\n    const profit = (sales - cost);\r\n    const withdraw = totalWithdraw * percent / 100;\r\n    const remain = profit - withdraw;\r\n    return { name, sales, cost, profit, withdraw, remain };\r\n}\r\n\r\nconst getHistory = (page, size) => {\r\n    return axios.get(`https://market-api.radiocaca.com/users/0x10201091597635eC7b8e208306E6aDCC7c167925/histories?pageNo=${page}&pageSize=${size}`);\r\n\r\n}\r\n\r\n\r\nconst Sales = () => {\r\n    const [listHistory, setListHistory] = useState([]);\r\n    const [listSummary, setListSummary] = useState([]);\r\n    const [listWithdraw, setListWithdraw] = useState([]);\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    const handleAddTrans = () => {\r\n        setToggle(prev => !prev)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let total = 0;\r\n        let currentPage = 1;\r\n        let listTemp = [];\r\n        let size = 10;\r\n        const fetchData = async () => {\r\n            do {\r\n                const response = await getHistory(currentPage, size)\r\n                currentPage++;\r\n                total = response.data.total;\r\n                listTemp = [...listTemp, ...response.data.list]\r\n            } while (listTemp.length < total)\r\n\r\n            setListHistory(listTemp)\r\n        }\r\n        fetchData();\r\n\r\n\r\n        const getData = async () => {\r\n            const app = initializeApp(firebaseConfig);\r\n            const db = getFirestore(app);\r\n\r\n            const q = query(collection(db, \"Transaction\"), orderBy(\"time\"));\r\n            const querySnapshot = await getDocs(q);\r\n            const tempList = [];\r\n            querySnapshot.forEach((doc) => {\r\n                tempList.push(doc.data());\r\n            });\r\n\r\n            const newList = tempList.map(item => {\r\n                return {\r\n                    ...item,\r\n                    time: new Date(item.time.seconds * 1000).toLocaleString().split(',')[0]\r\n\r\n                }\r\n            })\r\n            setListWithdraw(newList);\r\n        }\r\n        getData();\r\n        return () => {\r\n            setListHistory([])\r\n            setListWithdraw([])\r\n        }\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n        const listSales = listHistory.filter(item => item.nft_token_id === 407301)\r\n        const listCost = listHistory.filter(item => item.nft_token_id === 403545)\r\n        let sumSales = listSales.reduce((prev, curr) => {\r\n            if (curr.time > Date.parse((\"12/28/2021\")) / 1000) {\r\n                curr.fee = Number(curr.amount) * 5 / 100;\r\n            }\r\n            return prev + (Number(curr.amount) - Number(curr.fee))\r\n        }, 0);\r\n        let sumCost = listCost.reduce((prev, curr) => {\r\n            return prev + Number(curr.amount)\r\n        }, 0);\r\n\r\n        let withdraw = 0;\r\n        let cost = 0;\r\n        listWithdraw.forEach((item, index) => {\r\n            if (item.transfer) {\r\n                withdraw += Number(item.amount);\r\n\r\n            } else {\r\n                cost += Number(item.amount);\r\n            }\r\n        }, 0);\r\n        sumCost += cost;\r\n        if (sumSales !== 0)\r\n            sumSales -= 2700;\r\n        setListSummary([\r\n            createData(\"Johny Duc\", sumSales, sumCost, withdraw, 40),\r\n            createData(\"Khang Pug\", sumSales, sumCost, withdraw, 40),\r\n            createData(\"Duc Professor\", sumSales, sumCost, withdraw, 20),\r\n            createData(\"Total\", sumSales, sumCost, withdraw, 100),\r\n        ]);\r\n    }, [listHistory, listWithdraw])\r\n    return (\r\n        <div className=\"sales\">\r\n            <TableContainer id=\"sales-section\" component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"center\">Sales</TableCell>\r\n                            <TableCell align=\"center\">Cost</TableCell>\r\n                            <TableCell align=\"center\">Profit</TableCell>\r\n                            <TableCell align=\"center\">Withdraw</TableCell>\r\n                            <TableCell align=\"center\">Remain</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listHistory && listSummary && listSummary.map((row) => (\r\n                            <TableRow\r\n                                key={row.name}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.sales))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.cost))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.profit))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.withdraw))}</TableCell>\r\n                                <TableCell align=\"center\">{numberWithCommas(Math.floor(row.remain))}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        {!listHistory && <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <CircularProgress size='small' color=\"success\" />\r\n                            </TableCell>\r\n                        </TableRow>}\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div id=\"withdraw-history\">\r\n                <h2 style={{\r\n                    textAlign: 'left'\r\n                }}>Withdraw History</h2>\r\n                <div id=\"addTransaction\">\r\n                    <Button\r\n                        size=\"medium\"\r\n                        id=\"toggleButton\"\r\n                        onClick={handleAddTrans}\r\n                        variant=\"contained\" >Add Transaction</Button>\r\n                    {toggle && (\r\n                        <React.StrictMode>\r\n                            <TextField\r\n                                type='number'\r\n                                label=\"Amount\"\r\n                                variant=\"outlined\" size=\"small\"\r\n                                style={{ marginBottom: '10px' }} />\r\n                            <TextField\r\n                                label=\"Notes\" variant=\"outlined\" size=\"small\" id=\"notes\"\r\n                                style={{ marginBottom: '10px' }} />\r\n                            <Button id=\"addButton\" size=\"medium\" variant=\"contained\">Add</Button>\r\n                        </React.StrictMode>\r\n                    )}\r\n                </div>\r\n                <TableContainer id='withdraw' component={Paper}>\r\n                    <Table sx={{ minWidth: 250 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Time</TableCell>\r\n                                <TableCell align=\"center\">Amount</TableCell>\r\n                                <TableCell align=\"center\">Note</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listWithdraw && listWithdraw.map((row, index) => (\r\n                                <TableRow\r\n                                    key={index}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.time}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(row.amount)}</TableCell>\r\n                                    <TableCell align=\"center\">{numberWithCommas(row.notes)}</TableCell>\r\n\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Sales;","import { useState } from 'react';\r\n\r\nimport { MenuItem, FormControl, Select, TextField, Box, Button, Container } from '@mui/material'\r\nimport { handleArrange, handleFilters } from '../../app/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nexport const InputSelect = ({ getFilter }) => {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.filters)\r\n\r\n    const [arrange, setArrange] = useState(filters.arrange);\r\n    const [minScore, setMinScore] = useState(filters.minScore);\r\n    const [level, setLevel] = useState(filters.level);\r\n\r\n\r\n    const handleLevelChange = (e) => {\r\n        setLevel(e.target.value);\r\n    }\r\n\r\n    const handleMinScoreChange = (e) => {\r\n        setMinScore(e.target.value);\r\n    }\r\n\r\n    const ArrangeChange = (event) => {\r\n        setArrange(event.target.value);\r\n        dispatch(handleArrange(event.target.value));\r\n    };\r\n    const FiltersChange = () => {\r\n        dispatch(handleFilters({ minScore, level }));\r\n        setArrange(0)\r\n    }\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ marginTop: '20px' }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                alignItems: 'end'\r\n            }}>\r\n                <TextField value={minScore} onChange={handleMinScoreChange} sx={{ width: 100, marginRight: '0.5rem' }} id=\"min-score\" label=\"Min score\" variant=\"standard\" type='number' />\r\n                <TextField value={level} onChange={handleLevelChange} sx={{ width: 100, marginRight: '0.5rem' }} id=\"level\" label=\"Level\" variant=\"standard\" type='number' />\r\n                <Button sx={{ height: '100%',color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={FiltersChange}>Confirm</Button>\r\n            </Box>\r\n            <Box>\r\n                <FormControl style={{ margin: '20px 0' }}>\r\n                    <Select\r\n                        size='small'\r\n                        labelId=\"select\"\r\n                        id=\"filter\"\r\n                        value={arrange}\r\n                        onChange={ArrangeChange}\r\n                    >\r\n                        <MenuItem value={0}>Lowest Price</MenuItem>\r\n                        <MenuItem value={1}>Highest Level</MenuItem>\r\n                        <MenuItem value={2}>Highest Score</MenuItem>\r\n                    </Select>\r\n\r\n                </FormControl>\r\n            </Box>\r\n\r\n        </Container>\r\n\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\r\nimport { InputSelect } from \"./InputSelect\";\r\nimport { numberWithCommas } from '../NFTs/PriceTable';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport '../../styles/metamon.css'\r\nimport { handleArrange } from \"../../app/actions\";\r\n\r\n\r\nconst getData = (minScore = 300, level = 1, pageNo = 1) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?saleType&category=13&tokenType&tokenId=-1&pageNo=${pageNo}&pageSize=100&sortBy=single_price&order=asc&min_level=${level}&max_level=60&min_score=${minScore}&max_score=330`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nconst Metamon = () => {\r\n    const { minScore, level, arrange } = useSelector(state => state.filters)\r\n    \r\n    const [listMetamon, setListMetamon] = useState([])\r\n    const [listShow, setListShow] = useState([])\r\n    const dispatch = useDispatch();\r\n\r\n    const getListMetamon = async () => {\r\n        await getData(minScore, level, 1).then(async (res) => {\r\n            const data = res.data;\r\n            let listData = res.data.list\r\n            // console.log(data.list.total)\r\n            for (let i = 1; i <= Math.floor(data.total / 100); i++) {\r\n                const list = await getData(minScore, level, i + 1).then(res => res.data.list);\r\n                listData = listData.concat(list)\r\n                // console.log(listData)\r\n            }\r\n\r\n            setListMetamon(listData)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getListMetamon();\r\n        dispatch(handleArrange(0));\r\n        return () => {\r\n            setListMetamon([])\r\n        }\r\n    }, [minScore, level])\r\n    useEffect(() => {\r\n        //Get list property\r\n        const sortBy = (filter) => {\r\n            return listMetamon.sort((a, b) => {\r\n                if (filter === 'fixed_price') {\r\n                    return Number(a[filter]) - Number(b[filter])\r\n                } else {\r\n                    return Number(b[filter]) - Number(a[filter])\r\n                }\r\n            });\r\n        }\r\n\r\n        switch (arrange) {\r\n            case 0:\r\n                setListShow(sortBy('fixed_price').slice(0, 10));\r\n                break;\r\n            case 1:\r\n                setListShow(sortBy('level').slice(0, 10));\r\n                break;\r\n            case 2:\r\n                setListShow(sortBy('score').slice(0, 10));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return () => {\r\n            setListShow([])\r\n        }\r\n    }, [listMetamon, arrange]);\r\n\r\n    return (\r\n        <Box sx={{ textAlign: 'left' }}>\r\n            <InputSelect />\r\n            <TableContainer id='table-scroll' component={Paper}>\r\n                <Table id='tablePrice' aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                ID\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Score\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Level\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Price\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listShow && listShow.map((metamon, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                        <a href={`https://market.radiocaca.com/#/market-place/${metamon.id}`} target='_blank' rel=\"noreferrer\">\r\n\r\n                                            <img width='50px' height='50px' src={metamon.image_url} alt='Metamon' />\r\n                                        </a>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                        <a href={`https://market.radiocaca.com/#/market-place/${metamon.id}`} target='_blank'\r\n                                            style={{ color: '#363636', textDecoration: 'none' }}\r\n                                            rel=\"noreferrer\"\r\n                                        >\r\n                                            {metamon.token_id}</a></TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{metamon?.score}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{metamon?.level}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{numberWithCommas(metamon.fixed_price)}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default Metamon;\r\n\r\n","import { useState } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel';\r\nimport PriceTable from './NFTs/PriceTable';\r\nimport Sales from './Sales/Sales';\r\nimport Metamon from './Metamon/Metamon'\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst RacaTabs = () => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Box id=\"tabs\" sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                    <Tab label=\"NFTs\" {...a11yProps(0)} />\r\n                    <Tab label=\"Sales\" {...a11yProps(1)} />\r\n                    <Tab label=\"Metamon\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n                <PriceTable/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Sales/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Metamon/>\r\n            </TabPanel>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default RacaTabs;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport { updatePriceAuto } from './app/actions';\nimport RacaTabs from './components/Tabs';\nimport axios from \"axios\"\n\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const getPrice = async () => {\n    await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=radio-caca&vs_currencies=usd').then(res => {\n      const price = res.data['radio-caca'].usd\n      document.title = price + \" - Marketplace RACA\"\n      dispatch(updatePriceAuto(price))\n    });\n  }\n  useEffect(() => {\n    getPrice()\n    const updatePrice = setInterval(async () => {\n      getPrice()\n    }, 20000)\n\n    return () => {\n      clearInterval(updatePrice)\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <RacaTabs />\n    </div>\n\n  );\n}\n\nexport default App;\n","\r\nconst initState = {\r\n    filters: {\r\n        minScore: 315,\r\n        level: 20,\r\n        arrange: 0,\r\n    },\r\n    price: 0,\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'handleFilters':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    minScore: action.payload.minScore,\r\n                    level: action.payload.level\r\n                }\r\n            }\r\n        case 'handleArrange':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    arrange: action.payload\r\n                }\r\n            }\r\n        case 'updatePrice':\r\n            return {\r\n                ...state,\r\n                price: action.payload\r\n            }      \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer;\r\n\r\n","import { createStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './app/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode >\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}