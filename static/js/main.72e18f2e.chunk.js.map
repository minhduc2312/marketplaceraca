{"version":3,"sources":["app/actions.js","components/TabPanel.js","components/NFTs/Card.js","components/NFTs/SwapRaca.js","components/StatsChart/data.js","components/StatsChart/StatsChart.js","components/NFTs/NFTs.js","components/Metamon/InputSelect.js","components/Metamon/Metamon.js","components/Elemon/InputFilters.js","components/Elemon/InfoCard.js","components/Elemon/Elemon.js","context/constants.js","context/AppContext.js","components/Portfolio/MarketHistory.js","components/Metamask.js","components/Portfolio/InfoToken.js","components/Portfolio/ModalUI.js","components/Loading.js","components/Portfolio/ImportTokenModal.js","components/Portfolio/TransactionsModal.js","components/Portfolio/StatWallet.js","config.js","components/Portfolio/Portfolio.js","components/ImageAnimation.js","components/Tabs.js","App.js","app/reducer.js","app/store.js","reportWebVitals.js","index.js"],"names":["handleArrange","arrange","type","payload","addToken","token","removeToken","TabPanel","props","children","value","index","other","useState","transition","useTransition","from","x","y","opacity","enter","display","leave","role","hidden","id","style","color","item","div","Typography","component","Card","nft","name","image_url","fixed_price","raca","useSelector","state","price","className","alt","src","fontSize","fontWeight","lineHeight","whiteSpace","textOverflow","margin","toString","replace","toFixed","SwapRacaToUSD","inputRaca","setInputRaca","usdPrice","setUsdPrice","handleChange","e","a","target","useEffect","Box","TextField","sx","height","variant","onChange","options","Date","chart","foreColor","zoom","enabled","resetIcon","offsetX","offsetY","fillColor","strokeColor","selection","background","border","plotOptions","candlestick","wick","useFillColor","title","text","align","xaxis","datetimeUTC","datetimeFormatter","year","month","day","hour","yaxis","tooltip","show","format","formatter","undefined","selectNFTsList","img","StatsChart","selectedStats","setSelectedStats","optionsCustom","setOptionsCustom","series","setSeries","getStats","then","res","data","list","sort","b","console","log","dataTemp","forEach","time","Math","floor","timestamp","unitPrice","count","high","low","open","close","Object","values","push","keys","nameSelected","filter","Number","prev","FormControl","width","Select","size","labelId","map","MenuItem","getDataMarket","categoryId","axios","ConvertDDMM","datetime","toLocaleString","split","tokenId","pageSize","getSellIngameList","formDataPrams","formDataLogin","FormData","append","method","url","headers","accessToken","catch","err","numberWithCommas","getFormData","formData","selectStatsList","selectIngameList","NFTs","listMetamon","setListMetamon","listDiamond","setListDiamond","listEgg","setListEgg","listPotion","setListPotion","kissUpLand","setKissUpLand","BigGreen","setBigGreen","MetamonR","setMetamonR","MMLand","setMMLand","selectStats","setSelectStats","selectedStatsList","setSelectedStatsList","tokenPrice","setTokenPrice","timeUpdated","setTimeUpdated","listStats","setListStats","sellIngameList","setSellIngameList","selectTypeIngame","setSelectTypeIngame","refSelect","useRef","convertDateTime","now","elmon","elcoin","btc","getData","Promise","all","document","querySelector","classList","toggle","rerenderData","setInterval","clearInterval","rerenderStats","getChild","current","childNodes","removeChild","shopOrderList","flexDirection","justifyContent","Table","TableHead","TableRow","TableCell","colSpan","TableBody","SwapRaca","TableContainer","Paper","objectFit","padding","ref","child","borderLeft","millify","length","amount","textTransform","gap","paddingLeft","level","score","InputSelect","handleConfirm","dispatch","useDispatch","filters","myStorage","window","localStorage","setArrange","minScore","setMinScore","setLevel","Container","maxWidth","marginTop","alignItems","marginRight","label","autoComplete","Button","onClick","handleFilters","setItem","JSON","stringify","levelMetamon","textAlign","event","pageNo","Metamon","stateMinScore","stateLevel","listShow","setListShow","loading","setLoading","getListMetamon","listData","i","total","concat","handleListMetamon","sortBy","slice","CircularProgress","metamon","position","scope","href","textDecoration","rel","token_id","InputFilters","filtersElemon","min","max","minPower","setMinPower","maxPower","setMaxPower","listAura","Array","listRarity","rarity","textShadow","handleRarity","checked","removeRarity","handleAura","removeAura","FormControlLabel","control","Checkbox","labelPlacement","onBlur","placeholder","InfoCard","elemon","isOwner","ownerAddress","URI","bodyPart","bodyPart1","bodyPart2","bodyPart3","bodyPart4","bodyPart5","bodyPart6","class","purity","baseCardId","join","quality","lastPrice","point","getElemonItem","pageNumber","priceMode","get","getElemonInfo","listElemon","listTokenId","error","Elemon","setListElemon","listElemonInfo","setListElemonInfo","listFilter","setListFilter","aura","paging","totalCount","React","getInfo","lengthList","loop","listInfo","pre","checkPower","power","checkName","checkRarity","includes","checkAura","Grid","container","spacing","boxShadow","xs","md","lg","contractABI","AppContext","createContext","AppProvider","appStatus","setAppStatus","currentAccount","setCurrentAccount","provider","WalletConnectProvider","rpc","qrcodeModalOptions","mobileLinks","checkIfWalletConnected","ethereum","web3","Web3","abi","contract","eth","Contract","methods","request","addressArray","alert","on","disconnectWC","disconnect","w3","walletConnect","enable","getAccounts","accounts","account","toLowerCase","connectToWallet","Provider","MarketHistory","useContext","historyList","setHistoryList","setLength","totalList","setTotalList","totalBuy","setTotalBuy","totalSell","setTotalSell","getMarketHistory","getHistoryData","listDataMD2","listDataMD","listNFT","listTotal","buy","sell","token_name","countBuy","fee","countSell","getItem","profit","minWidth","minHeight","Metamask","noUserFound","userLoggedIn","lineBreak","noMetamaskFound","status","app","getInfoToken","coins","InfoToken","infoToken","listToken","find","tokenName","symbol","db","addTokenToDB","q","query","collection","where","getDocs","querySnapshot","empty","addDoc","address","tokens","finally","doc","docRef","updateDoc","mt","thumb","large","borderRadius","platforms","disabled","ModalUI","isOpen","setOpen","onClose","Modal","top","left","transform","bgcolor","p","Loading","ImportTokenModal","isOpenModal","setIsOpenModal","tokenInput","setTokenInput","tokenQuery","setTokenQuery","invalidToken","setInvalidToken","bounceInput","setTimeout","clearTimeout","StrictMode","autoFocus","handleChangeInput","maxHeight","overflowY","overflowX","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","headCells","EnhancedTableHead","onRequestSort","headCell","sortDirection","TableSortLabel","active","direction","property","TransactionsModal","infoTransactions","setInfoTransactions","setOrder","setOrderBy","listTransactions","stickyHeader","row","date","precision","decimalSeparator","toUpperCase","StatWallet","setListTransactions","prevLength","listBalance","setListBalance","deleteToken","parentNode","dataset","docItem","exists","result","listResult","getDataFireBase","listTokens","limit","end","start","getBalance","balanceFromWei","utils","fromWei","balance","abs","totalDeposit","totalDepositPrice","totalWithdraw","totalWithdrawPrice","startTime","timeStamp","endTime","listTransactionsTemp","hashmap","prices","toLocaleDateString","hashmapPrice","transaction","getDateTransaction","infoTransaction","getTransaction","showDetailTransaction","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Portfolio","initializeApp","getFirestore","isVisible","setIsVisible","initApp","marginBottom","ImageAnimation","a11yProps","TabInfo","others","HeaderTabs","getTab","setValue","isMute","setIsMute","statusMute","setStatusMute","audioRef","handleChangeSound","audioEl","paused","play","pause","onClickChangeSound","handlePressSpace","keyCode","body","preventDefault","addEventListener","removeEventListener","controls","Tabs","newValue","centered","Tab","memo","App","getPrice","usd","updatePrice","initState","parse","tab","rootReducer","action","positionRarity","indexOf","positionAura","newList","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.72e18f2e.chunk.js","sourcesContent":["\r\nexport const handleFilters = ({ minScore, level }) => {\r\n    return {\r\n        type: 'handleFilters',\r\n        payload: {\r\n            minScore,\r\n            level\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleArrange = (arrange) => {\r\n    return {\r\n        type: 'handleArrange',\r\n        payload: arrange\r\n    }\r\n}\r\n\r\nexport const updatePriceAuto = (price) => {\r\n    return {\r\n        type: 'updatePrice',\r\n        payload: price,\r\n    }\r\n}\r\n\r\nexport const handlePower = ({ minPower, maxPower }) => {\r\n    return {\r\n        type: 'handlePower',\r\n        payload: {\r\n            min: minPower,\r\n            max: maxPower\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleSort = (sort) => {\r\n    return {\r\n        type: 'handleSort',\r\n        payload: sort,\r\n    }\r\n}\r\n\r\nexport const handleFilterName = (name) => {\r\n    return {\r\n        type: 'handleName',\r\n        payload: name,\r\n    }\r\n}\r\nexport const handleTokenId = (id) => {\r\n    return {\r\n        type: 'handleTokenId',\r\n        payload: id,\r\n    }\r\n}\r\nexport const addRarity = (id) => {\r\n    return {\r\n        type: 'elemon/addRarity',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const removeRarity = (id) => {\r\n    return {\r\n        type: 'elemon/removeRarity',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const addAura = (id) => {\r\n    return {\r\n        type: 'elemon/addAura',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const removeAura = (id) => {\r\n    return {\r\n        type: 'elemon/removeAura',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const changeCurrentAccount = (address) => {\r\n    return {\r\n        type: 'changeCurrentAccount',\r\n        payload: address,\r\n    }\r\n}\r\nexport const addToken = (token) => {\r\n    return {\r\n        type: 'tokens/add',\r\n        payload: token,\r\n    }\r\n}\r\nexport const removeToken = (token) => {\r\n    return {\r\n        type: 'tokens/remove',\r\n        payload: token,\r\n    }\r\n}\r\nexport const initTokens = (tokens) => {\r\n    return {\r\n        type: 'initTokens',\r\n        payload: tokens,\r\n    }\r\n}\r\nexport const initApp = (app) => {\r\n    return {\r\n        type: 'initApp',\r\n        payload: app,\r\n    }\r\n}\r\nexport const clearListToken = () => {\r\n    return {\r\n        type:'clearListToken'\r\n    }\r\n}\r\n\r\n\r\n","import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { useState } from 'react'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    const [show, setShow] = useState(true)\r\n    const transition = useTransition(true, {\r\n        from: { x: -500, y: 10, opacity: 0 },\r\n        enter: { x: 0, y: 0, opacity: 1, display: 'block' },\r\n        leave: { x: 500, y: 10, opacity: 0, display: 'none' }\r\n    })\r\n    return (\r\n\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            style={{ color: '#ffffff' }}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n\r\n                transition((style, item) =>\r\n                (<animated.div style={style}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </animated.div>)\r\n                )\r\n                /*{ <Box sx={{ span: 3 }}>\r\n                    {transition((style, item) =>\r\n                        (<animated.div style={style}>\r\n                            <Typography component={'span'}>{children}</Typography>\r\n                        </animated.div>)\r\n                    )}\r\n\r\n                </Box> }*/\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TabPanel;","import { useSelector } from \"react-redux\";\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Card = (props) => {\r\n\r\n    const { name = \"undefined\", id = \"#0000\", image_url = '', fixed_price = '0000' } = props.nft;\r\n    const { raca } = useSelector(state => state.price)\r\n    return (\r\n        <div className='nft'>\r\n            <div className=\"imgBox\">\r\n                <img className='image-nft' alt={name} src={image_url || \"/marketplaceraca/raca/nft.png\"} />\r\n            </div>\r\n            <div className=\"textBox\">\r\n                <p className='name-nft'>{name} #{id}</p>\r\n                <div className='separate'></div>\r\n                <div className='price'>\r\n                    <p style={{\r\n                        color: '#ffffff',\r\n                        fontSize: 20,\r\n                        fontWeight: 700,\r\n                        lineHeight: '32px',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        margin: '0'\r\n                    }}>Price</p>\r\n                    <p className='priceNum'>{`${numberWithCommas(fixed_price)} (~${(fixed_price * raca).toFixed(2)})`}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { Box, Input, TextField } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst SwapRacaToUSD = () => {\r\n    const [inputRaca, setInputRaca] = useState('');\r\n    const [usdPrice, setUsdPrice] = useState(0);\r\n\r\n    const handleChange = async (e) => {\r\n        setInputRaca(e.target.value);\r\n    }\r\n    const { raca } = useSelector(state => state.price)\r\n    useEffect(() => {\r\n        setUsdPrice(() => inputRaca * raca);\r\n    }, [inputRaca, raca])\r\n    return (\r\n        <Box id='swap-raca'>\r\n            <TextField sx={{ height: '50px' }} id=\"RACA\" type=\"number\" variant=\"outlined\" value={inputRaca} onChange={handleChange} />\r\n            <span> ~ </span>\r\n            <span id=\"USD\">{usdPrice.toFixed(4)} USD</span>\r\n        </Box>\r\n    )\r\n}\r\nexport default SwapRacaToUSD;","\r\nexport const seriesExample =\r\n    [{\r\n        data: [\r\n            {\r\n                x: new Date(1538778600000),\r\n                y: [6629.81, 6650.5, 6623.04, 6633.33]\r\n            },\r\n            {\r\n                x: new Date(1538780400000),\r\n                y: [6632.01, 6643.59, 6620, 6630.11]\r\n            },\r\n            {\r\n                x: new Date(1538782200000),\r\n                y: [6630.71, 6648.95, 6623.34, 6635.65]\r\n            },\r\n            {\r\n                x: new Date(1538784000000),\r\n                y: [6635.65, 6651, 6629.67, 6638.24]\r\n            },\r\n            {\r\n                x: new Date(1538785800000),\r\n                y: [6638.24, 6640, 6620, 6624.47]\r\n            },\r\n            {\r\n                x: new Date(1538787600000),\r\n                y: [6624.53, 6636.03, 6621.68, 6624.31]\r\n            },\r\n            {\r\n                x: new Date(1538789400000),\r\n                y: [6624.61, 6632.2, 6617, 6626.02]\r\n            },\r\n            {\r\n                x: new Date(1538791200000),\r\n                y: [6627, 6627.62, 6584.22, 6603.02]\r\n            },\r\n            {\r\n                x: new Date(1538793000000),\r\n                y: [6605, 6608.03, 6598.95, 6604.01]\r\n            },\r\n            {\r\n                x: new Date(1538794800000),\r\n                y: [6604.5, 6614.4, 6602.26, 6608.02]\r\n            },\r\n            {\r\n                x: new Date(1538796600000),\r\n                y: [6608.02, 6610.68, 6601.99, 6608.91]\r\n            },\r\n            {\r\n                x: new Date(1538798400000),\r\n                y: [6608.91, 6618.99, 6608.01, 6612]\r\n            },\r\n            {\r\n                x: new Date(1538800200000),\r\n                y: [6612, 6615.13, 6605.09, 6612]\r\n            },\r\n            {\r\n                x: new Date(1538802000000),\r\n                y: [6612, 6624.12, 6608.43, 6622.95]\r\n            },\r\n            {\r\n                x: new Date(1538803800000),\r\n                y: [6623.91, 6623.91, 6615, 6615.67]\r\n            },\r\n            {\r\n                x: new Date(1538805600000),\r\n                y: [6618.69, 6618.74, 6610, 6610.4]\r\n            },\r\n            {\r\n                x: new Date(1538807400000),\r\n                y: [6611, 6622.78, 6610.4, 6614.9]\r\n            },\r\n            {\r\n                x: new Date(1538809200000),\r\n                y: [6614.9, 6626.2, 6613.33, 6623.45]\r\n            },\r\n            {\r\n                x: new Date(1538811000000),\r\n                y: [6623.48, 6627, 6618.38, 6620.35]\r\n            },\r\n            {\r\n                x: new Date(1538812800000),\r\n                y: [6619.43, 6620.35, 6610.05, 6615.53]\r\n            },\r\n            {\r\n                x: new Date(1538814600000),\r\n                y: [6615.53, 6617.93, 6610, 6615.19]\r\n            },\r\n            {\r\n                x: new Date(1538816400000),\r\n                y: [6615.19, 6621.6, 6608.2, 6620]\r\n            },\r\n            {\r\n                x: new Date(1538818200000),\r\n                y: [6619.54, 6625.17, 6614.15, 6620]\r\n            },\r\n            {\r\n                x: new Date(1538820000000),\r\n                y: [6620.33, 6634.15, 6617.24, 6624.61]\r\n            },\r\n            {\r\n                x: new Date(1538821800000),\r\n                y: [6625.95, 6626, 6611.66, 6617.58]\r\n            },\r\n            {\r\n                x: new Date(1538823600000),\r\n                y: [6619, 6625.97, 6595.27, 6598.86]\r\n            },\r\n            {\r\n                x: new Date(1538825400000),\r\n                y: [6598.86, 6598.88, 6570, 6587.16]\r\n            },\r\n            {\r\n                x: new Date(1538827200000),\r\n                y: [6588.86, 6600, 6580, 6593.4]\r\n            },\r\n            {\r\n                x: new Date(1538829000000),\r\n                y: [6593.99, 6598.89, 6585, 6587.81]\r\n            },\r\n            {\r\n                x: new Date(1538830800000),\r\n                y: [6587.81, 6592.73, 6567.14, 6578]\r\n            },\r\n            {\r\n                x: new Date(1538832600000),\r\n                y: [6578.35, 6581.72, 6567.39, 6579]\r\n            },\r\n            {\r\n                x: new Date(1538834400000),\r\n                y: [6579.38, 6580.92, 6566.77, 6575.96]\r\n            },\r\n            {\r\n                x: new Date(1538836200000),\r\n                y: [6575.96, 6589, 6571.77, 6588.92]\r\n            },\r\n            {\r\n                x: new Date(1538838000000),\r\n                y: [6588.92, 6594, 6577.55, 6589.22]\r\n            },\r\n            {\r\n                x: new Date(1538839800000),\r\n                y: [6589.3, 6598.89, 6589.1, 6596.08]\r\n            },\r\n            {\r\n                x: new Date(1538841600000),\r\n                y: [6597.5, 6600, 6588.39, 6596.25]\r\n            },\r\n            {\r\n                x: new Date(1538843400000),\r\n                y: [6598.03, 6600, 6588.73, 6595.97]\r\n            },\r\n            {\r\n                x: new Date(1538845200000),\r\n                y: [6595.97, 6602.01, 6588.17, 6602]\r\n            },\r\n            {\r\n                x: new Date(1538847000000),\r\n                y: [6602, 6607, 6596.51, 6599.95]\r\n            },\r\n            {\r\n                x: new Date(1538848800000),\r\n                y: [6600.63, 6601.21, 6590.39, 6591.02]\r\n            },\r\n            {\r\n                x: new Date(1538850600000),\r\n                y: [6591.02, 6603.08, 6591, 6591]\r\n            },\r\n            {\r\n                x: new Date(1538852400000),\r\n                y: [6591, 6601.32, 6585, 6592]\r\n            },\r\n            {\r\n                x: new Date(1538854200000),\r\n                y: [6593.13, 6596.01, 6590, 6593.34]\r\n            },\r\n            {\r\n                x: new Date(1538856000000),\r\n                y: [6593.34, 6604.76, 6582.63, 6593.86]\r\n            },\r\n            {\r\n                x: new Date(1538857800000),\r\n                y: [6593.86, 6604.28, 6586.57, 6600.01]\r\n            },\r\n            {\r\n                x: new Date(1538859600000),\r\n                y: [6601.81, 6603.21, 6592.78, 6596.25]\r\n            },\r\n            {\r\n                x: new Date(1538861400000),\r\n                y: [6596.25, 6604.2, 6590, 6602.99]\r\n            },\r\n            {\r\n                x: new Date(1538863200000),\r\n                y: [6602.99, 6606, 6584.99, 6587.81]\r\n            },\r\n            {\r\n                x: new Date(1538865000000),\r\n                y: [6587.81, 6595, 6583.27, 6591.96]\r\n            },\r\n            {\r\n                x: new Date(1538866800000),\r\n                y: [6591.97, 6596.07, 6585, 6588.39]\r\n            },\r\n            {\r\n                x: new Date(1538868600000),\r\n                y: [6587.6, 6598.21, 6587.6, 6594.27]\r\n            },\r\n            {\r\n                x: new Date(1538870400000),\r\n                y: [6596.44, 6601, 6590, 6596.55]\r\n            },\r\n            {\r\n                x: new Date(1538872200000),\r\n                y: [6598.91, 6605, 6596.61, 6600.02]\r\n            },\r\n            {\r\n                x: new Date(1538874000000),\r\n                y: [6600.55, 6605, 6589.14, 6593.01]\r\n            },\r\n            {\r\n                x: new Date(1538875800000),\r\n                y: [6593.15, 6605, 6592, 6603.06]\r\n            },\r\n            {\r\n                x: new Date(1538877600000),\r\n                y: [6603.07, 6604.5, 6599.09, 6603.89]\r\n            },\r\n            {\r\n                x: new Date(1538879400000),\r\n                y: [6604.44, 6604.44, 6600, 6603.5]\r\n            },\r\n            {\r\n                x: new Date(1538881200000),\r\n                y: [6603.5, 6603.99, 6597.5, 6603.86]\r\n            },\r\n            {\r\n                x: new Date(1538883000000),\r\n                y: [6603.85, 6605, 6600, 6604.07]\r\n            },\r\n            {\r\n                x: new Date(1538884800000),\r\n                y: [6604.98, 6606, 6604.07, 6606]\r\n            },\r\n        ]\r\n    }]\r\nexport const options = {\r\n    chart: {\r\n        type: 'candlestick',\r\n        height: 350,\r\n        foreColor: '#fff',\r\n        zoom: {\r\n            enabled: true,\r\n            type: 'x',\r\n            resetIcon: {\r\n                offsetX: -10,\r\n                offsetY: 0,\r\n                fillColor: '#fff',\r\n                strokeColor: '#37474F'\r\n            },\r\n            selection: {\r\n                background: '#90CAF9',\r\n                border: '#0D47A1'\r\n            }\r\n        }\r\n    },\r\n    plotOptions: {\r\n        candlestick: {\r\n            wick: {\r\n                useFillColor: true,\r\n            }\r\n        }\r\n    },\r\n    title: {\r\n        text: 'CandleStick Chart',\r\n        align: 'left'\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n        datetimeUTC: true,\r\n        datetimeFormatter: {\r\n            year: 'yyyy',\r\n            month: \"MMM 'yy\",\r\n            day: 'dd MMM',\r\n            hour: 'HH:mm',\r\n        },\r\n    },\r\n    yaxis: {\r\n        tooltip: {\r\n            enabled: true\r\n        }\r\n    },\r\n    tooltip: {\r\n        x: {\r\n            show: true,\r\n            format: 'HH:mm\\ndd MMM',\r\n            formatter: undefined,\r\n        },\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport ApexCharts from 'apexcharts'\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport { options, seriesExample } from './data'\r\nimport { getStats } from '../NFTs/NFTs'\r\nimport { Box } from '@mui/system'\r\nimport { FormControl, MenuItem, Select } from '@mui/material'\r\n\r\nconst selectNFTsList = [\r\n  {\r\n    name: 'Metamon',\r\n    id: 13,\r\n    img: 'metamon.png'\r\n  },\r\n  {\r\n    name: 'Egg',\r\n    id: 17,\r\n    img: 'egg.png'\r\n  },\r\n  {\r\n    name: 'Yellow Diamond',\r\n    id: 16,\r\n    img: 'DiamondYellow.png'\r\n  },\r\n  {\r\n    name: 'Potion',\r\n    id: 15,\r\n    img: 'potion.png'\r\n  },\r\n  {\r\n    name: 'Kiss-up State Land',\r\n    id: 20,\r\n    img: 'kissup.png'\r\n  },\r\n  {\r\n    name: 'Musk USM Land',\r\n    id: 7,\r\n    img: 'mml.png'\r\n  },\r\n]\r\n\r\nconst StatsChart = () => {\r\n  const [selectedStats, setSelectedStats] = useState(selectNFTsList[0].id);\r\n  const [statsList, setStatsList] = useState([]);\r\n  const [optionsCustom, setOptionsCustom] = useState(options)\r\n  const [series, setSeries] = useState([])\r\n  const handleChangeSelect = (e) => {\r\n    setSelectedStats(e.target.value)\r\n    options.title.text = selectNFTsList.filter(item => item.id === Number(e.target.value))[0].name\r\n    // options.title.text = selectNFTsList[e.target.value].name\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getStats(selectedStats, 1000).then(res => {\r\n      const data = res.data.list;\r\n      // console.log(data)\r\n      data.sort((a, b) => a < b ? 1 : -1);\r\n      console.log(data)\r\n      const timeSplit = 15 * 60;\r\n      // console.log(new Date(1650715223 * 1000).toLocaleTimeString(), new Date(Math.floor(1650715223/(15*60))*(15*60) * 1000).toLocaleTimeString())\r\n      const dataTemp = {}\r\n      const series = [{\r\n        data: []\r\n      }];\r\n      data.forEach(item => {\r\n        // console.log(new Date(Math.floor(item.timestamp / timeSplit) * timeSplit * 1000).toLocaleTimeString());\r\n        const time = new Date((Math.floor(item.timestamp / timeSplit) * timeSplit + 25200) * 1000)\r\n\r\n        // console.log(dataTemp[time]?.high < item.fixed_price);\r\n        const unitPrice = Math.floor(item.fixed_price / item.count);\r\n        if (!dataTemp[time]) {\r\n          dataTemp[time] = {\r\n            open: unitPrice,\r\n            high: unitPrice,\r\n            low: unitPrice,\r\n          }\r\n        } else {\r\n          dataTemp[time] = {\r\n            ...dataTemp[time],\r\n            high: dataTemp[time].high < unitPrice ? unitPrice : dataTemp[time].high,\r\n            low: dataTemp[time].low > unitPrice ? unitPrice : dataTemp[time].low,\r\n          }\r\n        }\r\n        dataTemp[time].close = unitPrice;\r\n        // series[0].data.push([time,dataTemp[time].open, dataTemp[time].high, dataTemp[time].low, dataTemp[time].close])\r\n      })\r\n      // console.log(Array(dataTemp))\r\n      // console.log(Object.keys(dataTemp))\r\n      // console.log(Object.values(dataTemp))\r\n      Object.values(dataTemp).forEach((item, index) => {\r\n        // console.log(Object.values(item).unshift(Object.keys(dataTemp)[index]))\r\n        series[0].data.push([[Object.keys(dataTemp)[index]], [...Object.values(item)]])\r\n      })\r\n      console.log(series[0])\r\n      setSeries(series)\r\n      // dataTemp.forEach(item=>console.log(item))\r\n\r\n    })\r\n\r\n    const nameSelected = selectNFTsList.filter(item => item.id === Number(selectedStats))[0].name\r\n    setOptionsCustom(prev => {\r\n      return {\r\n        ...prev,\r\n        title: {\r\n          text: nameSelected + ' Chart',\r\n        },\r\n      }\r\n    })\r\n  }, [selectedStats])\r\n  return (\r\n    <Box id=\"chart\" sx={{ color: '#333' }}>\r\n      <FormControl className='select-stats' style={{ width: '150px' }}>\r\n        <Select\r\n          size='small'\r\n          labelId=\"select\"\r\n          id=\"filter\"\r\n          value={selectedStats}\r\n          onChange={handleChangeSelect}\r\n          sx={{ color: '#fff', }}\r\n          className='select-stats'\r\n        >\r\n          {selectNFTsList && selectNFTsList.map((item, index) => (\r\n            <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Chart options={optionsCustom} series={series} type=\"candlestick\" height={350} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default StatsChart","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SwapRacaToUSD from \"./SwapRaca\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, Typography, MenuItem, Select, FormControl, Grid } from '@mui/material';\r\nimport '../../styles/nfts.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport millify from \"millify\";\r\nimport StatsChart from \"../StatsChart/StatsChart\";\r\n\r\n\r\nconst getDataMarket = (categoryId = '', size = '') => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst ConvertDDMM = (datetime) => {\r\n    const [date, time] = datetime.toLocaleString().split(',');\r\n    return `${time.split(' ')[1]}`\r\n}\r\nexport const getStats = (categoryId = '', pageSize = 10) => {\r\n    let tokenId;\r\n    if (categoryId === 15 || categoryId === 16) {\r\n        tokenId = 0\r\n    } else {\r\n        tokenId = -1\r\n    }\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=${pageSize}&status=executed&tokenId=${tokenId}&category=${categoryId}`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst getSellIngameList = (formDataPrams) => {\r\n    const formDataLogin = new FormData();\r\n    formDataLogin.append('address', \"0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16\");\r\n    formDataLogin.append('sign', \"0x44063b19d6cd4ce60cda4db25aade076e2206b3539f6f5a62237fb6c0ed31fe84e7770f66cc3e623cf520cdf353a116491af88f4c53894d424914888c677ac321c\");\r\n    formDataLogin.append('msg', \"LogIn-79a8ee53-dc8b-ef50-a811-086c474b1566\");\r\n    formDataLogin.append('network', \"1\");\r\n    formDataLogin.append('clientType', \"MetaMask\");\r\n\r\n    return axios({\r\n        method: 'POST',\r\n        url: 'https://metamon-api.radiocaca.com/usm-api/login',\r\n        data: formDataLogin,\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        }\r\n    }).then((res) => {\r\n        const data = res.data.data;\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'https://metamon-api.radiocaca.com/usm-api/shop-order/sellList',\r\n            data: formDataPrams,\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                \"accesstoken\": data.accessToken,\r\n            }\r\n        });\r\n    }).catch(err => console.log(err))\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nconst getFormData = (type) => {\r\n    const formData = new FormData();\r\n    formData.append('address', '0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16')\r\n    formData.append('type', type)\r\n    formData.append('orderType', 3)\r\n    formData.append('orderId', -1)\r\n    formData.append('pageSize', 5)\r\n    return formData;\r\n}\r\nconst selectStatsList = [\r\n    {\r\n        name: 'Metamon',\r\n        id: 13,\r\n        img: 'metamon.png'\r\n    },\r\n    {\r\n        name: 'Diamond Yellow',\r\n        id: 16,\r\n        img: 'DiamondYellow.png'\r\n    },\r\n    {\r\n        name: 'Potion',\r\n        id: 15,\r\n        img: 'potion.png'\r\n    },\r\n    {\r\n        name: 'Kiss-up State Land',\r\n        id: 20,\r\n        img: 'kissup.png'\r\n    },\r\n    {\r\n        name: 'Musk USM Land',\r\n        id: 7,\r\n        img: 'mml.png'\r\n    },\r\n]\r\n\r\nconst selectIngameList = [\r\n    {\r\n        name: 'Valhalla',\r\n        type: 6,\r\n        img: 'valhalla.png'\r\n    },\r\n    {\r\n        name: 'Anti Fatigue',\r\n        type: 11,\r\n        img: 'AntiFatiguePotion.png'\r\n    },\r\n    {\r\n        name: 'Purple Potion',\r\n        type: 10,\r\n        img: 'purple-potion.png'\r\n    },\r\n    {\r\n        name: 'Villa Fragments',\r\n        type: 1015,\r\n        img: 'villa.png'\r\n    },\r\n    {\r\n        name: 'Mansion Fragments',\r\n        type: 1016,\r\n        img: 'mansion.png'\r\n    },\r\n    {\r\n        name: 'Castle Fragments',\r\n        type: 1017,\r\n        img: 'castle.png'\r\n    },\r\n    {\r\n        name: 'Donuts',\r\n        type: 1004,\r\n        img: 'Donuts.png'\r\n    },\r\n]\r\n\r\nconst NFTs = () => {\r\n    const [listMetamon, setListMetamon] = useState([]);\r\n    const [listDiamond, setListDiamond] = useState([]);\r\n    const [listEgg, setListEgg] = useState([]);\r\n    const [listPotion, setListPotion] = useState([]);\r\n    const [kissUpLand, setKissUpLand] = useState({});\r\n    const [BigGreen, setBigGreen] = useState({});\r\n    const [MetamonR, setMetamonR] = useState({});\r\n    const [MMLand, setMMLand] = useState({});\r\n    const [selectStats, setSelectStats] = useState(selectStatsList[0].id);\r\n    const [selectedStatsList, setSelectedStatsList] = useState();\r\n    const [tokenPrice, setTokenPrice] = useState(0);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [listStats, setListStats] = useState([]);\r\n    const [sellIngameList, setSellIngameList] = useState([]);\r\n    const [selectTypeIngame, setSelectTypeIngame] = useState(6);\r\n    const refSelect = useRef();\r\n\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    const handleChangeSelect = (e) => {\r\n        // console.log(e.target.value)\r\n        setSelectStats(e.target.value)\r\n    }\r\n    const handleChangeSelectSellIngame = (e) => {\r\n        setSelectTypeIngame(e.target.value)\r\n    }\r\n    const { raca, elmon, elcoin, btc } = useSelector(state => state.price)\r\n    const getData = async () => (\r\n        Promise.all([\r\n            getDataMarket(13, 5).then(res =>\r\n                setListMetamon(res.data.list)\r\n            ),\r\n            getDataMarket(15, 5).then(res =>\r\n                setListPotion(res.data.list)\r\n            ),\r\n            getDataMarket(16, 5).then(res =>\r\n                setListDiamond(res.data.list)\r\n            ),\r\n            getDataMarket(17, 5).then(res =>\r\n                setListEgg(res.data.list)\r\n            ),\r\n            getStats(17).then(res =>\r\n                setListStats(res.data.list)\r\n            ),\r\n\r\n            getDataMarket(20, 1).then(res => {\r\n                setKissUpLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getDataMarket(23, 1).then(res => {\r\n                setMetamonR(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getDataMarket(7, 1).then(res => {\r\n                setMMLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getDataMarket(46, 1).then(res => {\r\n                setBigGreen(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n        ])\r\n    )\r\n    useEffect(() => {\r\n        setTokenPrice(raca)\r\n    }, [raca])\r\n    useEffect(() => {\r\n        getData();\r\n        convertDateTime();\r\n        const rerenderData = setInterval(() => {\r\n            getData();\r\n            convertDateTime();\r\n        }, 20000)\r\n\r\n        return () => {\r\n            setListMetamon([])\r\n            setListDiamond([])\r\n            setListEgg([])\r\n            setListPotion([])\r\n            setListStats([])\r\n            setKissUpLand({})\r\n            setTokenPrice(0)\r\n            clearInterval(rerenderData);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        // refSelect.current.textContent = 'something'\r\n        getStats(selectStats).then(res => setSelectedStatsList(res.data.list));\r\n        const rerenderStats = setInterval(() => {\r\n            getStats(selectStats).then(res => setSelectedStatsList(res.data.list));\r\n        }, 60000);\r\n        return () => {\r\n            clearInterval(rerenderStats)\r\n            setSelectedStatsList()\r\n        }\r\n    }, [selectStats])\r\n\r\n    useEffect(() => {\r\n        const getChild = refSelect.current.childNodes[0]\r\n\r\n        if (getChild?.childNodes[1]) {\r\n            getChild?.removeChild(getChild?.childNodes[1])\r\n        }\r\n        getSellIngameList(getFormData(selectTypeIngame)).then(res => {\r\n            if (res?.data) {\r\n                const data = res.data.data;\r\n                setSellIngameList(data.shopOrderList)\r\n            }\r\n\r\n        }).catch(err => console.log(err));\r\n        const rerenderStats = setInterval(() => {\r\n            getSellIngameList(getFormData(selectTypeIngame)).then(res => {\r\n                if (res?.data) {\r\n                    const data = res.data.data;\r\n                    setSellIngameList(data.shopOrderList)\r\n                }\r\n\r\n            });\r\n        }, 60000);\r\n        return () => {\r\n            clearInterval(rerenderStats)\r\n            setSellIngameList([])\r\n        }\r\n\r\n    }, [selectTypeIngame])\r\n    return (\r\n        <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n                <div className=\"statistical\">\r\n                    <Table className=\"priceToken\" sx={{ color: '#fff' }}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell colSpan={4}>Token Price</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className='tokenPrice'>RACA</TableCell>\r\n                                <TableCell className='tokenPrice'>ELMON</TableCell>\r\n                                <TableCell className='tokenPrice'>ELCOIN</TableCell>\r\n                                <TableCell className='tokenPrice'>BTC </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    {raca}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {elmon}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {elcoin}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {numberWithCommas(btc)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                        </TableBody>\r\n\r\n                    </Table>\r\n                    <SwapRacaToUSD />\r\n                    <p id='timeUpdated'>{timeUpdated}</p>\r\n                    <div className='pricetable'>\r\n                        <TableContainer className='table-scroll' component={Paper}>\r\n                            <Table className='tablePrice' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">#</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/metamon.png' alt='Metamon' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/MetamonEgg.png' alt='Egg' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/DiamondYellow.png' alt='DiamondYellow' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/raca/potion.png' alt='Potion' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <FormControl className='select-ingame'>\r\n                                                <Select\r\n                                                    size='small'\r\n                                                    labelId=\"select-ingame\"\r\n                                                    id=\"select-ingame\"\r\n                                                    value={selectTypeIngame}\r\n                                                    onChange={handleChangeSelectSellIngame}\r\n                                                    sx={{ color: '#fff', padding: 0 }}\r\n                                                    className='select-stats'\r\n                                                    ref={refSelect}>\r\n                                                    {selectIngameList && selectIngameList.map((item, index) => (\r\n                                                        <MenuItem key={item.type} value={item.type}>\r\n                                                            <img style={{ objectFit: 'contain' }} width='50px' height='50px' src={`/marketplaceraca/raca/${item.img}`} alt={item.name} />\r\n                                                            {item.name}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {/* <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/valhalla.png' alt='valhalla' /> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {listEgg && listMetamon && listDiamond && listPotion && listEgg.map((child, index) => {\r\n                                        return (\r\n                                            <TableRow key={index + 1}>\r\n                                                <TableCell align=\"center\" sx={{ borderLeft: '1px solid' }}>{index + 1}</TableCell>\r\n                                                <TableCell align=\"center\">{millify(Math.floor(listMetamon[index]?.fixed_price))} (~{(tokenPrice * listMetamon[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listEgg[index]?.fixed_price))} (~{(tokenPrice * listEgg[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listDiamond[index]?.fixed_price))} (~{(tokenPrice * listDiamond[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listPotion[index]?.fixed_price))} (~{(tokenPrice * listPotion[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{sellIngameList.length !== 0 ? `${numberWithCommas(Math.floor(sellIngameList[index]?.amount))} (~${(tokenPrice * sellIngameList[index]?.amount).toFixed(2)})` : 0}</TableCell>\r\n                                            </TableRow>)\r\n                                    })}\r\n\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n                    <Box className=\"stats-session\">\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', padding: '5px 12px' }}>\r\n                            <Typography style={{\r\n                                textTransform: 'uppercase',\r\n                                fontWeight: \"bold\",\r\n                                fontSize: \"larger\",\r\n                            }}>Stats</Typography>\r\n                            <FormControl className='select-stats' style={{ width: '150px' }}>\r\n                                <Select\r\n                                    size='small'\r\n                                    labelId=\"select\"\r\n                                    id=\"filter\"\r\n                                    value={selectStats}\r\n                                    onChange={handleChangeSelect}\r\n                                    sx={{ color: '#fff', }}\r\n                                    className='select-stats'\r\n                                >\r\n                                    {selectStatsList && selectStatsList.map((item, index) => (\r\n                                        <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <Box sx={{ display: 'flex', gap: \"2%\" }}>\r\n                            <Box className='stats'>\r\n                                <img width='50px' height='50px' className='symbols' src='/marketplaceraca/raca/MetamonEgg.png' alt='Egg' />\r\n                                <TableContainer className='table-scroll' component={Paper}>\r\n                                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">#</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Price</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Count</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Time</p>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {listStats && listStats.map((item, index) => {\r\n                                                return (\r\n                                                    <TableRow key={index + 1}>\r\n                                                        <TableCell align=\"center\" sx={{ borderLeft: \"1px solid\" }}>{index + 1}</TableCell>\r\n                                                        <TableCell style={{ paddingLeft: '5px' }} align=\"center\">{numberWithCommas(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                                        <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                                        <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                                    </TableRow>)\r\n                                            })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                            <Box className='stats'>\r\n                                <img width='50px' height='50px' style={{ objectFit: 'contain' }} className='symbols' src={`/marketplaceraca/raca/${selectStatsList.filter(item => item.id === selectStats)[0].img}`} alt={selectStatsList.filter(item => item.id === selectStats)[0].name} />\r\n                                <TableContainer className='table-scroll' component={Paper}>\r\n                                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">#</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Price</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>{Number(selectStats) === 13 ? \"Info\" : \"Count\"}</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Time</p>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {selectedStatsList && selectedStatsList.map((item, index) => {\r\n                                                return (\r\n                                                    <TableRow key={index + 1}>\r\n                                                        <TableCell align=\"center\" sx={{ borderLeft: \"1px solid\" }}>{index + 1}</TableCell>\r\n                                                        <TableCell align=\"center\" style={{ paddingLeft: '1px' }}>{millify(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                                        {Number(selectStats) === 13 ? (\r\n                                                            <TableCell className=\"info-metamon-cell\" padding='none'>\r\n                                                                <Typography sx={{ color: '#fff', fontSize: '12px' }}>{item.level}</Typography>\r\n                                                                <Typography sx={{ color: '#fff', fontSize: '12px' }}>{item.score}</Typography>\r\n                                                            </TableCell>\r\n\r\n                                                        ) : (\r\n                                                            <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n\r\n                                                        )}\r\n                                                        <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                                    </TableRow>)\r\n                                            })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                    </Box>\r\n\r\n\r\n                </div>\r\n                {/* <div id=\"xike\" style={{ transform: 'translateY(10%)' }}>\r\n                    <p>Xìke Captain</p>\r\n                    <img alt=\"Xike\" src=\"/marketplaceraca/raca/xike.png\" />\r\n                </div> */}\r\n            </Box>\r\n            <Box className=\"cards\">\r\n                {MetamonR &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={MetamonR} />\r\n                    </Box>}\r\n\r\n                {BigGreen &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={BigGreen} />\r\n                    </Box>}\r\n\r\n                {MMLand &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={MMLand} />\r\n                    </Box>}\r\n\r\n                {kissUpLand &&\r\n                    <Box className=\"card loading\"><Card nft={kissUpLand} />\r\n                    </Box>}\r\n            </Box>\r\n            <StatsChart />\r\n        </Box>\r\n\r\n    );\r\n}\r\nexport default NFTs;","import { useEffect, useState } from 'react';\r\n\r\nimport { MenuItem, FormControl, Select, TextField, Box, Button, Container } from '@mui/material'\r\nimport { handleArrange, handleFilters } from '../../app/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const InputSelect = ({ handleConfirm }) => {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.filters)\r\n    const myStorage = window.localStorage;\r\n    const [arrange, setArrange] = useState(filters.arrange);\r\n    const [minScore, setMinScore] = useState(filters.minScore);\r\n    const [level, setLevel] = useState(filters.level);\r\n\r\n\r\n    const handleLevelChange = (e) => {\r\n        setLevel(e.target.value);\r\n    }\r\n\r\n    const handleMinScoreChange = (e) => {\r\n        setMinScore(e.target.value);\r\n    }\r\n\r\n    const ArrangeChange = (event) => {\r\n        setArrange(event.target.value);\r\n        dispatch(handleArrange(event.target.value));\r\n\r\n    };\r\n    const ConfirmHandle = () => {\r\n        dispatch(handleFilters({ minScore, level }));\r\n        setArrange(0)\r\n        handleConfirm(minScore, level);\r\n        myStorage.setItem('metamon', JSON.stringify({\r\n            score: minScore,\r\n            levelMetamon: level\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='lg xl' className='container' sx={{ margin: '20px 0px 0px 0px', marginTop: '20px', color: '#fff', }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                alignItems: 'end',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <TextField value={minScore} onChange={handleMinScoreChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"min-score\" label=\"Min score\" variant=\"standard\" type='number' autoComplete=\"new-password\"\r\n                />\r\n                <TextField value={level} onChange={handleLevelChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"level\" label=\"Level\" variant=\"standard\" type='number' autoComplete=\"new-password\"\r\n                />\r\n                <Button sx={{ height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={ConfirmHandle}>Confirm</Button>\r\n            </Box>\r\n            <Box sx={{\r\n                textAlign: 'center',\r\n                // transform: 'translateX(-85px)'\r\n            }}>\r\n                <FormControl className='select-metamon' style={{ margin: '20px 0' }}>\r\n                    <Select\r\n                        size='small'\r\n                        labelId=\"select\"\r\n                        id=\"filter\"\r\n                        value={arrange}\r\n                        onChange={ArrangeChange}\r\n                        sx={{ color: '#fff', }}\r\n                    >\r\n                        <MenuItem value={0}>Lowest Price</MenuItem>\r\n                        <MenuItem value={1}>Highest Level</MenuItem>\r\n                        <MenuItem value={2}>Highest Score</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\r\nimport { InputSelect } from \"./InputSelect\";\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nimport '../../styles/metamon.css'\r\nimport '../../styles/nfts.css'\r\nimport { handleArrange } from \"../../app/actions\";\r\n\r\n\r\nconst getData = (minScore = 315, level = 1, pageNo = 1) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?saleType&category=13&tokenType&tokenId=-1&pageNo=${pageNo}&pageSize=100&sortBy=single_price&order=asc&min_level=${level}&max_level=60&min_score=${minScore}&max_score=`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nconst Metamon = () => {\r\n    const { minScore: stateMinScore, level:stateLevel, arrange } = useSelector(state => state.filters)\r\n\r\n    const [listMetamon, setListMetamon] = useState([])\r\n    const [listShow, setListShow] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const dispatch = useDispatch();\r\n    const { raca } = useSelector(state => state.price);\r\n\r\n    const getListMetamon = async (minScore = stateMinScore, level = stateLevel) => {\r\n        setLoading(true);\r\n        await getData(minScore, level, 1).then(async (res) => {\r\n            const data = res.data;\r\n            let listData = res.data.list\r\n            for (let i = 1; i <= Math.floor(data.total / 100); i++) {\r\n                const list = await getData(minScore, level, i + 1).then(res => res.data.list);\r\n                listData = listData.concat(list)\r\n                // console.log(listData)\r\n            }\r\n            setListMetamon(listData)\r\n        });\r\n        setLoading(false);\r\n\r\n    }\r\n    const handleListMetamon = (minScore, level) => {\r\n        // console.log(minScore, level)\r\n        setListMetamon([])\r\n        getListMetamon(minScore, level);\r\n        dispatch(handleArrange(0));\r\n    }\r\n    useEffect(() => {\r\n        handleListMetamon();\r\n    }, [])\r\n    useEffect(() => {\r\n        //Get list property\r\n        const sortBy = (filter) => {\r\n            return listMetamon.sort((a, b) => {\r\n                if (filter === 'fixed_price') {\r\n                    return Number(a[filter]) - Number(b[filter])\r\n                } else {\r\n                    return Number(b[filter]) - Number(a[filter])\r\n                }\r\n            });\r\n        }\r\n\r\n        switch (arrange) {\r\n            case 0:\r\n                setListShow(sortBy('fixed_price').slice(0, 10));\r\n                break;\r\n            case 1:\r\n                setListShow(sortBy('level').slice(0, 10));\r\n                break;\r\n            case 2:\r\n                setListShow(sortBy('score').slice(0, 10));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return () => {\r\n            setListShow([])\r\n        }\r\n    }, [listMetamon, arrange]);\r\n\r\n    return (\r\n        <Box sx={{ textAlign: 'left' }}>\r\n            <InputSelect handleConfirm={handleListMetamon} />\r\n            <TableContainer className='table-scroll metamon' component={Paper}>\r\n                <Table className='tablePrice ' aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                ID\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Score\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Level\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" sx={{ width: '25%' }}>\r\n                                Price\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {loading && (\r\n                            <TableRow >\r\n                                <TableCell sx={{ borderLeft: '2px solid' }} colSpan={6} align=\"center\">\r\n                                    <CircularProgress />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                        {listShow && listShow.map((metamon, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell align=\"center\" sx={{borderLeft:'1px solid'}}>{index + 1}</TableCell>\r\n                                    <TableCell id={`metamon-${index + 1}`} align=\"center\" sx={{ position: 'relative' }}>\r\n                                        <img width='50px' height='50px' src={metamon.image_url} alt='Metamon' />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">\r\n                                        <a href={`https://market.radiocaca.com/#/market-place/${metamon.id}`} target='_blank'\r\n                                            style={{ color: '#fff', textDecoration: 'none' }}\r\n                                            rel=\"noreferrer\"\r\n                                        >\r\n                                            {metamon.token_id}</a></TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.score}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.level}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{numberWithCommas(metamon.fixed_price)} (~{(raca * metamon.fixed_price).toFixed(2)})</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Metamon;\r\n\r\n","import {\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  handlePower,\r\n  handleSort,\r\n  handleFilterName,\r\n  handleTokenId,\r\n  addRarity,\r\n  removeRarity,\r\n  addAura,\r\n  removeAura,\r\n} from \"../../app/actions\";\r\n\r\nconst InputFilters = () => {\r\n  const { min, max } = useSelector(\r\n    (state) => state.filtersElemon\r\n  );\r\n  const [minPower, setMinPower] = useState(min);\r\n  const [maxPower, setMaxPower] = useState(max);\r\n  const listAura = [...Array(9).keys()];\r\n  const dispatch = useDispatch();\r\n\r\n  const listRarity = [\r\n    {\r\n      rarity: \"B\",\r\n      color: \"#7ebeff\",\r\n      textShadow: \"0 0 6px #4553ff\",\r\n    },\r\n    {\r\n      rarity: \"A\",\r\n      color: \"#83ffcb\",\r\n      textShadow: \"0 0 6px #45ffb0\",\r\n    },\r\n    {\r\n      rarity: \"S\",\r\n      color: \"#ff83fa\",\r\n      textShadow: \"0 0 6px #ff45d4\",\r\n    },\r\n    {\r\n      rarity: \"SS\",\r\n      color: \"#ffe283\",\r\n      textShadow: \"0 0 6px #eaff45\",\r\n    },\r\n    {\r\n      rarity: \"SSS\",\r\n      color: \"#ff8383\",\r\n      textShadow: \"0 0 6px #ff2424\",\r\n    },\r\n  ];\r\n\r\n  const handleMinPower = (event) => {\r\n    setMinPower(event.target.value);\r\n  };\r\n  const handleMaxPower = (event) => {\r\n    setMaxPower(event.target.value);\r\n  };\r\n  const handleSortPrice = (event) => {\r\n    dispatch(handleSort(event.target.value));\r\n  };\r\n  const handleName = (event) => {\r\n    dispatch(handleFilterName(event.target.value));\r\n  };\r\n  const handleSubmit = () => {\r\n    dispatch(handlePower({ minPower, maxPower }));\r\n  };\r\n  const changeTokenId = (e) => {\r\n    dispatch(handleTokenId(e.target?.value));\r\n  };\r\n  const handleRarity = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addRarity(e.target.value));\r\n    } else {\r\n      dispatch(removeRarity(e.target.value));\r\n    }\r\n  };\r\n  const handleAura = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addAura(e.target.value));\r\n    } else {\r\n      dispatch(removeAura(e.target.value));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMinPower(min);\r\n  }, [min]);\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filter-content\">\r\n        <div className=\"filter-top\">\r\n          <select onChange={handleSortPrice} className=\"market__select\">\r\n            <option value=\"0\">Lowest price</option>\r\n            <option value=\"1\">Highest price</option>\r\n            <option value=\"2\">Lowest Point</option>\r\n            <option value=\"3\">Highest Point</option>\r\n          </select>\r\n          <select onChange={(e) => handleName(e)} className=\"market__select\">\r\n            <option value=\"0\">Elemon name</option>\r\n            <option value=\"4\">Neikoo</option>\r\n            <option value=\"8\">Skurumi</option>\r\n            <option value=\"9\">RusMoonch</option>\r\n            <option value=\"10\">PoxArchies</option>\r\n            <option value=\"11\">Legolas</option>\r\n            <option value=\"12\">Mykasa</option>\r\n            <option value=\"15\">Hyugar</option>\r\n            <option value=\"16\">Inori</option>\r\n            <option value=\"22\">Kuroo</option>\r\n            <option value=\"17\">Elight</option>\r\n            <option value=\"20\">Finter</option>\r\n            <option value=\"21\">Ties</option>\r\n            <option value=\"26\">Hoorus</option>\r\n            <option value=\"6\">Raizer</option>\r\n            <option value=\"19\">Scary</option>\r\n            <option value=\"13\">Cokoner</option>\r\n          </select>\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <Box className=\"filters_expand\">\r\n              <Box className=\"filter_item\">\r\n                <Typography variant=\"h5\">Rarity</Typography>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className=\"checkbox_item rarity\"\r\n                >\r\n                  {listRarity.length &&\r\n                    listRarity.map((item, index) => (\r\n                      <FormControlLabel\r\n                        onChange={handleRarity}\r\n                        key={index}\r\n                        value={index + 1}\r\n                        control={\r\n                          <Checkbox\r\n                            sx={{\r\n                              color: item.color,\r\n                              \"&.Mui-checked\": {\r\n                                color: item.color,\r\n                              },\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item.rarity}\r\n                        labelPlacement=\"end\"\r\n                        sx={{ color: item.color, textShadow: item.textShadow }}\r\n                      />\r\n                    ))}\r\n                </FormControl>\r\n              </Box>\r\n              <Box className=\"filter_item\">\r\n                <Typography variant=\"h5\">Aura</Typography>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className=\"checkbox_item aura\"\r\n                >\r\n                  {listAura.map((item, index) => (\r\n                    <FormControlLabel\r\n                      key={index}\r\n                      onChange={handleAura}\r\n                      value={item + 1}\r\n                      control={\r\n                        <Checkbox\r\n                          sx={{\r\n                            color: \"#ffe283\",\r\n                            \"&.Mui-checked\": {\r\n                              color: \"#ffe283\",\r\n                            },\r\n                          }}\r\n                        />\r\n                      }\r\n                      label={\r\n                        <img\r\n                          width=\"35px\"\r\n                          alt=\"aura\"\r\n                          src={`https://app.elemon.io/assets/images/aura/quality_${item + 1\r\n                            }.png`}\r\n                        />\r\n                      }\r\n                      labelPlacement=\"end\"\r\n                    />\r\n                  ))}\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <input\r\n            onBlur={changeTokenId}\r\n            className=\"market__input\"\r\n            placeholder=\"Elemon Id\"\r\n            type=\"number\"\r\n          />\r\n\r\n          <Box className=\"filter_power\">\r\n            <TextField\r\n              value={minPower}\r\n              onChange={handleMinPower}\r\n              sx={{ width: 100, marginRight: \"0.5rem\" }}\r\n              id=\"min-power\"\r\n              label=\"Min\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              className=\"input_power min\"\r\n            />\r\n            <TextField\r\n              value={maxPower}\r\n              onChange={handleMaxPower}\r\n              sx={{ width: 100, marginRight: \"0.5rem\" }}\r\n              id=\"max-power\"\r\n              label=\"Max\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              className=\"input_power max\"\r\n            />\r\n            <Button\r\n              sx={{ height: \"100%\", color: \"#383838\", background: \"#fcc33c\" }}\r\n              variant=\"contained\"\r\n              onClick={handleSubmit}\r\n              className=\"btnConfirm_power\"\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputFilters;\r\n","import React from 'react';\r\nimport '../../styles/elemon.css';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\n\r\nconst InfoCard = ({ elemon }) => {\r\n    const rarity = ['B', 'A', 'S', 'SS', 'SSS'];\r\n    const classes = [\r\n        'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel', 'Fairy'\r\n    ]\r\n    const isOwner = elemon.ownerAddress === '0x10201091597635eC7b8e208306E6aDCC7c167925';\r\n    const URI = 'https://app.elemon.io';\r\n    const bodyPart = [elemon.bodyPart1, elemon.bodyPart2, elemon.bodyPart3, elemon.bodyPart4, elemon.bodyPart5, elemon.bodyPart6];\r\n\r\n    return (\r\n        <div className=\"character-item owner\">\r\n            <div className=\"head\">\r\n                <p className=\"id\">ID: {elemon.tokenId}</p>\r\n                <div className=\"character-type\">\r\n                    <img alt='' img-rarity=\"\" src={`${URI}/assets/images/rarity_${rarity[elemon.rarity - 1]}.png`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"img\">\r\n                    <div className=\"img-left\">\r\n                        <div className=\"icon\">\r\n                            <img alt='' src={`${URI}/assets/images/element/${classes[elemon.class - 1]}.png`} /></div>\r\n                        <p className=\"icon_text\">\r\n                            <span>\r\n                                <img alt='' src={`${URI}/assets/images/purity_${elemon.purity === 0 ? 'Hybrid' : 'Pure'}.png`} style={{ width: '100%' }} />\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <img  alt='' src={`https://statics.elemon.io/avatar/${elemon.baseCardId}/${elemon.baseCardId}_${bodyPart.join('_')}.png`} className=\"main\" />\r\n                    <div className={`img_aura quality_${elemon.quality}`}></div>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <p className=\"price\">\r\n                        <img  src={`${URI}/assets/images/busd_ticker.png`} width=\"40\" alt=\"\" />\r\n                        {elemon.lastPrice / 1000000000000000000} BUSD\r\n                    </p>\r\n                    <div className=\"element\">\r\n                        <div className=\"icon\">\r\n                            <img  src={`${URI}/assets/images/icon-power.png`} alt=\"\" />\r\n\r\n                        </div>\r\n                        <p className=\"element__name\" data-power=\"\">{numberWithCommas(elemon.point)}</p>\r\n                    </div>\r\n                    <a rel=\"noreferrer\" target='_blank' href={`https://app.elemon.io/elemon/${elemon.tokenId}`} className={`box__btn buy ${isOwner ? 'owner' : ''}`} type=\"button\">\r\n                        {isOwner ? 'My Elemon' : \"Info\"}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default InfoCard;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InputFilters from \"./InputFilters\";\r\nimport \"../../styles/elemon.css\";\r\nimport { Box, CircularProgress, Grid } from \"@mui/material\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst getElemonItem = (\r\n  pageNumber = 1,\r\n  pageSize = 20,\r\n  priceMode = 2,\r\n  baseCardId,\r\n  tokenId,\r\n  rarities,\r\n  classes,\r\n  purities\r\n) => {\r\n  return axios\r\n    .get(\r\n      `https://app.elemon.io/market/getElemonItems?pageNumber=${pageNumber}&pageSize=${pageSize}&positionType=2&priceMode=${priceMode}&baseCardId=&tokenId=&rarities=&classes=&purities=`\r\n    )\r\n    .then((res) => res.data, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    });\r\n};\r\nconst getElemonInfo = (listElemon) => {\r\n  const listTokenId = listElemon.map((item) => item.tokenId);\r\n  return axios\r\n    .get(\r\n      `https://app.elemon.io/elemon/GetElemonInfo?tokenId=${listTokenId?.join(\r\n        \",\"\r\n      )}`\r\n    )\r\n    .then((res) => res.data, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    })\r\n    .catch((error) => error);\r\n};\r\n\r\nconst Elemon = () => {\r\n  const [listElemon, setListElemon] = useState([]);\r\n  const [listElemonInfo, setListElemonInfo] = useState([]);\r\n  const [timeUpdated, setTimeUpdated] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [listFilter, setListFilter] = useState([]);\r\n  const { min, max, sort, name, tokenId, aura, rarity } = useSelector(\r\n    (state) => state.filtersElemon\r\n  );\r\n\r\n  const convertDateTime = () => {\r\n    const now = new Date();\r\n    setTimeUpdated(now.toLocaleString());\r\n  };\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getElemonItem(1, 100).then(async (res) => {\r\n        await getElemonItem(1, res.paging.totalCount).then((res) =>\r\n          setListElemon(res.data)\r\n        );\r\n      });\r\n    };\r\n    getData();\r\n    convertDateTime();\r\n\r\n    return () => {\r\n      setListElemon([]);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const getInfo = async () => {\r\n      setLoading(true);\r\n      const size = 250;\r\n      const lengthList = listElemon.length;\r\n      const loop =\r\n        lengthList % size === 0 ? lengthList / size : lengthList / size + 1;\r\n      for (let i = 1; i <= loop; i++) {\r\n        const amount =\r\n          lengthList % size !== 0 && lengthList - i * size < 0\r\n            ? (i - 1) * size + (lengthList % size)\r\n            : i * size;\r\n        await getElemonInfo(listElemon?.slice((i - 1) * size, amount)).then(\r\n          (res) => {\r\n            const listInfo = listElemon\r\n              .slice((i - 1) * size, amount)\r\n              .map((item, index) => {\r\n                return {\r\n                  ...item,\r\n                  point: res?.data[index]?.point,\r\n                };\r\n              });\r\n            setListElemonInfo((pre) => pre.concat(listInfo));\r\n          }\r\n        );\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    getInfo();\r\n    return () => {\r\n      setListElemonInfo([]);\r\n    };\r\n  }, [listElemon]);\r\n  useEffect(() => {\r\n    const filter = listElemonInfo\r\n      .filter((elemon) => {\r\n        if (tokenId) {\r\n          return elemon.tokenId === tokenId;\r\n        } else {\r\n          const checkPower = (power, type) => {\r\n            if (!power) return true;\r\n            return type === 1 ? elemon?.point >= power : elemon?.point <= power;\r\n          };\r\n\r\n          const checkName =\r\n            Number(name) !== 0 ? elemon.baseCardId === Number(name) : true;\r\n          const checkRarity =\r\n            rarity.length !== 0 ? rarity.includes(elemon.rarity) : true;\r\n          const checkAura =\r\n            aura.length !== 0 ? aura.includes(elemon.quality) : true;\r\n          return checkPower(min, 1) && checkPower(max, 2) && checkName && checkRarity && checkAura;\r\n        }\r\n      })\r\n      .sort((a, b) => {\r\n        switch (Number(sort)) {\r\n          case 0:\r\n            return a.lastPrice >= b.lastPrice ? 1 : -1;\r\n          case 1:\r\n            return a.lastPrice <= b.lastPrice ? 1 : -1;\r\n          case 2:\r\n            return a.point >= b.point ? 1 : -1;\r\n          case 3:\r\n            return a.point <= b.point ? 1 : -1;\r\n          default:\r\n            return 0;\r\n        }\r\n      });\r\n\r\n    setListFilter(filter);\r\n    return () => {\r\n      setListFilter([]);\r\n    };\r\n  }, [loading, min, max, sort, name, tokenId, aura, rarity, listElemonInfo]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ textAlign: \"center\" }}>\r\n        <InputFilters />\r\n        <p style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }} className=\"timeUpdate\">{timeUpdated}</p>\r\n        <Grid container spacing={1} sx={{ boxShadow: 'none', justifyContent: 'center' }}>\r\n          {listFilter &&\r\n            listFilter?.slice(0, 100).map((item, index) => (\r\n              <Grid key={index} item xs={6} md={4} lg={2.2} >\r\n                <InfoCard elemon={item} />\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        {loading && <CircularProgress />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Elemon;\r\n","export const contractAddress = '0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16'\r\nexport const contractABI = [\r\n    {\r\n        \"type\": \"constructor\",\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"string\", \"name\": \"symbol\" },\r\n            { \"type\": \"string\", \"name\": \"name\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"transferFrom\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"from\" },\r\n            { \"type\": \"address\", \"name\": \"to\" },\r\n            { \"type\": \"uint256\", \"name\": \"value\" }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"balanceOf\",\r\n        \"constant\": true,\r\n        \"stateMutability\": \"view\",\r\n        \"payable\": false, \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"owner\" }\r\n        ],\r\n        \"outputs\": [\r\n            { \"type\": \"uint256\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"event\",\r\n        \"anonymous\": false,\r\n        \"name\": \"Transfer\",\r\n        \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"from\", \"indexed\": true },\r\n            { \"type\": \"address\", \"name\": \"to\", \"indexed\": true },\r\n            { \"type\": \"address\", \"name\": \"value\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"error\",\r\n        \"name\": \"InsufficientBalance\",\r\n        \"inputs\": [\r\n            { \"type\": \"account\", \"name\": \"owner\" },\r\n            { \"type\": \"uint256\", \"name\": \"balance\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"addPerson\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"addPeople\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"type\": \"tuple[]\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"getPerson\",\r\n        \"constant\": true,\r\n        \"stateMutability\": \"view\",\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"uint256\", \"name\": \"id\" }\r\n        ],\r\n        \"outputs\": [\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"event\",\r\n        \"anonymous\": false,\r\n        \"name\": \"PersonAdded\",\r\n        \"inputs\": [\r\n            { \"type\": \"uint256\", \"name\": \"id\", \"indexed\": true },\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\", \"indexed\": false },\r\n                    { \"type\": \"uint16\", \"name\": \"age\", \"indexed\": false }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];","import { createContext, useEffect, useState } from 'react'\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport Web3 from \"web3\";\r\nimport { ethers } from \"ethers\";\r\nimport { contractABI, contractAddress } from './constants'\r\nexport const AppContext = createContext();\r\n\r\nconst getEthereumProvider = () => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n    const signer = provider.getSigner();\r\n    const transactionContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n    console.log({\r\n        provider, signer, transactionContract\r\n    })\r\n}\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [appStatus, setAppStatus] = useState('loading')\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n    const provider = new WalletConnectProvider({\r\n        rpc: {\r\n            56: 'https://bsc-dataseed1.binance.org',\r\n            1: \"https://cloudflare-eth.com\",\r\n\r\n        },\r\n        // bridge: 'https://bridge.walletconnect.org',\r\n        qrcodeModalOptions: {\r\n            mobileLinks: [\r\n                \"metamask\",\r\n                \"trust\",\r\n                \"rainbow\",\r\n                \"argent\",\r\n                \"imtoken\",\r\n                \"pillar\",\r\n            ],\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        const checkIfWalletConnected = async () => {\r\n            if (!window?.ethereum && !currentAccount) return setAppStatus('noMetamask')\r\n            try {\r\n                if (currentAccount) {\r\n                    setAppStatus('connected');\r\n                    // getEthereumProvider()\r\n                    const web3 = new Web3(window.ethereum);\r\n                    const abi = contractABI;\r\n                    const address = '0xD40C03B8680D4b6a4d78FC3C6F6A28C854e94A79';\r\n                    const contract = new web3.eth.Contract(abi, address);\r\n                    // const totalSupply = await contract.methods.totalSupply().call();\r\n                    console.log(contract.methods);\r\n                    // console.log(contract)\r\n\r\n                } else {\r\n                    const addressArray = await window?.ethereum?.request({\r\n                        method: 'eth_accounts',\r\n                    })\r\n\r\n                    if (addressArray?.length > 0) {\r\n                        //connected\r\n                        setAppStatus('connected');\r\n                        setCurrentAccount(addressArray[0]);\r\n\r\n                    } else {\r\n                        // not connected\r\n                        setAppStatus('not-connected');\r\n                        setCurrentAccount();\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                alert(err)\r\n                console.log(err);\r\n                setAppStatus('error')\r\n            }\r\n        }\r\n        checkIfWalletConnected();\r\n        window?.ethereum?.on('accountsChanged', async () => {\r\n            checkIfWalletConnected();\r\n        })\r\n\r\n    }, [currentAccount])\r\n\r\n\r\n    const disconnectWC = async () => {\r\n        await provider.disconnect();\r\n        setAppStatus('not-connected');\r\n        setCurrentAccount();\r\n        window.w3 = undefined;\r\n    }\r\n    const walletConnect = async () => {\r\n        try {\r\n            await provider.enable();\r\n\r\n            //create Web3 instance\r\n            const web3 = new Web3(provider)\r\n            window.w3 = web3\r\n            const accounts = await web3.eth.getAccounts();\r\n            const account = accounts[0];\r\n            setCurrentAccount(account.toLowerCase())\r\n            console.log(account)\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n        }\r\n    }\r\n    const connectToWallet = async () => {\r\n        if (!window.ethereum && !currentAccount) return setAppStatus('noMetamask')\r\n\r\n        try {\r\n            setAppStatus('loading');\r\n\r\n            const addressArray = await window?.ethereum?.request({\r\n                method: 'eth_requestAccounts',\r\n            })\r\n            if (addressArray.length > 0) {\r\n                setAppStatus('connected')\r\n                setCurrentAccount(addressArray[0])\r\n            } else {\r\n                setAppStatus('not-connected')\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setAppStatus('error')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ appStatus, currentAccount, connectToWallet, walletConnect, disconnectWC }}>{children}</AppContext.Provider>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Table } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport '../../styles/market_history.css'\r\n\r\n\r\nconst MarketHistory = () => {\r\n  const { currentAccount } = useContext(AppContext);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [historyList, setHistoryList] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [totalList, setTotalList] = useState([])\r\n  const [totalBuy, setTotalBuy] = useState('');\r\n  const [totalSell, setTotalSell] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getMarketHistory = (pageNo, pageSize) => {\r\n      return axios(`https://market-api.radiocaca.com/users/${currentAccount}/histories?pageNo=${pageNo}&pageSize=${pageSize}`).then(res => res.data)\r\n    }\r\n    const getHistoryData = async () => {\r\n      let pageNo = 1;\r\n      let pageSize = 10;\r\n      const isMD = currentAccount.toLowerCase() === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16';\r\n      if (isMD) {\r\n        getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n          setLength(res.total)\r\n          const listDataMD = await getMarketHistory(1, res.total - 8).then(async (res) => {\r\n            const listDataMD2 = await getMarketHistory(2, res.total - 7).then(res => res.list);\r\n\r\n            return res.list.concat(listDataMD2)\r\n          });\r\n          setHistoryList(listDataMD)\r\n\r\n        })\r\n      } else {\r\n        const listData = await getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n          setLength(res.total);\r\n          return getMarketHistory(pageNo, res.total).then(res => res.list);\r\n        })\r\n        setHistoryList(listData);\r\n      }\r\n\r\n    }\r\n\r\n    if (currentAccount) {\r\n      setLoading(true)\r\n      getHistoryData();\r\n    }\r\n    return () => {\r\n      setHistoryList([])\r\n    }\r\n  }, [currentAccount])\r\n\r\n  useEffect(() => {\r\n\r\n    const listNFT = [];\r\n    const listTotal = [];\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let lengthList = length;\r\n    if (currentAccount === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n      lengthList--;\r\n    }\r\n    if (historyList.length === lengthList && historyList.length !== 0) {\r\n      historyList.forEach(item => {\r\n        if (item.token_name === 'Metamon#363811')\r\n          return;\r\n        if (!listNFT.includes(item.token_name)) {\r\n          listNFT.push(item.token_name)\r\n          listTotal.push({\r\n            token_name: item.token_name,\r\n            totalBuy: item.type === 'Buy' ? item.amount : 0,\r\n            totalSell: item.type === 'Sell' ? item.amount - item.fee : 0,\r\n            countBuy: item.type === 'Buy' ? item.count : 0,\r\n            countSell: item.type === 'Sell' ? item.count : 0,\r\n          })\r\n        } else {\r\n          if (item.type === 'Buy') {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalBuy += item.amount;\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countBuy += item.count;\r\n          }\r\n          else {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalSell += item.amount - item.fee\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countSell += item.count\r\n          }\r\n        }\r\n        if (item.type === 'Buy') {\r\n          buy += item.amount\r\n        }\r\n        else {\r\n          sell += item.amount - item.fee\r\n        }\r\n      })\r\n      setTotalBuy(buy);\r\n      setTotalSell(sell);\r\n      // console.log(listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0]?.totalSell)\r\n      if (currentAccount === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n        const getItem = listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0];\r\n        getItem.totalSell = 100000;\r\n        setTotalSell(prev => prev + getItem.totalSell)\r\n      }\r\n\r\n      setTotalList(listTotal.map(item => {\r\n        return {\r\n          ...item,\r\n          profit: item.totalSell - item.totalBuy\r\n        }\r\n      }))\r\n      setLoading(false);\r\n    }\r\n\r\n  }, [historyList,currentAccount])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sales\">\r\n        <TableContainer id=\"sales-section\" component={Paper}>\r\n          <Table sx={{ minWidth: 650, minHeight: 150 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell component='th' align='center'>NFT</TableCell>\r\n                <TableCell component='th' align=\"center\">\r\n                  <div>\r\n                    <p colSpan={2}>Buy</p>\r\n                    <div className='multiRow'>\r\n                      <p>Amount</p>\r\n                      <p>Count</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <div>\r\n                    <p>Sell</p>\r\n                    <div className='multiRow'>\r\n                      <p>Amount</p>\r\n                      <p>Count</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\">Profit</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalList.length !== 0 && totalList.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell component='th'>{item.token_name}</TableCell>\r\n\r\n                  <TableCell>\r\n                    <div className=\"multiRow\">\r\n                      <p>{numberWithCommas(Math.floor(item.totalBuy))}</p>\r\n                      <p>{numberWithCommas(Math.floor(item.countBuy))}</p>\r\n                    </div>\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <div className='multiRow'>\r\n                      <p>{numberWithCommas(Math.floor(item.totalSell))}</p>\r\n                      <p>{numberWithCommas(Math.floor(item.countSell))}</p>\r\n                    </div>\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(item.profit))}</TableCell>\r\n\r\n                </TableRow>\r\n              ))}\r\n              {totalList.length !== 0 && (\r\n                <TableRow >\r\n                  <TableCell component='th'>Total</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalBuy))}</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalSell))}</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalSell - totalBuy))}</TableCell>\r\n                </TableRow>\r\n              )}\r\n              <TableRow >\r\n                <TableCell colSpan={2} align='center' id='loading' style={{ textAlign: 'center' }}>\r\n                  {loading && <CircularProgress color=\"primary\" />}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarketHistory","import { Button } from '@mui/material';\r\nimport React, { useContext } from 'react'\r\nimport { AppContext } from '../context/AppContext'\r\n\r\nconst Metamask = () => {\r\n    const { appStatus, connectToWallet, currentAccount, walletConnect, disconnectWC } = useContext(AppContext);\r\n\r\n\r\n    const app = (status = appStatus) => {\r\n        switch (status) {\r\n            case 'connected':\r\n                return userLoggedIn\r\n\r\n            case 'not-connected':\r\n                return noUserFound\r\n\r\n            case 'noMetamask':\r\n                return noMetamaskFound\r\n\r\n            case 'error':\r\n                return error\r\n\r\n            default:\r\n                return loading\r\n        }\r\n    }\r\n\r\n    const noUserFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px' }} variant=\"contained\" onClick={() => connectToWallet()}>Connect to Wallet</Button>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px', marginTop: '10px' }} variant=\"contained\" onClick={() => walletConnect()}>\r\n                <img alt='' width='30px' style={{ marginRight: '5px' }} src='/marketplaceraca/wallet-connect.svg'></img>\r\n                Wallet Connect</Button>\r\n\r\n        </div>\r\n    )\r\n    const userLoggedIn = (\r\n        <div style={{ margin: '5px 0',lineBreak:'anywhere' }}>{currentAccount}\r\n            {window.w3 && <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '2px 10px' }} variant=\"contained\" onClick={() => disconnectWC()}>\r\n                Log out</Button>}\r\n        </div>\r\n    )\r\n    const noMetamaskFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <p> You must install Metamask, a <br /> virtual Ethereum wallet, in your browser</p>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px', marginTop: '10px' }} variant=\"contained\" onClick={() => walletConnect()}>\r\n                <img alt='' width='30px' style={{ marginRight: '5px' }} src='/marketplaceraca/wallet-connect.svg'></img>\r\n                Wallet Connect</Button>\r\n\r\n        </div>\r\n\r\n    )\r\n    const error = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/error.png' />\r\n            <p>An error occurred. Please try again later or use another browser</p>\r\n            {/* <p>{errLog}</p> */}\r\n        </div>\r\n    )\r\n    const loading = (\r\n        <div> Loading... </div>\r\n    )\r\n    return (\r\n        <div>{app(appStatus)}</div>\r\n    )\r\n}\r\n\r\nexport default Metamask","import React, { useContext, } from 'react'\r\nimport { Box, Button, Typography } from '@mui/material';\r\nimport '../../styles/statwallet.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToken } from '../../app/actions';\r\nimport { addDoc, collection, getDocs, where, updateDoc, doc, query } from 'firebase/firestore';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport axios from 'axios';\r\n\r\nexport const getInfoToken = async (token) => {\r\n    return await axios.get(`https://api.coingecko.com/api/v3/search?query=${token}`)\r\n        .then(res => {\r\n            if (res.data.coins.length !== 0) {\r\n                const coins = res.data.coins;\r\n                // console.log(coins)\r\n                return coins;\r\n            } else {\r\n                return axios.get(`https://api.pancakeswap.info/api/v2/tokens/${token\r\n                    }`).then(res => {\r\n                        const result = res.data.data\r\n                        return result;\r\n                    });\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nconst InfoToken = ({ token, setLoading }) => {\r\n    const { currentAccount } = useContext(AppContext);\r\n    const { listToken } = useSelector(state => state)\r\n    const infoToken = listToken.find(item => {\r\n        return item.tokenName?.toLowerCase() === token.symbol?.toLowerCase()\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const db = useSelector(state => state.db);\r\n    const addTokenToDB = async (token) => {\r\n        setLoading(true)\r\n        const q = query(collection(db, \"users\"), where('address', '==', currentAccount));\r\n        const querySnapshot = await getDocs(q);\r\n        if (querySnapshot.empty) {\r\n            await addDoc(collection(db, \"users\"), {\r\n                address: currentAccount.toLowerCase(),\r\n                tokens: [\r\n                    {\r\n                        address: token.address.toLowerCase(),\r\n                        timestamp: Date.now(),\r\n                        id: token.id\r\n                    }\r\n                ]\r\n            }).finally(() => setLoading(false));\r\n        } else {\r\n            querySnapshot.forEach(async (data) => {\r\n                if (!data.data().tokens.includes(token.address?.toLowerCase())) {\r\n                    const docRef = await doc(db, \"users\", data.id);\r\n                    await updateDoc(docRef, {\r\n                        tokens: [\r\n                            ...data.data().tokens,\r\n                            {\r\n                                address: token.address.toLowerCase(),\r\n                                timestamp: Date.now(),\r\n                                id: token.id\r\n                            }\r\n                        ]\r\n                    }).then(() => {\r\n                        console.log(token)\r\n                        dispatch(addToken(\r\n                            {\r\n                                ...token,\r\n                                token: token.address.toLowerCase(),\r\n                                id: token.id\r\n                            }))\r\n                    }).finally(() => setLoading(false));\r\n                } else {\r\n                    alert('Token is exist!')\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleAddUserDb = () => {\r\n        setLoading(true)\r\n        if (currentAccount) {\r\n            if (!token.address) {\r\n                axios.get(`https://api.coingecko.com/api/v3/coins/${token.id}`).then(res => {\r\n                    const data = res.data;\r\n                    const address = data.platforms['binance-smart-chain']\r\n                    if (address) {\r\n                        getInfoToken(address).then((async (res) => {\r\n                            if (res) {\r\n                                console.log(token.id)\r\n                                addTokenToDB({ ...res, address: address, id: token.id ?? '' })\r\n                            }\r\n                        }))\r\n                    }\r\n                }).finally(() => setLoading(false))\r\n            } else {\r\n                getInfoToken(token.address).then((async (res) => {\r\n                    if (res) {\r\n                        addTokenToDB({\r\n                            ...res, address: token.address, id: res.id ?? ''\r\n                        })\r\n                    }\r\n                })).finally(() => setLoading(false))\r\n            }\r\n        } else {\r\n            alert('No user')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\r\n            <Box sx={{ display: 'flex', width: '80%', gap: '5px', alignItems: 'center' }}>\r\n                <img alt='' width={'25px'} src={token.thumb ? token.large : '/marketplaceraca/help_outline.svg'} />\r\n                <Typography variant=\"h6\">{token.symbol}</Typography>\r\n                <Typography variant=\"h7\">{token.name}</Typography>\r\n            </Box>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(31, 199, 212)', padding: '5px 10px', width: '30%', borderRadius: 15 }} variant=\"contained\" onClick={() => handleAddUserDb()} disabled={infoToken ? true : false}>Import</Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default InfoToken","import React from 'react'\r\nimport '../../styles/statwallet.css'\r\nimport { Box, Modal } from '@mui/material';\r\n\r\nconst ModalUI = ({ isOpen, setOpen, children, onClose }) => {\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        onClose();\r\n    }\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '25%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -22%)',\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #00000087',\r\n        boxShadow: 24,\r\n        borderRadius: 4,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n            <Box sx={style} id='modalUI'>\r\n                {children}\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalUI","import { CircularProgress, Box } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <Box sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\r\n            <CircularProgress color=\"primary\" />\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useEffect, useState } from 'react'\r\nimport { Box, Typography, TextField, Button } from '@mui/material';\r\nimport InfoToken, { getInfoToken } from './InfoToken';\r\nimport ModalUI from './ModalUI';\r\nimport Loading from '../Loading'\r\nconst ImportTokenModal = () => {\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [tokenInput, setTokenInput] = useState('');\r\n    const [tokenQuery, setTokenQuery] = useState();\r\n    const [invalidToken, setInvalidToken] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChangeInput = (e) => {\r\n        setTokenInput(e.target.value.toLowerCase());\r\n    }\r\n    const handleOpen = () => {\r\n        setIsOpenModal(prev => !prev);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setTokenInput('');\r\n        setTokenQuery();\r\n    }\r\n    useEffect(() => {\r\n        const bounceInput = setTimeout(() => {\r\n            if (tokenInput !== '') {\r\n                getInfoToken(tokenInput).then(res => {\r\n                    if (res.length !== 0 && res.length !== undefined) {\r\n                        setInvalidToken(false)\r\n                        setTokenQuery([...res])\r\n                        // console.log(res?.length)\r\n                    } else {\r\n                        setInvalidToken(false)\r\n                        setTokenQuery([{\r\n                            ...res,\r\n                            address: tokenInput\r\n                        }])\r\n                    }\r\n                }).catch(err => {\r\n                    setInvalidToken(false)\r\n                }).finally(() => setLoading(false));\r\n            } else {\r\n                setInvalidToken(false)\r\n                setLoading(false)\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            setTokenQuery()\r\n            setLoading(true)\r\n            clearTimeout(bounceInput)\r\n        }\r\n    }, [tokenInput])\r\n    return (\r\n        <React.StrictMode>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)' }} variant=\"contained\" onClick={handleOpen}>Import</Button>\r\n            <ModalUI isOpen={isOpenModal} setOpen={setIsOpenModal} onClose={handleClose}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" align='center' component=\"h2\">\r\n                    Import Token\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\r\n                    <TextField value={tokenInput} autoFocus onChange={(e) => handleChangeInput(e)} label=\"Token\" variant=\"outlined\" className='input-token' sx={{ mt: 2 }} />\r\n                    {tokenQuery && <Box sx={{ mt: 2, maxHeight: '200px', overflowY: 'auto', overflowX: 'hidden' }} className=\"list-token-query\">\r\n                        {tokenQuery.map((infoToken, index) => (\r\n                            <InfoToken key={index} token={infoToken} setLoading={setLoading} />)\r\n                        )}\r\n                    </Box>}\r\n                    {invalidToken && (\r\n                        <Typography variant=\"h6\" color=\"#d42d31\">Enter valid token address </Typography>\r\n                    )}\r\n                </Box>\r\n                {loading && (\r\n                    <Loading />\r\n                )}\r\n            </ModalUI>\r\n        </React.StrictMode>\r\n\r\n    )\r\n}\r\n\r\nexport default ImportTokenModal","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, TableSortLabel } from '@mui/material'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport millify from 'millify'\r\nimport React, { useState } from 'react'\r\nimport ModalUI from './ModalUI'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (orderBy === 'value') {\r\n\r\n    }\r\n    switch (orderBy) {\r\n        case 'value':\r\n            a[orderBy] = a.price * a.amount;\r\n            b[orderBy] = b.price * b.amount;\r\n            break;\r\n        case 'date':\r\n            if (new Date(b[orderBy]) < new Date(b[orderBy])) {\r\n                return -1;\r\n            }\r\n            return 1\r\n            // console.log(new Date(a[orderBy])> new Date(b[orderBy]))\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'date',\r\n        label: 'Date',\r\n    },\r\n    {\r\n        id: 'amount',\r\n        label: 'Amount',\r\n    },\r\n    {\r\n        id: 'price',\r\n        label: 'Price',\r\n    },\r\n    {\r\n        id: 'status',\r\n        label: 'Status',\r\n    },\r\n    {\r\n        id: 'value',\r\n        label: 'Value',\r\n    },\r\n]\r\nfunction EnhancedTableHead(props) {\r\n    const { order, orderBy, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            className='sort-icon'\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                            sx={{ margin: 0 }}\r\n                        >\r\n                            {headCell.label}\r\n\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n\r\n};\r\nconst TransactionsModal = ({ infoTransactions, setInfoTransactions }) => {\r\n    const [isOpen, setOpen] = useState(true)\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('date');\r\n    const { tokenName, listTransactions } = infoTransactions;\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    return (\r\n        <ModalUI isOpen={isOpen} setOpen={setOpen} onClose={setInfoTransactions}>\r\n            <Typography align='center'>{tokenName}'s Transactions</Typography>\r\n            <TableContainer id='table_transactions'>\r\n                <Table stickyHeader>\r\n                    <EnhancedTableHead\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(listTransactions, getComparator(order, orderBy))\r\n                            .map((row, index) => {\r\n                                return (\r\n                                    <TableRow key={index} >\r\n                                        <TableCell align='center'>{row.date}</TableCell>\r\n                                        <TableCell align='center'>{millify(row.amount, {\r\n                                            precision: 2,\r\n                                            decimalSeparator: \",\"\r\n                                        })}</TableCell>\r\n                                        <TableCell align='center'>{millify(row.price, {\r\n                                            precision: 5,\r\n                                            decimalSeparator: \",\"\r\n                                        })}</TableCell>\r\n                                        <TableCell align='center'>{row.status.toUpperCase()}</TableCell>\r\n\r\n                                        <TableCell align='center'>{millify(row.price * row.amount, {\r\n                                            precision: 2,\r\n                                            decimalSeparator: \",\"\r\n                                        })} $</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        </ModalUI>\r\n    )\r\n}\r\n\r\nexport default TransactionsModal","import React, { useContext, useEffect, useState } from 'react'\r\nimport Web3 from 'web3'\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Table, Button } from '@mui/material';\r\nimport { AppContext } from '../../context/AppContext'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//FireBase\r\nimport { collection, query, getDocs, where, updateDoc, doc } from \"firebase/firestore\"\r\nimport { addToken, clearListToken, removeToken } from '../../app/actions';\r\nimport { getInfoToken } from './InfoToken'\r\nimport millify from 'millify';\r\nimport ImportTokenModal from './ImportTokenModal';\r\nimport TransactionsModal from './TransactionsModal';\r\n\r\nconst StatWallet = () => {\r\n  const { currentAccount } = useContext(AppContext)\r\n  const [loading, setLoading] = useState(true);\r\n  const [listTransactions, setListTransactions] = useState({})\r\n  const [infoTransactions, setInfoTransactions] = useState();\r\n  const listToken = useSelector(state => state.listToken)\r\n  const prevLength = useSelector(state => state.prevLength)\r\n  const rpcUrl = 'https://bsc-dataseed1.binance.org:443'\r\n  const web3 = new Web3(rpcUrl);\r\n  const [listBalance, setListBalance] = useState([]);\r\n  const db = useSelector(state => state.db);\r\n  const dispatch = useDispatch();\r\n\r\n  const getTransaction = ({ tokenName, address, id }) => {\r\n    if (tokenName !== 'BNB') {\r\n      axios.get(`https://api.bscscan.com/api?module=account&action=tokentx&contractaddress=${address}&address=${currentAccount}&page=1&offset=10000&startblock=0&endblock=999999999&sort=asc&apikey=RWBIX4SRF8ZCSSDVHIM8YGSK5V65J9UNNN`).then(async (res) => {\r\n        const data = res.data.result;\r\n        let totalDeposit = 0;\r\n        let totalDepositPrice = 0;\r\n        let totalWithdraw = 0;\r\n        let totalWithdrawPrice = 0;\r\n        let startTime = data[0].timeStamp - 86400;\r\n        let endTime = data[data.length - 1].timeStamp;\r\n        const listTransactionsTemp = {};\r\n\r\n        listTransactionsTemp[tokenName] = []\r\n        let hashmapPrice;\r\n        if (id) {\r\n          hashmapPrice = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`).then(res => {\r\n            const hashmap = {};\r\n            const data = res.data.prices;\r\n            data.forEach((price) => {\r\n              const date = new Date(price[0]).toLocaleDateString()\r\n              hashmap[date] = price[1]\r\n            })\r\n            return hashmap;\r\n          }).catch((err) => console.log(err))\r\n        }\r\n        data?.forEach(transaction => {\r\n          const value = Number(Web3.utils.fromWei(transaction.value, 'ether'))\r\n          let getDateTransaction = new Date(transaction.timeStamp * 1000).toLocaleDateString();\r\n          const infoTransaction = {\r\n            amount:value,\r\n            date: getDateTransaction,\r\n            status: transaction.from === currentAccount ? 'out' : 'in',\r\n            \r\n          }\r\n          if (id) {\r\n            let index = 1;\r\n            while (hashmapPrice[getDateTransaction] === undefined && index <= 10) {\r\n              getDateTransaction = new Date((transaction.timeStamp - 0 + 86400) * 1000).toLocaleDateString()\r\n              index++;\r\n            }\r\n          }\r\n\r\n          infoTransaction.price = hashmapPrice ? hashmapPrice[getDateTransaction] : 0;\r\n          listTransactionsTemp[tokenName].push(infoTransaction)\r\n          if (transaction.from === currentAccount) {\r\n            totalWithdraw += value;\r\n            if (id)\r\n              totalWithdrawPrice += value * hashmapPrice[getDateTransaction];\r\n          } else {\r\n            totalDeposit += Number(Web3.utils.fromWei(transaction.value, 'ether'));\r\n            if (id)\r\n              totalDepositPrice += value * hashmapPrice[getDateTransaction];\r\n          }\r\n        })\r\n        setListTransactions(prev => {\r\n          return {\r\n            ...prev,\r\n            ...listTransactionsTemp\r\n          }\r\n        })\r\n        const balance = Number(totalDeposit.toFixed(4) - totalWithdraw.toFixed(4));\r\n\r\n        setListBalance(prev => {\r\n          return {\r\n            ...prev,\r\n            [tokenName]: {\r\n              totalWithdraw: totalWithdraw <= 0 ? totalWithdraw : Number(totalWithdraw).toFixed(4),\r\n              totalDeposit: totalDeposit <= 0 ? totalDeposit : Number(totalDeposit).toFixed(4),\r\n              balance: balance <= 0 ? Math.floor(balance) : balance.toFixed(4),\r\n              totalWithdrawPrice,\r\n              totalDepositPrice,\r\n            }\r\n          }\r\n        })\r\n\r\n      }).catch(err => {\r\n        console.log(err)\r\n      }).finally(() => setLoading(false))\r\n    }\r\n  }\r\n\r\n  const deleteToken = async (e) => {\r\n    let token;\r\n    if (e.target.parentNode.dataset.token) {\r\n      token = e.target.parentNode.dataset.token\r\n    } else {\r\n      token = e.target.dataset.token\r\n    }\r\n    const q = query(collection(db, 'users'), where('address', '==', currentAccount));\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach(async (docItem) => {\r\n      if (docItem.exists()) {\r\n        const result = docItem.data().tokens;\r\n        const listResult = result.filter(item => item.address !== token);\r\n        const docRef = await doc(db, \"users\", docItem.id);\r\n        await updateDoc(docRef, {\r\n          tokens: [\r\n            ...listResult\r\n          ]\r\n        }).then((res) => {\r\n          dispatch(removeToken(token));\r\n          setLoading(false)\r\n        }).finally(() => setLoading(false))\r\n      }\r\n    })\r\n  }\r\n  const showDetailTransaction = (e) => {\r\n    const tokenName = e.target.parentNode.dataset.name\r\n    setInfoTransactions({\r\n      tokenName,\r\n      listTransactions: [\r\n        ...listTransactions[tokenName]\r\n      ]\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(clearListToken());\r\n    if (currentAccount) {\r\n      const getDataFireBase = async () => {\r\n        const q = query(collection(db, \"users\"), where('address', '==', currentAccount));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists()) {\r\n            // dispatch(initTokens(doc.data().tokens))\r\n            const listTokens = doc.data().tokens;\r\n            if (listTokens.length !== 0) {\r\n              let limit = listTokens.length >= 4 ? 4 : listTokens.length;\r\n              let end = limit;\r\n              let start = end - limit;\r\n              // let flag = limit;\r\n              const loop = setInterval(() => {\r\n                for (let i = start; i < end; i++) {\r\n                  setLoading(true)\r\n                  getInfoToken(listTokens[i]?.address).then(async (res) => {\r\n                    const token = listTokens[i].address;\r\n                    dispatch(addToken({\r\n                      ...res,\r\n                      token,\r\n                      id: listTokens[i].id\r\n                    }))\r\n                  })\r\n                }\r\n                if (end === listToken.length) {\r\n                  clearInterval(loop)\r\n                }\r\n                start = end;\r\n                if (end + limit > listTokens.length) {\r\n                  end = listTokens.length;\r\n                } else {\r\n                  end += limit\r\n                }\r\n              }, 2000)\r\n              setLoading(false)\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      web3.eth.getBalance(currentAccount).then(res => {\r\n        const balanceFromWei = Web3.utils.fromWei(res, 'ether')\r\n        setListBalance(prev => {\r\n          return {\r\n            ...prev,\r\n            'BNB': {\r\n              balance: balanceFromWei <= 0 ? Math.abs(Number(balanceFromWei)) : Number(balanceFromWei).toFixed(5)\r\n            }\r\n          }\r\n        })\r\n      }).finally(() => setLoading(false));\r\n      if (listToken)\r\n        getDataFireBase();\r\n    }\r\n    return () => {\r\n      setListBalance([]);\r\n      setLoading(true)\r\n    }\r\n  }, [currentAccount])\r\n  useEffect(() => {\r\n    if (prevLength <= listToken.length && listToken.length !== 0) {\r\n      const length = listToken.length;\r\n      getTransaction(listToken[length - 1]);\r\n    }\r\n    return () => {\r\n      setLoading(true)\r\n    }\r\n  }, [listToken])\r\n  return (\r\n    <div className=\"PortfolioWallet\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <TableContainer sx={{ maxWidth: '650px' }} id=\"PortfolioWallet-section\" component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell component='th' align='center'>Token Name</TableCell>\r\n              <TableCell align=\"center\">Deposit</TableCell>\r\n              <TableCell align=\"center\">Withdraw</TableCell>\r\n              <TableCell align=\"center\">Balance</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {listBalance && listToken && (listToken.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component='th' data-name={item.tokenName}>{item.tokenName} {listTransactions[item.tokenName] ? (<Button className='button-detail' sx={{\r\n                  fontSize: \"12px\",\r\n                  padding: 0,\r\n                  justifyContent: \"center\",\r\n                }} onClick={(e) => showDetailTransaction(e)}>Details</Button>) : ''} </TableCell>\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.totalDeposit) ? millify(listBalance[item.tokenName]?.totalDeposit, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0} (~{listBalance[item.tokenName]?.totalDepositPrice ? millify(listBalance[item.tokenName]?.totalDepositPrice, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0})</TableCell>\r\n\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.totalWithdraw) ? millify(listBalance[item.tokenName]?.totalWithdraw, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0} (~{listBalance[item.tokenName]?.totalWithdrawPrice ? millify(listBalance[item.tokenName]?.totalWithdrawPrice, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0})</TableCell>\r\n\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.balance) && item.tokenName !== \"BNB\" ? millify(listBalance[item.tokenName]?.balance, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : (listBalance[item.tokenName]?.balance)}</TableCell>\r\n                <TableCell sx={{ padding: 0, width: '20px' }} align='center'>\r\n                  {index !== 0 && (\r\n                    <Button sx={{ minWidth: '20px', padding: '0px' }} data-token={item.address} onClick={(e) => deleteToken(e)}><img src='/marketplaceraca/delete_outline.svg' alt='' /></Button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            )))}\r\n            <TableRow >\r\n              <TableCell colSpan={5} align='center' style={{ textAlign: 'center', padding: '10px 0' }}>\r\n                <ImportTokenModal />\r\n              </TableCell>\r\n            </TableRow>\r\n            {loading && (\r\n              <TableRow >\r\n                <TableCell colSpan={5} align='center' style={{ textAlign: 'center' }}>\r\n                  <CircularProgress color=\"primary\" />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {infoTransactions && (\r\n        <TransactionsModal infoTransactions={infoTransactions} setInfoTransactions={setInfoTransactions}>\r\n\r\n        </TransactionsModal>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default StatWallet","\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDMPGSZM9TbhHyO_dnV5yXanp-XsDnCT9A\",\r\n    authDomain: \"portfolio-mind.firebaseapp.com\",\r\n    projectId: \"portfolio-mind\",\r\n    storageBucket: \"portfolio-mind.appspot.com\",\r\n    messagingSenderId: \"993307046762\",\r\n    appId: \"1:993307046762:web:a00d4f8dd7756c6d8a6b13\"\r\n};\r\nexport default firebaseConfig","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\n\r\nimport MarketHistory from './MarketHistory';\r\nimport Metamask from '../Metamask';\r\nimport StatWallet from './StatWallet';\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from '../../config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { initApp } from '../../app/actions';\r\nimport { getFirestore } from \"firebase/firestore\"\r\nconst Portfolio = () => {\r\n    const app = initializeApp(firebaseConfig);\r\n    const db = getFirestore(app)\r\n    const dispatch = useDispatch()\r\n    const { currentAccount } = useContext(AppContext);\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const transition = useTransition(isVisible, {\r\n        from: { x: -500, y: 10, opacity: 0 },\r\n        enter: { x: 0, y: 0, opacity: 1, display: 'block' },\r\n        leave: { x: 500, y: 10, opacity: 0, display: 'none' }\r\n    })\r\n    useEffect(() => {\r\n        dispatch(initApp(db));\r\n    }, [db])\r\n    const handleSwitch = () => {\r\n        setIsVisible(state => !state)\r\n    }\r\n    return (\r\n        <div className=\"portfolio\">\r\n            <Metamask />\r\n            {currentAccount && (\r\n                <React.StrictMode>\r\n                    <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px',marginBottom:'10px' }} variant=\"contained\" onClick={handleSwitch}>{isVisible ? \"Stat Raca\" : \"Portfolio\"}</Button>\r\n                    {transition((style, item) =>\r\n                        item ? <animated.div style={style}>\r\n                            <StatWallet />\r\n                        </animated.div> : <animated.div style={style}>\r\n                            <MarketHistory />\r\n                        </animated.div>\r\n                    )}\r\n                </React.StrictMode>\r\n            )}\r\n\r\n            {/* {currentAccount && <MarketHistory />}\r\n            {currentAccount && <StatWallet />} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import { Box } from '@mui/material';\r\n\r\nconst ImageAnimation = () => {\r\n   \r\n\r\n    return (\r\n        <Box style={{height:'150px',position:'relative'}}>\r\n            <img width={'150px'} src=\"/marketplaceraca/astronaut-1.png\" alt=\"\" id='astronaut' />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ImageAnimation","import { memo, useEffect, useRef, useState } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel';\r\nimport NFTs from './NFTs/NFTs';\r\nimport Metamon from './Metamon/Metamon'\r\nimport Elemon from './Elemon/Elemon'\r\nimport '../App.css'\r\nimport Portfolio from './Portfolio/Portfolio';\r\nimport { Button, Typography } from '@mui/material';\r\nimport ImageAnimation from './ImageAnimation';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nconst TabInfo = (props) => {\r\n    const { label, style, ...others } = props\r\n    return (\r\n        <Box className='tab-info'>\r\n            <img {...others} className={`icon-${label.toLowerCase()}`} />\r\n            <Typography style={style} sx={{ fontSize: '16px', fontWeight: '600' }}>{label}</Typography>\r\n        </Box>\r\n    )\r\n}\r\nconst HeaderTabs = () => {\r\n    const myStorage = window.localStorage;\r\n    const getTab = myStorage.getItem('tab') === undefined ? 0 : myStorage.getItem('tab');\r\n    const [value, setValue] = useState(Number(getTab));\r\n    const [isMute, setIsMute] = useState(true);\r\n    const [statusMute, setStatusMute] = useState(true)\r\n    const audioRef = useRef();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        myStorage.setItem('tab', newValue);\r\n    };\r\n    const handleChangeSound = () => {\r\n        const audioEl = audioRef?.current?.audioEl.current;\r\n        // audioEl.paused = !isMute\r\n        console.log(audioEl.paused)\r\n        if (audioEl.paused) {\r\n            audioEl.play()\r\n        } else {\r\n            audioEl.pause()\r\n        }\r\n        setIsMute(prev => !prev)\r\n    }\r\n    const onClickChangeSound = () => {\r\n        handleChangeSound();\r\n        setStatusMute(prev => !prev);\r\n    }\r\n    useEffect(() => {\r\n        const audioEl = audioRef?.current?.audioEl.current;\r\n        console.log(audioEl.paused)\r\n        const handlePressSpace = (event) => {\r\n            if (event.keyCode === 32 && document.body) {\r\n                onClickChangeSound()\r\n                event.preventDefault();\r\n            }\r\n        }\r\n        window.addEventListener('keydown', handlePressSpace)\r\n        return () => {\r\n            window.removeEventListener('keydown', handlePressSpace)\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if (!statusMute) {\r\n            window.addEventListener('blur', handleChangeSound)\r\n            window.addEventListener('focus', handleChangeSound)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('blur', handleChangeSound)\r\n            window.removeEventListener('focus', handleChangeSound)\r\n        }\r\n\r\n    }, [statusMute])\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <ImageAnimation />\r\n            <Button className='icon-muted' onClick={onClickChangeSound}><img width={35} src={`/marketplaceraca/${isMute ? 'mute.png' : 'sound.png'}`} /></Button>\r\n            <ReactAudioPlayer\r\n                src=\"/marketplaceraca/metamon-sound.mp3\"\r\n                \r\n                controls\r\n                loop\r\n                ref={audioRef}\r\n                style={{ display: 'none' }}\r\n            />\r\n            <Box id=\"tabs\" sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Tabs id=\"tabs-bar\" value={value} sx={{ color: '#ffffff', width: '600px' }} onChange={handleChange} centered>\r\n                    <Tab className=\"tab\" label={<TabInfo label='RACA' alt='raca' width='20px' src='/marketplaceraca/favicon.svg' />} {...a11yProps(0)} />\r\n                    <Tab className=\"tab\" label={<TabInfo label='METAMON' alt='metamon' width='40px' src='/marketplaceraca/raca/metamon-SR.png' />} {...a11yProps(1)} />\r\n                    <Tab className=\"tab\" label={<TabInfo label='ElEMON' alt='elemon' width='30px' src='/marketplaceraca/elemon-logo.png' />} {...a11yProps(2)} />\r\n                    <Tab className=\"tab\" label={<TabInfo label='STATISTICS' alt='sales' width='30px' src='/marketplaceraca/metamask.png' />} {...a11yProps(3)} />\r\n                </Tabs>\r\n            </Box>\r\n            {\r\n                value === 0 &&\r\n                (<TabPanel className='tab-panel' value={value} index={0}>\r\n                    <NFTs />\r\n                </TabPanel>)\r\n            }\r\n            {\r\n                value === 1 &&\r\n                (<TabPanel className='tab-panel' value={value} index={1}>\r\n                    <Metamon />\r\n                </TabPanel>)\r\n            }\r\n            {\r\n                value === 2 &&\r\n                (<TabPanel className='tab-panel' value={value} index={2}>\r\n                    <Elemon />\r\n                </TabPanel>)\r\n            }\r\n            {\r\n                value === 3 &&\r\n                (<TabPanel className='tab-panel' value={value} index={3}>\r\n                    <Portfolio />\r\n                </TabPanel>)\r\n            }\r\n\r\n\r\n\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default memo(HeaderTabs);","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './App.css';\r\nimport { updatePriceAuto } from './app/actions';\r\nimport HeaderTabs from './components/Tabs';\r\nimport axios from \"axios\"\r\nimport { AppProvider } from './context/AppContext';\r\n\r\nexport const log = (info) => {\r\n  console.log(info);\r\n}\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    const getPrice = async () => {\r\n      const { elmon, raca, btc } = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=radio-caca,elemon,bitcoin&vs_currencies=usd').then(res => {\r\n        return {\r\n          raca: res.data['radio-caca'].usd,\r\n          elmon: res.data['elemon'].usd,\r\n          btc: res.data['bitcoin'].usd,\r\n        }\r\n      });\r\n      const elcoin = await axios.get('https://api.pancakeswap.info/api/v2/tokens/0x092ffbc968203b652b08361adec75e275573f2db').then(res => Number(res.data.data.price).toFixed(8));\r\n      document.title = raca + \" - Marketplace RACA\"\r\n      dispatch(updatePriceAuto({ raca, elmon, elcoin, btc }))\r\n    }\r\n    getPrice()\r\n    const updatePrice = setInterval(async () => {\r\n      getPrice()\r\n    }, 20000)\r\n\r\n    return () => {\r\n      clearInterval(updatePrice)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"App\">\r\n      <AppProvider>\r\n        <HeaderTabs />\r\n      </AppProvider>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const myStorage = window.localStorage;\r\n\r\nconst listToken = [\r\n  {\r\n    tokenName: 'BNB',\r\n    address: '0xB8c77482e45F1F44dE1745F52C74426C631bDD52'\r\n  },\r\n  // {\r\n  //   tokenName: \"BUSD\",\r\n  //   address: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n  // },\r\n  // {\r\n  //   tokenName: \"RACA\",\r\n  //   address: '0x12BB890508c125661E03b09EC06E404bc9289040',\r\n  // },\r\n  // {\r\n  //   tokenName: \"ELMON\",\r\n  //   address: '0xE3233fdb23F1c27aB37Bd66A19a1f1762fCf5f3F',\r\n  // },\r\n  // {\r\n  //   tokenName: \"ELCOIN\",\r\n  //   address: '0x092FFBc968203B652B08361aDec75E275573F2db',\r\n  // }\r\n]\r\nconst initState = {\r\n  filters: {\r\n    minScore:\r\n      myStorage.getItem(\"metamon\") === undefined\r\n        ? 315 : JSON.parse(myStorage.getItem(\"metamon\"))?.score,\r\n    level:\r\n      myStorage.getItem(\"metamon\") === undefined\r\n        ? 20 : JSON.parse(myStorage.getItem(\"metamon\"))?.levelMetamon,\r\n    arrange: 0,\r\n  },\r\n  price: {\r\n    raca: 0,\r\n    elmon: 0,\r\n    elcoin: 0,\r\n    btc: 0,\r\n  },\r\n  filtersElemon: {\r\n    sort: 0,\r\n    name: 0,\r\n    tokenId: \"\",\r\n    rarity: [],\r\n    purity: [],\r\n    aura: [],\r\n    price: \"\",\r\n    min: \"\",\r\n    max: \"\",\r\n  },\r\n  tab: 0,\r\n  currentAccount: '',\r\n  listToken,\r\n  db: {},\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"handleFilters\":\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          minScore: action.payload.minScore,\r\n          level: action.payload.level,\r\n        },\r\n      };\r\n    case \"handleArrange\":\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          arrange: action.payload,\r\n        },\r\n      };\r\n    case \"handlePower\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          min: action.payload.min,\r\n          max: action.payload.max,\r\n        },\r\n      };\r\n    case \"handleSort\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          sort: action.payload,\r\n        },\r\n      };\r\n    case \"handleName\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          name: action.payload,\r\n        },\r\n      };\r\n    case \"handleTokenId\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          tokenId: action.payload,\r\n        },\r\n      };\r\n    case \"updatePrice\":\r\n      return {\r\n        ...state,\r\n        price: action.payload,\r\n      };\r\n    case \"elemon/addRarity\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          rarity: [...state.filtersElemon.rarity, action.payload],\r\n        },\r\n      };\r\n    case \"elemon/removeRarity\":\r\n      const listRarity = [...state.filtersElemon.rarity];\r\n      const positionRarity = listRarity.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          rarity: listRarity\r\n            .slice(0, positionRarity)\r\n            .concat(listRarity.slice(positionRarity + 1)),\r\n        },\r\n      };\r\n    case \"elemon/addAura\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          aura: [...state.filtersElemon.aura, action.payload],\r\n        },\r\n      };\r\n    case \"elemon/removeAura\":\r\n      const listAura = state.filtersElemon.aura;\r\n      const positionAura = listAura.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          aura: listAura\r\n            .slice(0, positionAura)\r\n            .concat(listAura.slice(positionAura + 1)),\r\n        },\r\n      };\r\n    case 'changeCurrentAccount':\r\n      return {\r\n        ...state,\r\n        currentAccount: action.payload,\r\n      }\r\n    case 'tokens/add':\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          ...state.listToken,\r\n          {\r\n            tokenName: action.payload.symbol,\r\n            address: action.payload.token,\r\n            price: action.payload.price,\r\n            id:action.payload?.id\r\n          },\r\n        ],\r\n        prevLength: state.listToken.length\r\n      }\r\n    case 'tokens/remove':\r\n      const newList = state.listToken.filter(token => token.address !== action.payload);\r\n      return {\r\n        ...state,\r\n        prevLength: state.listToken.length,\r\n        listToken: [\r\n          ...newList\r\n        ]\r\n      }\r\n    case 'initTokens':\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          ...state.listToken,\r\n          ...action.payload\r\n        ]\r\n      }\r\n    case 'clearListToken':\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          state.listToken[0]\r\n        ]\r\n      }\r\n    case 'initApp':\r\n      return {\r\n        ...state,\r\n        db: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import { createStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}