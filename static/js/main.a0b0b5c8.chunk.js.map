{"version":3,"sources":["app/actions.js","components/TabPanel.js","components/NFTs/Card.js","components/NFTs/SwapRaca.js","components/NFTs/NFTs.js","components/Metamon/InputSelect.js","components/Metamon/Metamon.js","components/Elemon/InputFilters.js","components/Elemon/InfoCard.js","components/Elemon/Elemon.js","context/AppContext.js","components/Portfolio/MarketHistory.js","components/Metamask.js","components/Portfolio/InfoToken.js","components/Portfolio/ModalUI.js","components/Loading.js","components/Portfolio/ImportTokenModal.js","components/Portfolio/TransactionsModal.js","components/Portfolio/StatWallet.js","config.js","components/Portfolio/Portfolio.js","components/Tabs.js","App.js","app/reducer.js","app/store.js","reportWebVitals.js","index.js"],"names":["handleArrange","arrange","type","payload","addToken","token","removeToken","TabPanel","props","children","value","index","other","role","hidden","id","sx","color","Box","span","Typography","component","Card","x","nft","name","image_url","fixed_price","raca","useSelector","state","price","className","alt","src","style","fontSize","fontWeight","lineHeight","whiteSpace","textOverflow","margin","toString","replace","toFixed","SwapRacaToUSD","useState","inputRaca","setInputRaca","usdPrice","setUsdPrice","handleChange","e","a","target","useEffect","onChange","getAPI","categoryId","size","axios","ConvertDDMM","datetime","toLocaleString","split","time","join","getStats","tokenId","getSellList","formDataPrams","formDataLogin","FormData","append","method","url","data","headers","then","res","accessToken","catch","err","console","log","numberWithCommas","getFormDataValhalla","formData","selectStatsList","img","NFTs","listMetamon","setListMetamon","listDiamond","setListDiamond","listEgg","setListEgg","listPotion","setListPotion","kissUpLand","setKissUpLand","BigGreen","setBigGreen","MetamonR","setMetamonR","MMLand","setMMLand","selectStats","setSelectStats","selectedStatsList","setSelectedStatsList","tokenPrice","setTokenPrice","timeUpdated","setTimeUpdated","listStats","setListStats","sellListValhalla","setSellListValhalla","setListStatsPotion","convertDateTime","now","Date","elmon","elcoin","btc","getData","Promise","all","list","shopOrderList","document","querySelector","classList","toggle","rerender","setInterval","clearInterval","SwapRaca","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","width","height","objectFit","TableBody","map","child","scope","millify","Math","floor","amount","display","justifyContent","padding","textTransform","FormControl","Select","labelId","item","MenuItem","gap","paddingLeft","count","timestamp","filter","InputSelect","handleConfirm","dispatch","useDispatch","filters","myStorage","window","localStorage","setArrange","minScore","setMinScore","level","setLevel","Container","marginTop","alignItems","TextField","marginRight","label","variant","autoComplete","Button","background","onClick","handleFilters","setItem","JSON","stringify","score","levelMetamon","event","pageNo","Metamon","stateMinScore","stateLevel","listShow","setListShow","loading","setLoading","getListMetamon","listData","i","total","concat","handleListMetamon","sortBy","sort","b","Number","slice","textAlign","borderLeft","colSpan","CircularProgress","metamon","position","href","textDecoration","rel","token_id","InputFilters","filtersElemon","min","max","minPower","setMinPower","maxPower","setMaxPower","listAura","Array","keys","listRarity","rarity","textShadow","handleRarity","checked","removeRarity","handleAura","removeAura","length","FormControlLabel","control","Checkbox","labelPlacement","onBlur","placeholder","InfoCard","elemon","isOwner","ownerAddress","URI","bodyPart","bodyPart1","bodyPart2","bodyPart3","bodyPart4","bodyPart5","bodyPart6","class","purity","baseCardId","quality","lastPrice","point","getElemonItem","pageNumber","pageSize","priceMode","get","getElemonInfo","listElemon","listTokenId","error","Elemon","setListElemon","listElemonInfo","setListElemonInfo","listFilter","setListFilter","aura","paging","totalCount","React","getInfo","lengthList","loop","listInfo","pre","checkPower","power","checkName","checkRarity","includes","checkAura","Grid","container","spacing","xs","md","lg","AppContext","createContext","AppProvider","appStatus","setAppStatus","currentAccount","setCurrentAccount","provider","WalletConnectProvider","rpc","qrcodeModalOptions","mobileLinks","checkIfWalletConnected","ethereum","request","addressArray","alert","on","disconnectWC","disconnect","w3","undefined","walletConnect","enable","web3","Web3","eth","getAccounts","accounts","account","toLowerCase","connectToWallet","Provider","MarketHistory","useContext","historyList","setHistoryList","setLength","totalList","setTotalList","totalBuy","setTotalBuy","totalSell","setTotalSell","getMarketHistory","getHistoryData","listDataMD2","listDataMD","listNFT","listTotal","buy","sell","forEach","token_name","countBuy","fee","countSell","push","getItem","prev","profit","minWidth","minHeight","Metamask","noUserFound","flexDirection","userLoggedIn","lineBreak","noMetamaskFound","status","app","getInfoToken","coins","InfoToken","infoToken","listToken","find","tokenName","symbol","db","addTokenToDB","q","query","collection","where","getDocs","querySnapshot","empty","addDoc","address","tokens","finally","doc","docRef","updateDoc","mt","thumb","large","borderRadius","platforms","disabled","ModalUI","isOpen","setOpen","onClose","Modal","open","top","left","transform","bgcolor","border","boxShadow","p","Loading","ImportTokenModal","isOpenModal","setIsOpenModal","tokenInput","setTokenInput","tokenQuery","setTokenQuery","invalidToken","setInvalidToken","bounceInput","setTimeout","clearTimeout","StrictMode","autoFocus","handleChangeInput","maxHeight","overflowY","overflowX","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","headCells","EnhancedTableHead","onRequestSort","headCell","sortDirection","TableSortLabel","active","direction","property","TransactionsModal","infoTransactions","setInfoTransactions","setOrder","setOrderBy","listTransactions","stickyHeader","row","date","precision","decimalSeparator","toUpperCase","StatWallet","setListTransactions","prevLength","listBalance","setListBalance","deleteToken","parentNode","dataset","docItem","exists","result","listResult","getDataFireBase","listTokens","limit","end","start","getBalance","balanceFromWei","utils","fromWei","balance","abs","totalDeposit","totalDepositPrice","totalWithdraw","totalWithdrawPrice","startTime","timeStamp","endTime","listTransactionsTemp","hashmap","prices","toLocaleDateString","hashmapPrice","transaction","getDateTransaction","infoTransaction","from","getTransaction","maxWidth","showDetailTransaction","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Portfolio","initializeApp","getFirestore","isVisible","setIsVisible","transition","useTransition","y","opacity","enter","leave","initApp","marginBottom","div","a11yProps","HeaderTabs","getTab","setValue","borderBottom","borderColor","Tabs","newValue","Tab","App","getPrice","usd","title","updatePrice","initState","parse","tab","rootReducer","action","positionRarity","indexOf","positionAura","newList","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a0b0b5c8.chunk.js","sourcesContent":["\r\nexport const handleFilters = ({ minScore, level }) => {\r\n    return {\r\n        type: 'handleFilters',\r\n        payload: {\r\n            minScore,\r\n            level\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleArrange = (arrange) => {\r\n    return {\r\n        type: 'handleArrange',\r\n        payload: arrange\r\n    }\r\n}\r\n\r\nexport const updatePriceAuto = (price) => {\r\n    return {\r\n        type: 'updatePrice',\r\n        payload: price,\r\n    }\r\n}\r\n\r\nexport const handlePower = ({ minPower, maxPower }) => {\r\n    return {\r\n        type: 'handlePower',\r\n        payload: {\r\n            min: minPower,\r\n            max: maxPower\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleSort = (sort) => {\r\n    return {\r\n        type: 'handleSort',\r\n        payload: sort,\r\n    }\r\n}\r\n\r\nexport const handleFilterName = (name) => {\r\n    return {\r\n        type: 'handleName',\r\n        payload: name,\r\n    }\r\n}\r\nexport const handleTokenId = (id) => {\r\n    return {\r\n        type: 'handleTokenId',\r\n        payload: id,\r\n    }\r\n}\r\nexport const addRarity = (id) => {\r\n    return {\r\n        type: 'elemon/addRarity',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const removeRarity = (id) => {\r\n    return {\r\n        type: 'elemon/removeRarity',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const addAura = (id) => {\r\n    return {\r\n        type: 'elemon/addAura',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const removeAura = (id) => {\r\n    return {\r\n        type: 'elemon/removeAura',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const changeCurrentAccount = (address) => {\r\n    return {\r\n        type: 'changeCurrentAccount',\r\n        payload: address,\r\n    }\r\n}\r\nexport const addToken = (token) => {\r\n    return {\r\n        type: 'tokens/add',\r\n        payload: token,\r\n    }\r\n}\r\nexport const removeToken = (token) => {\r\n    return {\r\n        type: 'tokens/remove',\r\n        payload: token,\r\n    }\r\n}\r\nexport const initTokens = (tokens) => {\r\n    return {\r\n        type: 'initTokens',\r\n        payload: tokens,\r\n    }\r\n}\r\nexport const initApp = (app) => {\r\n    return {\r\n        type: 'initApp',\r\n        payload: app,\r\n    }\r\n}\r\nexport const clearListToken = () => {\r\n    return {\r\n        type:'clearListToken'\r\n    }\r\n}\r\n\r\n\r\n","import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            sx={{ color: '#ffffff' }}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ span: 3 }}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TabPanel;","import { useSelector } from \"react-redux\";\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Card = (props) => {\r\n\r\n    const { name = \"undefined\", id = \"#0000\", image_url = '', fixed_price = '0000' } = props.nft;\r\n    const { raca } = useSelector(state => state.price)\r\n    return (\r\n        <div className='nft'>\r\n            <div className=\"imgBox\">\r\n                <img className='image-nft' alt={name} src={image_url || \"/marketplaceraca/nft.png\"} />\r\n            </div>\r\n            <div className=\"textBox\">\r\n                <p className='name-nft'>{name} #{id}</p>\r\n                <div className='separate'></div>\r\n                <div className='price'>\r\n                    <p style={{\r\n                        color: '#ffffff',\r\n                        fontSize: 20,\r\n                        fontWeight: 700,\r\n                        lineHeight: '32px',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        margin: '0'\r\n                    }}>Price</p>\r\n                    <p className='priceNum'>{`${numberWithCommas(fixed_price)} (~${(fixed_price * raca).toFixed(2)})`}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst SwapRacaToUSD = () => {\r\n    const [inputRaca, setInputRaca] = useState('');\r\n    const [usdPrice, setUsdPrice] = useState(0);\r\n\r\n    const handleChange = async (e) => {\r\n        setInputRaca(e.target.value);\r\n    }\r\n    const { raca } = useSelector(state => state.price)\r\n    useEffect(() => {\r\n        setUsdPrice(() => inputRaca * raca);\r\n    }, [inputRaca, raca])\r\n    return (\r\n        <div id='swap-raca'>\r\n            <input id=\"RACA\" type=\"number\" value={inputRaca} onChange={handleChange} />\r\n            <span> ~ </span>\r\n            <span id=\"USD\">{usdPrice} USD</span>\r\n        </div>\r\n    )\r\n}\r\nexport default SwapRacaToUSD;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SwapRacaToUSD from \"./SwapRaca\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, Typography, MenuItem, Select, FormControl } from '@mui/material';\r\nimport '../../styles/nfts.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport millify from \"millify\";\r\n\r\n\r\n\r\nconst getAPI = (categoryId = '', size = '') => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst ConvertDDMM = (datetime) => {\r\n    const [date,time] = datetime.toLocaleString().split(',');\r\n    return `${time.split(' ').join('')}`\r\n}\r\nconst getStats = (categoryId = '') => {\r\n    let tokenId;\r\n    if (categoryId === 15 || categoryId === 16) {\r\n        tokenId = 0\r\n    } else {\r\n        tokenId = -1\r\n    }\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=10&status=executed&tokenId=${tokenId}&category=${categoryId}`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst getSellList = (formDataPrams) => {\r\n    const formDataLogin = new FormData();\r\n    formDataLogin.append('address', \"0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16\");\r\n    formDataLogin.append('sign', \"0x44063b19d6cd4ce60cda4db25aade076e2206b3539f6f5a62237fb6c0ed31fe84e7770f66cc3e623cf520cdf353a116491af88f4c53894d424914888c677ac321c\");\r\n    formDataLogin.append('msg', \"LogIn-79a8ee53-dc8b-ef50-a811-086c474b1566\");\r\n    formDataLogin.append('network', \"1\");\r\n    formDataLogin.append('clientType', \"MetaMask\");\r\n\r\n    return axios({\r\n        method: 'POST',\r\n        url: 'https://metamon-api.radiocaca.com/usm-api/login',\r\n        data: formDataLogin,\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        }\r\n    }).then((res) => {\r\n        const data = res.data.data;\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'https://metamon-api.radiocaca.com/usm-api/shop-order/sellList',\r\n            data: formDataPrams,\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                \"accesstoken\": data.accessToken,\r\n            }\r\n        });\r\n    }).catch(err => console.log(err))\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nconst getFormDataValhalla = () => {\r\n    const formData = new FormData();\r\n    formData.append('address', '0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16')\r\n    formData.append('type', 8)\r\n    formData.append('orderType', 3)\r\n    formData.append('orderId', -1)\r\n    formData.append('pageSize', 5)\r\n    return formData;\r\n}\r\nconst selectStatsList = [\r\n    {\r\n        name: 'Metamon',\r\n        id: 13,\r\n        img: 'metamon.png'\r\n    },\r\n    {\r\n        name: 'Diamond Yellow',\r\n        id: 16,\r\n        img: 'DiamondYellow.png'\r\n    },\r\n    {\r\n        name: 'Potion',\r\n        id: 15,\r\n        img: 'potion.png'\r\n    },\r\n    {\r\n        name: 'Kiss-up State Land',\r\n        id: 20,\r\n        img: 'nft.png'\r\n    },\r\n    {\r\n        name: 'Musk USM Land',\r\n        id: 7,\r\n        img: 'nft.png'\r\n    },\r\n]\r\nconst NFTs = () => {\r\n    const [listMetamon, setListMetamon] = useState([]);\r\n    const [listDiamond, setListDiamond] = useState([]);\r\n    const [listEgg, setListEgg] = useState([]);\r\n    const [listPotion, setListPotion] = useState([]);\r\n    const [kissUpLand, setKissUpLand] = useState({});\r\n    const [BigGreen, setBigGreen] = useState({});\r\n    const [MetamonR, setMetamonR] = useState({});\r\n    const [MMLand, setMMLand] = useState({});\r\n    const [selectStats, setSelectStats] = useState(selectStatsList[0].id);\r\n    const [selectedStatsList, setSelectedStatsList] = useState();\r\n    const [tokenPrice, setTokenPrice] = useState(0);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [listStats, setListStats] = useState([]);\r\n    const [sellListValhalla, setSellListValhalla] = useState([]);\r\n    const [listStatsPotion, setListStatsPotion] = useState([]);\r\n\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    const handleChangeSelect = (e) => {\r\n        // console.log(e.target.value)\r\n        setSelectStats(e.target.value)\r\n    }\r\n    const { raca, elmon, elcoin, btc } = useSelector(state => state.price)\r\n    const getData = async () => (\r\n        Promise.all([\r\n            getAPI(13, 5).then(res =>\r\n                setListMetamon(res.data.list)\r\n            ),\r\n            getAPI(15, 5).then(res =>\r\n                setListPotion(res.data.list)\r\n            ),\r\n            getAPI(16, 5).then(res =>\r\n                setListDiamond(res.data.list)\r\n            ),\r\n            getAPI(17, 5).then(res =>\r\n                setListEgg(res.data.list)\r\n            ),\r\n            getStats(17).then(res =>\r\n                setListStats(res.data.list)\r\n            ),\r\n            getStats(15).then(res =>\r\n                setListStatsPotion(res.data.list)\r\n            ),\r\n            getSellList(getFormDataValhalla()).then(res =>\r\n                setSellListValhalla(res.data.data.shopOrderList)\r\n            ),\r\n            getAPI(20, 1).then(res => {\r\n                setKissUpLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(23, 1).then(res => {\r\n                setMetamonR(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(7, 1).then(res => {\r\n                setMMLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(46, 1).then(res => {\r\n                setBigGreen(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n        ])\r\n    )\r\n    useEffect(() => {\r\n        setTokenPrice(raca)\r\n    }, [raca])\r\n    useEffect(() => {\r\n        getData();\r\n        convertDateTime();\r\n\r\n        // \r\n        // }).then(function (response) {\r\n        //     console.log(response.data)\r\n        //     const formData1 = new FormData();\r\n        //     formData1.append('address', '0x769ba0cb0d89666f7506194d2cf416ea0f812e16')\r\n        //     axios({\r\n        //         method: 'POST',\r\n        //         url: 'https://metamon-api.radiocaca.com/usm-api/getBattleRecord',\r\n        //         data: formData1,\r\n        //         headers: {\r\n        //             \"accessToken\": response.data.data\r\n        //         }\r\n        //     }).then(function (response) {\r\n        //         console.log(response);\r\n        //     })\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error);\r\n        // });\r\n        const rerender = setInterval(() => {\r\n            getData();\r\n            convertDateTime();\r\n        }, 20000)\r\n\r\n        return () => {\r\n            setListMetamon([])\r\n            setListDiamond([])\r\n            setListEgg([])\r\n            setListPotion([])\r\n            setListStats([])\r\n            setKissUpLand({})\r\n            setTokenPrice(0)\r\n            clearInterval(rerender);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        // const getSelected = selectStatsList.filter(item=> item.id === selectStats);\r\n        getStats(selectStats, 10).then(res => setSelectedStatsList(res.data.list));\r\n        // setSelectedStats(getSelected)\r\n        return () => {\r\n\r\n        }\r\n    }, [selectStats])\r\n    return (\r\n        <div>\r\n            <div className=\"priceToken\">\r\n                <p className='tokenPrice'>RACA: {raca}</p>\r\n                <p className='tokenPrice'>ELMON: {elmon}</p>\r\n                <p className='tokenPrice'>ELCOIN: {elcoin}</p>\r\n                <p className='tokenPrice'>BTC: {numberWithCommas(btc)}</p>\r\n            </div>\r\n\r\n            <SwapRacaToUSD />\r\n            <p id='timeUpdated'>{timeUpdated}</p>\r\n            <div className='pricetable'>\r\n                <TableContainer className='table-scroll' component={Paper}>\r\n                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">#</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/metamon.png' alt='Metamon' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/MetamonEgg.png' alt='Egg' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img width='50px' height='50px' src='/marketplaceraca/DiamondYellow.png' alt='DiamondYellow' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/potion.png' alt='Potion' />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/valhalla.png' alt='Potion' />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {listEgg && listMetamon && listDiamond && listPotion && listEgg.map((child, index) => {\r\n                                return (\r\n                                    <TableRow key={index + 1}>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"center\">{millify(Math.floor(listMetamon[index]?.fixed_price))} (~{(tokenPrice * listMetamon[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listEgg[index]?.fixed_price))} (~{(tokenPrice * listEgg[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listDiamond[index]?.fixed_price))} (~{(tokenPrice * listDiamond[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(listPotion[index]?.fixed_price))} (~{(tokenPrice * listPotion[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                        <TableCell align=\"center\">{numberWithCommas(Math.floor(sellListValhalla[index]?.amount))} (~{(tokenPrice * sellListValhalla[index]?.amount).toFixed(2)})</TableCell>\r\n                                    </TableRow>)\r\n                            })}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div id='xike'>\r\n                    <p>Xìke Captain</p>\r\n                    <img alt='Xike' src='/marketplaceraca/xike.png' />\r\n                </div>\r\n            </div>\r\n            <Box className=\"stats-session\">\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', padding: '5px 12px' }}>\r\n                    <Typography style={{\r\n                        textTransform: 'uppercase',\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"larger\",\r\n                    }}>Stats</Typography>\r\n                    <FormControl className='select-stats' style={{ width: '150px' }}>\r\n                        <Select\r\n                            size='small'\r\n                            labelId=\"select\"\r\n                            id=\"filter\"\r\n                            value={selectStats}\r\n                            onChange={handleChangeSelect}\r\n                            sx={{ color: '#fff', }}\r\n                            className='select-stats'\r\n                        >\r\n                            {selectStatsList && selectStatsList.map((item, index) => (\r\n                                <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <Box sx={{ display: 'flex', gap: \"2%\" }}>\r\n                    <Box className='stats'>\r\n                        <img width='50px' height='50px' className='symbols' src='/marketplaceraca/MetamonEgg.png' alt='Egg' />\r\n                        <TableContainer className='table-scroll' component={Paper}>\r\n                            <Table className='tablePrice' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">#</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <p>Price</p>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <p>Count</p>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <p>Time</p>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {listStats && listStats.map((item, index) => {\r\n                                        return (\r\n                                            <TableRow key={index + 1}>\r\n                                                <TableCell align=\"center\" component='th' scope=\"row\">{index + 1}</TableCell>\r\n                                                <TableCell style={{ paddingLeft: '5px' }} align=\"center\">{numberWithCommas(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                                <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                            </TableRow>)\r\n                                    })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Box>\r\n                    <Box className='stats'>\r\n                        <img width='50px' height='50px' style={{ objectFit: 'contain' }} className='symbols' src={`/marketplaceraca/${selectStatsList.filter(item => item.id === selectStats)[0].img}`} alt={selectStatsList.filter(item => item.id === selectStats)[0].name} />\r\n                        <TableContainer className='table-scroll' component={Paper}>\r\n                            <Table className='tablePrice' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">#</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <p>Price</p>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <p>Count</p>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <p>Time</p>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {selectedStatsList && selectedStatsList.map((item, index) => {\r\n                                        return (\r\n                                            <TableRow key={index + 1}>\r\n                                                <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                                <TableCell align=\"center\" style={{ paddingLeft: '1px' }}>{millify(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                                <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                            </TableRow>)\r\n                                    })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Box>\r\n                </Box>\r\n\r\n            </Box>\r\n\r\n            <div className=\"cards\">\r\n                {MetamonR &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={MetamonR} />\r\n                    </div>}\r\n\r\n                {BigGreen &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={BigGreen} />\r\n                    </div>}\r\n\r\n                {MMLand &&\r\n                    <div className=\"card loading\">\r\n                        <Card nft={MMLand} />\r\n                    </div>}\r\n\r\n                {kissUpLand &&\r\n                    <div className=\"card loading\"><Card nft={kissUpLand} />\r\n                    </div>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default NFTs;","import { useEffect, useState } from 'react';\r\n\r\nimport { MenuItem, FormControl, Select, TextField, Box, Button, Container } from '@mui/material'\r\nimport { handleArrange, handleFilters } from '../../app/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const InputSelect = ({ handleConfirm }) => {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.filters)\r\n    const myStorage = window.localStorage;\r\n    const [arrange, setArrange] = useState(filters.arrange);\r\n    const [minScore, setMinScore] = useState(filters.minScore);\r\n    const [level, setLevel] = useState(filters.level);\r\n\r\n\r\n    const handleLevelChange = (e) => {\r\n        setLevel(e.target.value);\r\n    }\r\n\r\n    const handleMinScoreChange = (e) => {\r\n        setMinScore(e.target.value);\r\n    }\r\n\r\n    const ArrangeChange = (event) => {\r\n        setArrange(event.target.value);\r\n        dispatch(handleArrange(event.target.value));\r\n\r\n    };\r\n    const ConfirmHandle = () => {\r\n        dispatch(handleFilters({ minScore, level }));\r\n        setArrange(0)\r\n        handleConfirm(minScore, level);\r\n        myStorage.setItem('metamon', JSON.stringify({\r\n            score: minScore,\r\n            levelMetamon: level\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container sx={{ marginTop: '20px', color: '#fff', }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                alignItems: 'end'\r\n            }}>\r\n                <TextField value={minScore} onChange={handleMinScoreChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"min-score\" label=\"Min score\" variant=\"standard\" type='number' autoComplete=\"new-password\"\r\n                />\r\n                <TextField value={level} onChange={handleLevelChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"level\" label=\"Level\" variant=\"standard\" type='number' autoComplete=\"new-password\"\r\n                />\r\n                <Button sx={{ height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={ConfirmHandle}>Confirm</Button>\r\n            </Box>\r\n            <Box>\r\n                <FormControl className='select-metamon' style={{ margin: '20px 0' }}>\r\n                    <Select\r\n                        size='small'\r\n                        labelId=\"select\"\r\n                        id=\"filter\"\r\n                        value={arrange}\r\n                        onChange={ArrangeChange}\r\n                        sx={{ color: '#fff', }}\r\n                    >\r\n                        <MenuItem value={0}>Lowest Price</MenuItem>\r\n                        <MenuItem value={1}>Highest Level</MenuItem>\r\n                        <MenuItem value={2}>Highest Score</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\r\nimport { InputSelect } from \"./InputSelect\";\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nimport '../../styles/metamon.css'\r\nimport '../../styles/nfts.css'\r\nimport { handleArrange } from \"../../app/actions\";\r\n\r\n\r\nconst getData = (minScore = 315, level = 1, pageNo = 1) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?saleType&category=13&tokenType&tokenId=-1&pageNo=${pageNo}&pageSize=100&sortBy=single_price&order=asc&min_level=${level}&max_level=60&min_score=${minScore}&max_score=`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nconst Metamon = () => {\r\n    const { stateMinScore, stateLevel, arrange } = useSelector(state => state.filters)\r\n\r\n    const [listMetamon, setListMetamon] = useState([])\r\n    const [listShow, setListShow] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const dispatch = useDispatch();\r\n    const { raca } = useSelector(state => state.price);\r\n\r\n    const getListMetamon = async (minScore = stateMinScore, level = stateLevel) => {\r\n        setLoading(true);\r\n        await getData(minScore, level, 1).then(async (res) => {\r\n            const data = res.data;\r\n            let listData = res.data.list\r\n            for (let i = 1; i <= Math.floor(data.total / 100); i++) {\r\n                const list = await getData(minScore, level, i + 1).then(res => res.data.list);\r\n                listData = listData.concat(list)\r\n                // console.log(listData)\r\n            }\r\n            setListMetamon(listData)\r\n        });\r\n        setLoading(false);\r\n\r\n    }\r\n    const handleListMetamon = (minScore, level) => {\r\n        // console.log(minScore, level)\r\n        setListMetamon([])\r\n        getListMetamon(minScore, level);\r\n        dispatch(handleArrange(0));\r\n    }\r\n    useEffect(() => {\r\n        handleListMetamon();\r\n    }, [])\r\n    useEffect(() => {\r\n        //Get list property\r\n        const sortBy = (filter) => {\r\n            return listMetamon.sort((a, b) => {\r\n                if (filter === 'fixed_price') {\r\n                    return Number(a[filter]) - Number(b[filter])\r\n                } else {\r\n                    return Number(b[filter]) - Number(a[filter])\r\n                }\r\n            });\r\n        }\r\n\r\n        switch (arrange) {\r\n            case 0:\r\n                setListShow(sortBy('fixed_price').slice(0, 10));\r\n                break;\r\n            case 1:\r\n                setListShow(sortBy('level').slice(0, 10));\r\n                break;\r\n            case 2:\r\n                setListShow(sortBy('score').slice(0, 10));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return () => {\r\n            setListShow([])\r\n        }\r\n    }, [listMetamon, arrange]);\r\n\r\n    return (\r\n        <Box sx={{ textAlign: 'left' }}>\r\n            <InputSelect handleConfirm={handleListMetamon} />\r\n            <TableContainer className='table-scroll metamon' component={Paper}>\r\n                <Table className='tablePrice' aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                ID\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Score\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Level\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" sx={{ width: '25%' }}>\r\n                                Price\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {loading && (\r\n                            <TableRow >\r\n                                <TableCell sx={{ borderLeft: '2px solid' }} colSpan={6} align=\"center\">\r\n                                    <CircularProgress />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                        {listShow && listShow.map((metamon, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                    <TableCell id={`metamon-${index + 1}`} align=\"center\" component=\"th\" scope=\"row\" sx={{ position: 'relative' }}>\r\n                                        <img width='50px' height='50px' src={metamon.image_url} alt='Metamon' />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">\r\n                                        <a href={`https://market.radiocaca.com/#/market-place/${metamon.id}`} target='_blank'\r\n                                            style={{ color: '#fff', textDecoration: 'none' }}\r\n                                            rel=\"noreferrer\"\r\n                                        >\r\n                                            {metamon.token_id}</a></TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.score}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.level}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{numberWithCommas(metamon.fixed_price)} (~{(raca * metamon.fixed_price).toFixed(2)})</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Metamon;\r\n\r\n","import {\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  handlePower,\r\n  handleSort,\r\n  handleFilterName,\r\n  handleTokenId,\r\n  addRarity,\r\n  removeRarity,\r\n  addAura,\r\n  removeAura,\r\n} from \"../../app/actions\";\r\n\r\nconst InputFilters = () => {\r\n  const { min, max } = useSelector(\r\n    (state) => state.filtersElemon\r\n  );\r\n  const [minPower, setMinPower] = useState(min);\r\n  const [maxPower, setMaxPower] = useState(max);\r\n  const listAura = [...Array(9).keys()];\r\n  const dispatch = useDispatch();\r\n\r\n  const listRarity = [\r\n    {\r\n      rarity: \"B\",\r\n      color: \"#7ebeff\",\r\n      textShadow: \"0 0 6px #4553ff\",\r\n    },\r\n    {\r\n      rarity: \"A\",\r\n      color: \"#83ffcb\",\r\n      textShadow: \"0 0 6px #45ffb0\",\r\n    },\r\n    {\r\n      rarity: \"S\",\r\n      color: \"#ff83fa\",\r\n      textShadow: \"0 0 6px #ff45d4\",\r\n    },\r\n    {\r\n      rarity: \"SS\",\r\n      color: \"#ffe283\",\r\n      textShadow: \"0 0 6px #eaff45\",\r\n    },\r\n    {\r\n      rarity: \"SSS\",\r\n      color: \"#ff8383\",\r\n      textShadow: \"0 0 6px #ff2424\",\r\n    },\r\n  ];\r\n\r\n  const handleMinPower = (event) => {\r\n    setMinPower(event.target.value);\r\n  };\r\n  const handleMaxPower = (event) => {\r\n    setMaxPower(event.target.value);\r\n  };\r\n  const handleSortPrice = (event) => {\r\n    dispatch(handleSort(event.target.value));\r\n  };\r\n  const handleName = (event) => {\r\n    dispatch(handleFilterName(event.target.value));\r\n  };\r\n  const handleSubmit = () => {\r\n    dispatch(handlePower({ minPower, maxPower }));\r\n  };\r\n  const changeTokenId = (e) => {\r\n    dispatch(handleTokenId(e.target?.value));\r\n  };\r\n  const handleRarity = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addRarity(e.target.value));\r\n    } else {\r\n      dispatch(removeRarity(e.target.value));\r\n    }\r\n  };\r\n  const handleAura = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addAura(e.target.value));\r\n    } else {\r\n      dispatch(removeAura(e.target.value));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMinPower(min);\r\n  }, [min]);\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filter-content\">\r\n        <div className=\"filter-top\">\r\n          <select onChange={handleSortPrice} className=\"market__select\">\r\n            <option value=\"0\">Lowest price</option>\r\n            <option value=\"1\">Highest price</option>\r\n            <option value=\"2\">Lowest Point</option>\r\n            <option value=\"3\">Highest Point</option>\r\n          </select>\r\n          <select onChange={(e) => handleName(e)} className=\"market__select\">\r\n            <option value=\"0\">Elemon name</option>\r\n            <option value=\"4\">Neikoo</option>\r\n            <option value=\"8\">Skurumi</option>\r\n            <option value=\"9\">RusMoonch</option>\r\n            <option value=\"10\">PoxArchies</option>\r\n            <option value=\"11\">Legolas</option>\r\n            <option value=\"12\">Mykasa</option>\r\n            <option value=\"15\">Hyugar</option>\r\n            <option value=\"16\">Inori</option>\r\n            <option value=\"22\">Kuroo</option>\r\n            <option value=\"17\">Elight</option>\r\n            <option value=\"20\">Finter</option>\r\n            <option value=\"21\">Ties</option>\r\n            <option value=\"26\">Hoorus</option>\r\n            <option value=\"6\">Raizer</option>\r\n            <option value=\"19\">Scary</option>\r\n            <option value=\"13\">Cokoner</option>\r\n          </select>\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <Box className=\"filters_expand\">\r\n              <Box className=\"filter_item\">\r\n                <Typography variant=\"h5\">Rarity</Typography>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className=\"checkbox_item rarity\"\r\n                >\r\n                  {listRarity.length &&\r\n                    listRarity.map((item, index) => (\r\n                      <FormControlLabel\r\n                        onChange={handleRarity}\r\n                        key={index}\r\n                        value={index + 1}\r\n                        control={\r\n                          <Checkbox\r\n                            sx={{\r\n                              color: item.color,\r\n                              \"&.Mui-checked\": {\r\n                                color: item.color,\r\n                              },\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item.rarity}\r\n                        labelPlacement=\"end\"\r\n                        sx={{ color: item.color, textShadow: item.textShadow }}\r\n                      />\r\n                    ))}\r\n                </FormControl>\r\n              </Box>\r\n              <Box className=\"filter_item\">\r\n                <Typography variant=\"h5\">Aura</Typography>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className=\"checkbox_item aura\"\r\n                >\r\n                  {listAura.map((item, index) => (\r\n                    <FormControlLabel\r\n                      key={index}\r\n                      onChange={handleAura}\r\n                      value={item + 1}\r\n                      control={\r\n                        <Checkbox\r\n                          sx={{\r\n                            color: \"#ffe283\",\r\n                            \"&.Mui-checked\": {\r\n                              color: \"#ffe283\",\r\n                            },\r\n                          }}\r\n                        />\r\n                      }\r\n                      label={\r\n                        <img\r\n                          width=\"35px\"\r\n                          alt=\"aura\"\r\n                          src={`https://app.elemon.io/assets/images/aura/quality_${item + 1\r\n                            }.png`}\r\n                        />\r\n                      }\r\n                      labelPlacement=\"end\"\r\n                    />\r\n                  ))}\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <input\r\n            onBlur={changeTokenId}\r\n            className=\"market__input\"\r\n            placeholder=\"Elemon Id\"\r\n            type=\"number\"\r\n          />\r\n\r\n          <Box className=\"filter_power\">\r\n            <TextField\r\n              value={minPower}\r\n              onChange={handleMinPower}\r\n              sx={{ width: 100, marginRight: \"0.5rem\" }}\r\n              id=\"min-power\"\r\n              label=\"Min\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              className=\"input_power min\"\r\n            />\r\n            <TextField\r\n              value={maxPower}\r\n              onChange={handleMaxPower}\r\n              sx={{ width: 100, marginRight: \"0.5rem\" }}\r\n              id=\"max-power\"\r\n              label=\"Max\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              className=\"input_power max\"\r\n            />\r\n            <Button\r\n              sx={{ height: \"100%\", color: \"#383838\", background: \"#fcc33c\" }}\r\n              variant=\"contained\"\r\n              onClick={handleSubmit}\r\n              className=\"btnConfirm_power\"\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputFilters;\r\n","import React from 'react';\r\nimport '../../styles/elemon.css';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\n\r\nconst InfoCard = ({ elemon }) => {\r\n    const rarity = ['B', 'A', 'S', 'SS', 'SSS'];\r\n    const classes = [\r\n        'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel', 'Fairy'\r\n    ]\r\n    const isOwner = elemon.ownerAddress === '0x10201091597635eC7b8e208306E6aDCC7c167925';\r\n    const URI = 'https://app.elemon.io';\r\n    const bodyPart = [elemon.bodyPart1, elemon.bodyPart2, elemon.bodyPart3, elemon.bodyPart4, elemon.bodyPart5, elemon.bodyPart6];\r\n\r\n    return (\r\n        <div className=\"character-item owner\">\r\n            <div className=\"head\">\r\n                <p className=\"id\">ID: {elemon.tokenId}</p>\r\n                <div className=\"character-type\">\r\n                    <img alt='' img-rarity=\"\" src={`${URI}/assets/images/rarity_${rarity[elemon.rarity - 1]}.png`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"img\">\r\n                    <div className=\"img-left\">\r\n                        <div className=\"icon\">\r\n                            <img alt='' src={`${URI}/assets/images/element/${classes[elemon.class - 1]}.png`} /></div>\r\n                        <p className=\"icon_text\">\r\n                            <span>\r\n                                <img alt='' src={`${URI}/assets/images/purity_${elemon.purity === 0 ? 'Hybrid' : 'Pure'}.png`} style={{ width: '100%' }} />\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <img  alt='' src={`https://statics.elemon.io/avatar/${elemon.baseCardId}/${elemon.baseCardId}_${bodyPart.join('_')}.png`} className=\"main\" />\r\n                    <div className={`img_aura quality_${elemon.quality}`}></div>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <p className=\"price\">\r\n                        <img  src={`${URI}/assets/images/busd_ticker.png`} width=\"40\" alt=\"\" />\r\n                        {elemon.lastPrice / 1000000000000000000} BUSD\r\n                    </p>\r\n                    <div className=\"element\">\r\n                        <div className=\"icon\">\r\n                            <img  src={`${URI}/assets/images/icon-power.png`} alt=\"\" />\r\n\r\n                        </div>\r\n                        <p className=\"element__name\" data-power=\"\">{numberWithCommas(elemon.point)}</p>\r\n                    </div>\r\n                    <a rel=\"noreferrer\" target='_blank' href={`https://app.elemon.io/elemon/${elemon.tokenId}`} className={`box__btn buy ${isOwner ? 'owner' : ''}`} type=\"button\">\r\n                        {isOwner ? 'My Elemon' : \"Info\"}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default InfoCard;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InputFilters from \"./InputFilters\";\r\nimport \"../../styles/elemon.css\";\r\nimport { Box, CircularProgress, Grid } from \"@mui/material\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst getElemonItem = (\r\n  pageNumber = 1,\r\n  pageSize = 20,\r\n  priceMode = 2,\r\n  baseCardId,\r\n  tokenId,\r\n  rarities,\r\n  classes,\r\n  purities\r\n) => {\r\n  return axios\r\n    .get(\r\n      `https://app.elemon.io/market/getElemonItems?pageNumber=${pageNumber}&pageSize=${pageSize}&positionType=2&priceMode=${priceMode}&baseCardId=&tokenId=&rarities=&classes=&purities=`\r\n    )\r\n    .then((res) => res.data, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    });\r\n};\r\nconst getElemonInfo = (listElemon) => {\r\n  const listTokenId = listElemon.map((item) => item.tokenId);\r\n  return axios\r\n    .get(\r\n      `https://app.elemon.io/elemon/GetElemonInfo?tokenId=${listTokenId?.join(\r\n        \",\"\r\n      )}`\r\n    )\r\n    .then((res) => res.data, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    })\r\n    .catch((error) => error);\r\n};\r\n\r\nconst Elemon = () => {\r\n  const [listElemon, setListElemon] = useState([]);\r\n  const [listElemonInfo, setListElemonInfo] = useState([]);\r\n  const [timeUpdated, setTimeUpdated] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [listFilter, setListFilter] = useState([]);\r\n  const { min, max, sort, name, tokenId, aura, rarity } = useSelector(\r\n    (state) => state.filtersElemon\r\n  );\r\n\r\n  const convertDateTime = () => {\r\n    const now = new Date();\r\n    setTimeUpdated(now.toLocaleString());\r\n  };\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getElemonItem(1, 100).then(async (res) => {\r\n        await getElemonItem(1, res.paging.totalCount).then((res) =>\r\n          setListElemon(res.data)\r\n        );\r\n      });\r\n    };\r\n    getData();\r\n    convertDateTime();\r\n\r\n    return () => {\r\n      setListElemon([]);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const getInfo = async () => {\r\n      setLoading(true);\r\n      const size = 250;\r\n      const lengthList = listElemon.length;\r\n      const loop =\r\n        lengthList % size === 0 ? lengthList / size : lengthList / size + 1;\r\n      for (let i = 1; i <= loop; i++) {\r\n        const amount =\r\n          lengthList % size !== 0 && lengthList - i * size < 0\r\n            ? (i - 1) * size + (lengthList % size)\r\n            : i * size;\r\n        await getElemonInfo(listElemon?.slice((i - 1) * size, amount)).then(\r\n          (res) => {\r\n            const listInfo = listElemon\r\n              .slice((i - 1) * size, amount)\r\n              .map((item, index) => {\r\n                return {\r\n                  ...item,\r\n                  point: res?.data[index]?.point,\r\n                };\r\n              });\r\n            setListElemonInfo((pre) => pre.concat(listInfo));\r\n          }\r\n        );\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    getInfo();\r\n    return () => {\r\n      setListElemonInfo([]);\r\n    };\r\n  }, [listElemon]);\r\n  useEffect(() => {\r\n    const filter = listElemonInfo\r\n      .filter((elemon) => {\r\n        if (tokenId) {\r\n          return elemon.tokenId === tokenId;\r\n        } else {\r\n          const checkPower = (power, type) => {\r\n            if (!power) return true;\r\n            return type === 1 ? elemon?.point >= power : elemon?.point <= power;\r\n          };\r\n\r\n          const checkName =\r\n            Number(name) !== 0 ? elemon.baseCardId === Number(name) : true;\r\n          const checkRarity =\r\n            rarity.length !== 0 ? rarity.includes(elemon.rarity) : true;\r\n          const checkAura =\r\n            aura.length !== 0 ? aura.includes(elemon.quality) : true;\r\n          return checkPower(min, 1) && checkPower(max, 2) && checkName && checkRarity && checkAura;\r\n        }\r\n      })\r\n      .sort((a, b) => {\r\n        switch (Number(sort)) {\r\n          case 0:\r\n            return a.lastPrice >= b.lastPrice ? 1 : -1;\r\n          case 1:\r\n            return a.lastPrice <= b.lastPrice ? 1 : -1;\r\n          case 2:\r\n            return a.point >= b.point ? 1 : -1;\r\n          case 3:\r\n            return a.point <= b.point ? 1 : -1;\r\n          default:\r\n            return 0;\r\n        }\r\n      });\r\n\r\n    setListFilter(filter);\r\n    return () => {\r\n      setListFilter([]);\r\n    };\r\n  }, [loading, min, max, sort, name, tokenId,aura,rarity,listElemonInfo]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ textAlign: \"center\" }}>\r\n        <InputFilters />\r\n        <p className=\"timeUpdate\">{timeUpdated}</p>\r\n        <Grid container spacing={1}>\r\n          {listFilter &&\r\n            listFilter?.slice(0, 100).map((item, index) => (\r\n              <Grid key={index} item xs={6} md={4} lg={2.2}>\r\n                <InfoCard elemon={item} />\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        {loading && <CircularProgress />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Elemon;\r\n","import { createContext, useEffect, useState } from 'react'\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport Web3 from \"web3\"\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [appStatus, setAppStatus] = useState('loading')\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n    const provider = new WalletConnectProvider({\r\n        rpc: {\r\n            56: 'https://matic-mainnet.chainstacklabs.com',\r\n            1: \"https://cloudflare-eth.com\",\r\n\r\n        },\r\n        // bridge: 'https://bridge.walletconnect.org',\r\n        qrcodeModalOptions: {\r\n            mobileLinks: [\r\n                \"metamask\",\r\n                \"trust\",\r\n                \"rainbow\",\r\n                \"argent\",\r\n                \"imtoken\",\r\n                \"pillar\",\r\n            ],\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        const checkIfWalletConnected = async () => {\r\n            if (!window?.ethereum && !currentAccount) return setAppStatus('noMetamask')\r\n            try {\r\n                if (currentAccount) {\r\n                    setAppStatus('connected');\r\n\r\n                } else {\r\n                    const addressArray = await window?.ethereum?.request({\r\n                        method: 'eth_accounts',\r\n                    })\r\n\r\n                    if (addressArray?.length > 0) {\r\n                        //connected\r\n                        setAppStatus('connected');\r\n                        setCurrentAccount(addressArray[0]);\r\n\r\n                    } else {\r\n                        // not connected\r\n                        setAppStatus('not-connected');\r\n                        setCurrentAccount();\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                alert(err)\r\n                console.log(err);\r\n                setAppStatus('error')\r\n            }\r\n        }\r\n        checkIfWalletConnected();\r\n        window?.ethereum?.on('accountsChanged', async () => {\r\n            checkIfWalletConnected();\r\n        })\r\n\r\n    }, [currentAccount])\r\n\r\n\r\n    const disconnectWC = async () => {\r\n        await provider.disconnect();\r\n        setAppStatus('not-connected');\r\n        setCurrentAccount();\r\n        window.w3 = undefined;\r\n    }\r\n    const walletConnect = async () => {\r\n        try {\r\n            await provider.enable();\r\n\r\n            //create Web3 instance\r\n            const web3 = new Web3(provider)\r\n            window.w3 = web3\r\n            const accounts = await web3.eth.getAccounts();\r\n            const account = accounts[0];\r\n            setCurrentAccount(account.toLowerCase())\r\n            console.log(account)\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n        }\r\n    }\r\n    const connectToWallet = async () => {\r\n        if (!window.ethereum && !currentAccount) return setAppStatus('noMetamask')\r\n\r\n        try {\r\n            setAppStatus('loading');\r\n\r\n            const addressArray = await window?.ethereum?.request({\r\n                method: 'eth_requestAccounts',\r\n            })\r\n            if (addressArray.length > 0) {\r\n                setAppStatus('connected')\r\n                setCurrentAccount(addressArray[0])\r\n            } else {\r\n                setAppStatus('not-connected')\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setAppStatus('error')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ appStatus, currentAccount, connectToWallet, walletConnect, disconnectWC }}>{children}</AppContext.Provider>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Table } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport '../../styles/market_history.css'\r\n\r\n\r\nconst MarketHistory = () => {\r\n  const { currentAccount } = useContext(AppContext);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [historyList, setHistoryList] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [totalList, setTotalList] = useState([])\r\n  const [totalBuy, setTotalBuy] = useState('');\r\n  const [totalSell, setTotalSell] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getMarketHistory = (pageNo, pageSize) => {\r\n      return axios(`https://market-api.radiocaca.com/users/${currentAccount}/histories?pageNo=${pageNo}&pageSize=${pageSize}`).then(res => res.data)\r\n    }\r\n    const getHistoryData = async () => {\r\n      let pageNo = 1;\r\n      let pageSize = 10;\r\n      const isMD = currentAccount.toLowerCase() === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16';\r\n      if (isMD) {\r\n        getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n          setLength(res.total)\r\n          const listDataMD = await getMarketHistory(1, res.total - 8).then(async (res) => {\r\n            const listDataMD2 = await getMarketHistory(2, res.total - 7).then(res => res.list);\r\n\r\n            return res.list.concat(listDataMD2)\r\n          });\r\n          setHistoryList(listDataMD)\r\n\r\n        })\r\n      } else {\r\n        const listData = await getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n          setLength(res.total);\r\n          return getMarketHistory(pageNo, res.total).then(res => res.list);\r\n        })\r\n        setHistoryList(listData);\r\n      }\r\n\r\n    }\r\n\r\n    if (currentAccount) {\r\n      setLoading(true)\r\n      getHistoryData();\r\n    }\r\n    return () => {\r\n      setHistoryList([])\r\n    }\r\n  }, [currentAccount])\r\n\r\n  useEffect(() => {\r\n\r\n    const listNFT = [];\r\n    const listTotal = [];\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let lengthList = length;\r\n    if (currentAccount === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n      lengthList--;\r\n    }\r\n    if (historyList.length === lengthList && historyList.length !== 0) {\r\n      historyList.forEach(item => {\r\n        if (item.token_name === 'Metamon#363811')\r\n          return;\r\n        if (!listNFT.includes(item.token_name)) {\r\n          listNFT.push(item.token_name)\r\n          listTotal.push({\r\n            token_name: item.token_name,\r\n            totalBuy: item.type === 'Buy' ? item.amount : 0,\r\n            totalSell: item.type === 'Sell' ? item.amount - item.fee : 0,\r\n            countBuy: item.type === 'Buy' ? item.count : 0,\r\n            countSell: item.type === 'Sell' ? item.count : 0,\r\n          })\r\n        } else {\r\n          if (item.type === 'Buy') {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalBuy += item.amount;\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countBuy += item.count;\r\n          }\r\n          else {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalSell += item.amount - item.fee\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countSell += item.count\r\n          }\r\n        }\r\n        if (item.type === 'Buy') {\r\n          buy += item.amount\r\n        }\r\n        else {\r\n          sell += item.amount - item.fee\r\n        }\r\n      })\r\n      setTotalBuy(buy);\r\n      setTotalSell(sell);\r\n      // console.log(listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0]?.totalSell)\r\n      if (currentAccount === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n        const getItem = listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0];\r\n        getItem.totalSell = 100000;\r\n        setTotalSell(prev => prev + getItem.totalSell)\r\n      }\r\n\r\n      setTotalList(listTotal.map(item => {\r\n        return {\r\n          ...item,\r\n          profit: item.totalSell - item.totalBuy\r\n        }\r\n      }))\r\n      setLoading(false);\r\n    }\r\n\r\n  }, [historyList,currentAccount])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sales\">\r\n        <TableContainer id=\"sales-section\" component={Paper}>\r\n          <Table sx={{ minWidth: 650, minHeight: 150 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell component='th' align='center'>NFT</TableCell>\r\n                <TableCell component='th' align=\"center\">\r\n                  <div>\r\n                    <p colSpan={2}>Buy</p>\r\n                    <div className='multiRow'>\r\n                      <p>Amount</p>\r\n                      <p>Count</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <div>\r\n                    <p>Sell</p>\r\n                    <div className='multiRow'>\r\n                      <p>Amount</p>\r\n                      <p>Count</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\">Profit</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalList.length !== 0 && totalList.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell component='th'>{item.token_name}</TableCell>\r\n\r\n                  <TableCell>\r\n                    <div className=\"multiRow\">\r\n                      <p>{numberWithCommas(Math.floor(item.totalBuy))}</p>\r\n                      <p>{numberWithCommas(Math.floor(item.countBuy))}</p>\r\n                    </div>\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <div className='multiRow'>\r\n                      <p>{numberWithCommas(Math.floor(item.totalSell))}</p>\r\n                      <p>{numberWithCommas(Math.floor(item.countSell))}</p>\r\n                    </div>\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(item.profit))}</TableCell>\r\n\r\n                </TableRow>\r\n              ))}\r\n              {totalList.length !== 0 && (\r\n                <TableRow >\r\n                  <TableCell component='th'>Total</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalBuy))}</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalSell))}</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalSell - totalBuy))}</TableCell>\r\n                </TableRow>\r\n              )}\r\n              <TableRow >\r\n                <TableCell colSpan={2} align='center' id='loading' style={{ textAlign: 'center' }}>\r\n                  {loading && <CircularProgress color=\"primary\" />}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarketHistory","import { Button } from '@mui/material';\r\nimport React, { useContext } from 'react'\r\nimport { AppContext } from '../context/AppContext'\r\n\r\nconst Metamask = () => {\r\n    const { appStatus, connectToWallet, currentAccount, walletConnect, disconnectWC } = useContext(AppContext);\r\n\r\n\r\n    const app = (status = appStatus) => {\r\n        switch (status) {\r\n            case 'connected':\r\n                return userLoggedIn\r\n\r\n            case 'not-connected':\r\n                return noUserFound\r\n\r\n            case 'noMetamask':\r\n                return noMetamaskFound\r\n\r\n            case 'error':\r\n                return error\r\n\r\n            default:\r\n                return loading\r\n        }\r\n    }\r\n\r\n    const noUserFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px' }} variant=\"contained\" onClick={() => connectToWallet()}>Connect to Wallet</Button>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px', marginTop: '10px' }} variant=\"contained\" onClick={() => walletConnect()}>\r\n                <img alt='' width='30px' style={{ marginRight: '5px' }} src='/marketplaceraca/wallet-connect.svg'></img>\r\n                Wallet Connect</Button>\r\n\r\n        </div>\r\n    )\r\n    const userLoggedIn = (\r\n        <div style={{ margin: '5px 0',lineBreak:'anywhere' }}>{currentAccount}\r\n            {window.w3 && <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '2px 10px' }} variant=\"contained\" onClick={() => disconnectWC()}>\r\n                Log out</Button>}\r\n        </div>\r\n    )\r\n    const noMetamaskFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <p> You must install Metamask, a <br /> virtual Ethereum wallet, in your browser</p>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px', marginTop: '10px' }} variant=\"contained\" onClick={() => walletConnect()}>\r\n                <img alt='' width='30px' style={{ marginRight: '5px' }} src='/marketplaceraca/wallet-connect.svg'></img>\r\n                Wallet Connect</Button>\r\n\r\n        </div>\r\n\r\n    )\r\n    const error = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/error.png' />\r\n            <p>An error occurred. Please try again later or use another browser</p>\r\n            {/* <p>{errLog}</p> */}\r\n        </div>\r\n    )\r\n    const loading = (\r\n        <div> Loading... </div>\r\n    )\r\n    return (\r\n        <div>{app(appStatus)}</div>\r\n    )\r\n}\r\n\r\nexport default Metamask","import React, { useContext, } from 'react'\r\nimport { Box, Button, Typography } from '@mui/material';\r\nimport '../../styles/statwallet.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToken } from '../../app/actions';\r\nimport { addDoc, collection, getDocs, where, updateDoc, doc, query } from 'firebase/firestore';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport axios from 'axios';\r\n\r\nexport const getInfoToken = async (token) => {\r\n    return await axios.get(`https://api.coingecko.com/api/v3/search?query=${token}`)\r\n        .then(res => {\r\n            if (res.data.coins.length !== 0) {\r\n                const coins = res.data.coins;\r\n                // console.log(coins)\r\n                return coins;\r\n            } else {\r\n                return axios.get(`https://api.pancakeswap.info/api/v2/tokens/${token\r\n                    }`).then(res => {\r\n                        const result = res.data.data\r\n                        return result;\r\n                    });\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nconst InfoToken = ({ token, setLoading }) => {\r\n    const { currentAccount } = useContext(AppContext);\r\n    const { listToken } = useSelector(state => state)\r\n    const infoToken = listToken.find(item => {\r\n        return item.tokenName?.toLowerCase() === token.symbol?.toLowerCase()\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const db = useSelector(state => state.db);\r\n    const addTokenToDB = async (token) => {\r\n        setLoading(true)\r\n        const q = query(collection(db, \"users\"), where('address', '==', currentAccount));\r\n        const querySnapshot = await getDocs(q);\r\n        if (querySnapshot.empty) {\r\n            await addDoc(collection(db, \"users\"), {\r\n                address: currentAccount.toLowerCase(),\r\n                tokens: [\r\n                    {\r\n                        address: token.address.toLowerCase(),\r\n                        timestamp: Date.now(),\r\n                        id: token.id\r\n                    }\r\n                ]\r\n            }).finally(() => setLoading(false));\r\n        } else {\r\n            querySnapshot.forEach(async (data) => {\r\n                if (!data.data().tokens.includes(token.address?.toLowerCase())) {\r\n                    const docRef = await doc(db, \"users\", data.id);\r\n                    await updateDoc(docRef, {\r\n                        tokens: [\r\n                            ...data.data().tokens,\r\n                            {\r\n                                address: token.address.toLowerCase(),\r\n                                timestamp: Date.now(),\r\n                                id: token.id\r\n                            }\r\n                        ]\r\n                    }).then(() => {\r\n                        console.log(token)\r\n                        dispatch(addToken(\r\n                            {\r\n                                ...token,\r\n                                token: token.address.toLowerCase(),\r\n                                id: token.id\r\n                            }))\r\n                    }).finally(() => setLoading(false));\r\n                } else {\r\n                    alert('Token is exist!')\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleAddUserDb = () => {\r\n        setLoading(true)\r\n        if (currentAccount) {\r\n            if (!token.address) {\r\n                axios.get(`https://api.coingecko.com/api/v3/coins/${token.id}`).then(res => {\r\n                    const data = res.data;\r\n                    const address = data.platforms['binance-smart-chain']\r\n                    if (address) {\r\n                        getInfoToken(address).then((async (res) => {\r\n                            if (res) {\r\n                                console.log(token.id)\r\n                                addTokenToDB({ ...res, address: address, id: token.id ?? '' })\r\n                            }\r\n                        }))\r\n                    }\r\n                }).finally(() => setLoading(false))\r\n            } else {\r\n                getInfoToken(token.address).then((async (res) => {\r\n                    if (res) {\r\n                        addTokenToDB({\r\n                            ...res, address: token.address, id: res.id ?? ''\r\n                        })\r\n                    }\r\n                })).finally(() => setLoading(false))\r\n            }\r\n        } else {\r\n            alert('No user')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\r\n            <Box sx={{ display: 'flex', width: '80%', gap: '5px', alignItems: 'center' }}>\r\n                <img alt='' width={'25px'} src={token.thumb ? token.large : '/marketplaceraca/help_outline.svg'} />\r\n                <Typography variant=\"h6\">{token.symbol}</Typography>\r\n                <Typography variant=\"h7\">{token.name}</Typography>\r\n            </Box>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(31, 199, 212)', padding: '5px 10px', width: '30%', borderRadius: 15 }} variant=\"contained\" onClick={() => handleAddUserDb()} disabled={infoToken ? true : false}>Import</Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default InfoToken","import React from 'react'\r\nimport '../../styles/statwallet.css'\r\nimport { Box, Modal } from '@mui/material';\r\n\r\nconst ModalUI = ({ isOpen, setOpen, children, onClose }) => {\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        onClose();\r\n    }\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '25%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -22%)',\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #00000087',\r\n        boxShadow: 24,\r\n        borderRadius: 4,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n            <Box sx={style} id='modalUI'>\r\n                {children}\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalUI","import { CircularProgress, Box } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <Box sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\r\n            <CircularProgress color=\"primary\" />\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useEffect, useState } from 'react'\r\nimport { Box, Typography, TextField, Button } from '@mui/material';\r\nimport InfoToken, { getInfoToken } from './InfoToken';\r\nimport ModalUI from './ModalUI';\r\nimport Loading from '../Loading'\r\nconst ImportTokenModal = () => {\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [tokenInput, setTokenInput] = useState('');\r\n    const [tokenQuery, setTokenQuery] = useState();\r\n    const [invalidToken, setInvalidToken] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChangeInput = (e) => {\r\n        setTokenInput(e.target.value.toLowerCase());\r\n    }\r\n    const handleOpen = () => {\r\n        setIsOpenModal(prev => !prev);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setTokenInput('');\r\n        setTokenQuery();\r\n    }\r\n    useEffect(() => {\r\n        const bounceInput = setTimeout(() => {\r\n            if (tokenInput !== '') {\r\n                getInfoToken(tokenInput).then(res => {\r\n                    if (res.length !== 0 && res.length !== undefined) {\r\n                        setInvalidToken(false)\r\n                        setTokenQuery([...res])\r\n                        // console.log(res?.length)\r\n                    } else {\r\n                        setInvalidToken(false)\r\n                        setTokenQuery([{\r\n                            ...res,\r\n                            address: tokenInput\r\n                        }])\r\n                    }\r\n                }).catch(err => {\r\n                    setInvalidToken(false)\r\n                }).finally(() => setLoading(false));\r\n            } else {\r\n                setInvalidToken(false)\r\n                setLoading(false)\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            setTokenQuery()\r\n            setLoading(true)\r\n            clearTimeout(bounceInput)\r\n        }\r\n    }, [tokenInput])\r\n    return (\r\n        <React.StrictMode>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)' }} variant=\"contained\" onClick={handleOpen}>Import</Button>\r\n            <ModalUI isOpen={isOpenModal} setOpen={setIsOpenModal} onClose={handleClose}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" align='center' component=\"h2\">\r\n                    Import Token\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\r\n                    <TextField value={tokenInput} autoFocus onChange={(e) => handleChangeInput(e)} label=\"Token\" variant=\"outlined\" className='input-token' sx={{ mt: 2 }} />\r\n                    {tokenQuery && <Box sx={{ mt: 2, maxHeight: '200px', overflowY: 'auto', overflowX: 'hidden' }} className=\"list-token-query\">\r\n                        {tokenQuery.map((infoToken, index) => (\r\n                            <InfoToken key={index} token={infoToken} setLoading={setLoading} />)\r\n                        )}\r\n                    </Box>}\r\n                    {invalidToken && (\r\n                        <Typography variant=\"h6\" color=\"#d42d31\">Enter valid token address </Typography>\r\n                    )}\r\n                </Box>\r\n                {loading && (\r\n                    <Loading />\r\n                )}\r\n            </ModalUI>\r\n        </React.StrictMode>\r\n\r\n    )\r\n}\r\n\r\nexport default ImportTokenModal","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, TableSortLabel } from '@mui/material'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport millify from 'millify'\r\nimport React, { useState } from 'react'\r\nimport ModalUI from './ModalUI'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (orderBy === 'value') {\r\n\r\n    }\r\n    switch (orderBy) {\r\n        case 'value':\r\n            a[orderBy] = a.price * a.amount;\r\n            b[orderBy] = b.price * b.amount;\r\n            break;\r\n        case 'date':\r\n            if (new Date(b[orderBy]) < new Date(b[orderBy])) {\r\n                return -1;\r\n            }\r\n            return 1\r\n            // console.log(new Date(a[orderBy])> new Date(b[orderBy]))\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'date',\r\n        label: 'Date',\r\n    },\r\n    {\r\n        id: 'amount',\r\n        label: 'Amount',\r\n    },\r\n    {\r\n        id: 'price',\r\n        label: 'Price',\r\n    },\r\n    {\r\n        id: 'status',\r\n        label: 'Status',\r\n    },\r\n    {\r\n        id: 'value',\r\n        label: 'Value',\r\n    },\r\n]\r\nfunction EnhancedTableHead(props) {\r\n    const { order, orderBy, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            className='sort-icon'\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                            sx={{ margin: 0 }}\r\n                        >\r\n                            {headCell.label}\r\n\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n\r\n};\r\nconst TransactionsModal = ({ infoTransactions, setInfoTransactions }) => {\r\n    const [isOpen, setOpen] = useState(true)\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('date');\r\n    const { tokenName, listTransactions } = infoTransactions;\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    return (\r\n        <ModalUI isOpen={isOpen} setOpen={setOpen} onClose={setInfoTransactions}>\r\n            <Typography align='center'>{tokenName}'s Transactions</Typography>\r\n            <TableContainer id='table_transactions'>\r\n                <Table stickyHeader>\r\n                    <EnhancedTableHead\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(listTransactions, getComparator(order, orderBy))\r\n                            .map((row, index) => {\r\n                                return (\r\n                                    <TableRow key={index} >\r\n                                        <TableCell align='center'>{row.date}</TableCell>\r\n                                        <TableCell align='center'>{millify(row.amount, {\r\n                                            precision: 2,\r\n                                            decimalSeparator: \",\"\r\n                                        })}</TableCell>\r\n                                        <TableCell align='center'>{millify(row.price, {\r\n                                            precision: 5,\r\n                                            decimalSeparator: \",\"\r\n                                        })}</TableCell>\r\n                                        <TableCell align='center'>{row.status.toUpperCase()}</TableCell>\r\n\r\n                                        <TableCell align='center'>{millify(row.price * row.amount, {\r\n                                            precision: 2,\r\n                                            decimalSeparator: \",\"\r\n                                        })} $</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        </ModalUI>\r\n    )\r\n}\r\n\r\nexport default TransactionsModal","import React, { useContext, useEffect, useState } from 'react'\r\nimport Web3 from 'web3'\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Table, Button } from '@mui/material';\r\nimport { AppContext } from '../../context/AppContext'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//FireBase\r\nimport { collection, query, getDocs, where, updateDoc, doc } from \"firebase/firestore\"\r\nimport { addToken, clearListToken, removeToken } from '../../app/actions';\r\nimport { getInfoToken } from './InfoToken'\r\nimport millify from 'millify';\r\nimport ImportTokenModal from './ImportTokenModal';\r\nimport TransactionsModal from './TransactionsModal';\r\n\r\nconst StatWallet = () => {\r\n  const { currentAccount } = useContext(AppContext)\r\n  const [loading, setLoading] = useState(true);\r\n  const [listTransactions, setListTransactions] = useState({})\r\n  const [infoTransactions, setInfoTransactions] = useState();\r\n  const listToken = useSelector(state => state.listToken)\r\n  const prevLength = useSelector(state => state.prevLength)\r\n  const rpcUrl = 'https://bsc-dataseed1.binance.org:443'\r\n  const web3 = new Web3(rpcUrl);\r\n  const [listBalance, setListBalance] = useState([]);\r\n  const db = useSelector(state => state.db);\r\n  const dispatch = useDispatch();\r\n\r\n  const getTransaction = ({ tokenName, address, id }) => {\r\n    if (tokenName !== 'BNB') {\r\n      axios.get(`https://api.bscscan.com/api?module=account&action=tokentx&contractaddress=${address}&address=${currentAccount}&page=1&offset=10000&startblock=0&endblock=999999999&sort=asc&apikey=RWBIX4SRF8ZCSSDVHIM8YGSK5V65J9UNNN`).then(async (res) => {\r\n        const data = res.data.result;\r\n        let totalDeposit = 0;\r\n        let totalDepositPrice = 0;\r\n        let totalWithdraw = 0;\r\n        let totalWithdrawPrice = 0;\r\n        let startTime = data[0].timeStamp - 86400;\r\n        let endTime = data[data.length - 1].timeStamp;\r\n        const listTransactionsTemp = {};\r\n\r\n        listTransactionsTemp[tokenName] = []\r\n        let hashmapPrice;\r\n        if (id) {\r\n          hashmapPrice = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`).then(res => {\r\n            const hashmap = {};\r\n            const data = res.data.prices;\r\n            data.forEach((price) => {\r\n              const date = new Date(price[0]).toLocaleDateString()\r\n              hashmap[date] = price[1]\r\n            })\r\n            return hashmap;\r\n          }).catch((err) => console.log(err))\r\n        }\r\n        data?.forEach(transaction => {\r\n          const value = Number(Web3.utils.fromWei(transaction.value, 'ether'))\r\n          let getDateTransaction = new Date(transaction.timeStamp * 1000).toLocaleDateString();\r\n          const infoTransaction = {\r\n            amount:value,\r\n            date: getDateTransaction,\r\n            status: transaction.from === currentAccount ? 'out' : 'in',\r\n            \r\n          }\r\n          if (id) {\r\n            let index = 1;\r\n            while (hashmapPrice[getDateTransaction] === undefined && index <= 10) {\r\n              getDateTransaction = new Date((transaction.timeStamp - 0 + 86400) * 1000).toLocaleDateString()\r\n              index++;\r\n            }\r\n          }\r\n\r\n          infoTransaction.price = hashmapPrice ? hashmapPrice[getDateTransaction] : 0;\r\n          listTransactionsTemp[tokenName].push(infoTransaction)\r\n          if (transaction.from === currentAccount) {\r\n            totalWithdraw += value;\r\n            if (id)\r\n              totalWithdrawPrice += value * hashmapPrice[getDateTransaction];\r\n          } else {\r\n            totalDeposit += Number(Web3.utils.fromWei(transaction.value, 'ether'));\r\n            if (id)\r\n              totalDepositPrice += value * hashmapPrice[getDateTransaction];\r\n          }\r\n        })\r\n        setListTransactions(prev => {\r\n          return {\r\n            ...prev,\r\n            ...listTransactionsTemp\r\n          }\r\n        })\r\n        const balance = Number(totalDeposit.toFixed(4) - totalWithdraw.toFixed(4));\r\n\r\n        setListBalance(prev => {\r\n          return {\r\n            ...prev,\r\n            [tokenName]: {\r\n              totalWithdraw: totalWithdraw <= 0 ? totalWithdraw : Number(totalWithdraw).toFixed(4),\r\n              totalDeposit: totalDeposit <= 0 ? totalDeposit : Number(totalDeposit).toFixed(4),\r\n              balance: balance <= 0 ? Math.floor(balance) : balance.toFixed(4),\r\n              totalWithdrawPrice,\r\n              totalDepositPrice,\r\n            }\r\n          }\r\n        })\r\n\r\n      }).catch(err => {\r\n        console.log(err)\r\n      }).finally(() => setLoading(false))\r\n    }\r\n  }\r\n\r\n  const deleteToken = async (e) => {\r\n    let token;\r\n    if (e.target.parentNode.dataset.token) {\r\n      token = e.target.parentNode.dataset.token\r\n    } else {\r\n      token = e.target.dataset.token\r\n    }\r\n    const q = query(collection(db, 'users'), where('address', '==', currentAccount));\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach(async (docItem) => {\r\n      if (docItem.exists()) {\r\n        const result = docItem.data().tokens;\r\n        const listResult = result.filter(item => item.address !== token);\r\n        const docRef = await doc(db, \"users\", docItem.id);\r\n        await updateDoc(docRef, {\r\n          tokens: [\r\n            ...listResult\r\n          ]\r\n        }).then((res) => {\r\n          dispatch(removeToken(token));\r\n          setLoading(false)\r\n        }).finally(() => setLoading(false))\r\n      }\r\n    })\r\n  }\r\n  const showDetailTransaction = (e) => {\r\n    const tokenName = e.target.parentNode.dataset.name\r\n    setInfoTransactions({\r\n      tokenName,\r\n      listTransactions: [\r\n        ...listTransactions[tokenName]\r\n      ]\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(clearListToken());\r\n    if (currentAccount) {\r\n      const getDataFireBase = async () => {\r\n        const q = query(collection(db, \"users\"), where('address', '==', currentAccount));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists()) {\r\n            // dispatch(initTokens(doc.data().tokens))\r\n            const listTokens = doc.data().tokens;\r\n            if (listTokens.length !== 0) {\r\n              let limit = listTokens.length >= 4 ? 4 : listTokens.length;\r\n              let end = limit;\r\n              let start = end - limit;\r\n              // let flag = limit;\r\n              const loop = setInterval(() => {\r\n                for (let i = start; i < end; i++) {\r\n                  setLoading(true)\r\n                  getInfoToken(listTokens[i]?.address).then(async (res) => {\r\n                    const token = listTokens[i].address;\r\n                    dispatch(addToken({\r\n                      ...res,\r\n                      token,\r\n                      id: listTokens[i].id\r\n                    }))\r\n                  })\r\n                }\r\n                if (end === listToken.length) {\r\n                  clearInterval(loop)\r\n                }\r\n                start = end;\r\n                if (end + limit > listTokens.length) {\r\n                  end = listTokens.length;\r\n                } else {\r\n                  end += limit\r\n                }\r\n              }, 2000)\r\n              setLoading(false)\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      web3.eth.getBalance(currentAccount).then(res => {\r\n        const balanceFromWei = Web3.utils.fromWei(res, 'ether')\r\n        setListBalance(prev => {\r\n          return {\r\n            ...prev,\r\n            'BNB': {\r\n              balance: balanceFromWei <= 0 ? Math.abs(Number(balanceFromWei)) : Number(balanceFromWei).toFixed(5)\r\n            }\r\n          }\r\n        })\r\n      }).finally(() => setLoading(false));\r\n      if (listToken)\r\n        getDataFireBase();\r\n    }\r\n    return () => {\r\n      setListBalance([]);\r\n      setLoading(true)\r\n    }\r\n  }, [currentAccount])\r\n  useEffect(() => {\r\n    if (prevLength <= listToken.length && listToken.length !== 0) {\r\n      const length = listToken.length;\r\n      getTransaction(listToken[length - 1]);\r\n    }\r\n    return () => {\r\n      setLoading(true)\r\n    }\r\n  }, [listToken])\r\n  return (\r\n    <div className=\"PortfolioWallet\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <TableContainer sx={{ maxWidth: '650px' }} id=\"PortfolioWallet-section\" component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell component='th' align='center'>Token Name</TableCell>\r\n              <TableCell align=\"center\">Deposit</TableCell>\r\n              <TableCell align=\"center\">Withdraw</TableCell>\r\n              <TableCell align=\"center\">Balance</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {listBalance && listToken && (listToken.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component='th' data-name={item.tokenName}>{item.tokenName} {listTransactions[item.tokenName] ? (<Button className='button-detail' sx={{\r\n                  fontSize: \"12px\",\r\n                  padding: 0,\r\n                  justifyContent: \"center\",\r\n                }} onClick={(e) => showDetailTransaction(e)}>Details</Button>) : ''} </TableCell>\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.totalDeposit) ? millify(listBalance[item.tokenName]?.totalDeposit, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0} (~{listBalance[item.tokenName]?.totalDepositPrice ? millify(listBalance[item.tokenName]?.totalDepositPrice, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0})</TableCell>\r\n\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.totalWithdraw) ? millify(listBalance[item.tokenName]?.totalWithdraw, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0} (~{listBalance[item.tokenName]?.totalWithdrawPrice ? millify(listBalance[item.tokenName]?.totalWithdrawPrice, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0})</TableCell>\r\n\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.balance) && item.tokenName !== \"BNB\" ? millify(listBalance[item.tokenName]?.balance, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : (listBalance[item.tokenName]?.balance)}</TableCell>\r\n                <TableCell sx={{ padding: 0, width: '20px' }} align='center'>\r\n                  {index !== 0 && (\r\n                    <Button sx={{ minWidth: '20px', padding: '0px' }} data-token={item.address} onClick={(e) => deleteToken(e)}><img src='/marketplaceraca/delete_outline.svg' alt='' /></Button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            )))}\r\n            <TableRow >\r\n              <TableCell colSpan={5} align='center' style={{ textAlign: 'center', padding: '10px 0' }}>\r\n                <ImportTokenModal />\r\n              </TableCell>\r\n            </TableRow>\r\n            {loading && (\r\n              <TableRow >\r\n                <TableCell colSpan={5} align='center' style={{ textAlign: 'center' }}>\r\n                  <CircularProgress color=\"primary\" />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {infoTransactions && (\r\n        <TransactionsModal infoTransactions={infoTransactions} setInfoTransactions={setInfoTransactions}>\r\n\r\n        </TransactionsModal>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default StatWallet","\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDMPGSZM9TbhHyO_dnV5yXanp-XsDnCT9A\",\r\n    authDomain: \"portfolio-mind.firebaseapp.com\",\r\n    projectId: \"portfolio-mind\",\r\n    storageBucket: \"portfolio-mind.appspot.com\",\r\n    messagingSenderId: \"993307046762\",\r\n    appId: \"1:993307046762:web:a00d4f8dd7756c6d8a6b13\"\r\n};\r\nexport default firebaseConfig","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\n\r\nimport MarketHistory from './MarketHistory';\r\nimport Metamask from '../Metamask';\r\nimport StatWallet from './StatWallet';\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from '../../config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { initApp } from '../../app/actions';\r\nimport { getFirestore } from \"firebase/firestore\"\r\nconst Portfolio = () => {\r\n    const app = initializeApp(firebaseConfig);\r\n    const db = getFirestore(app)\r\n    const dispatch = useDispatch()\r\n    const { currentAccount } = useContext(AppContext);\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const transition = useTransition(isVisible, {\r\n        from: { x: -500, y: 10, opacity: 0 },\r\n        enter: { x: 0, y: 0, opacity: 1, display: 'block' },\r\n        leave: { x: 500, y: 10, opacity: 0, display: 'none' }\r\n    })\r\n    useEffect(() => {\r\n        dispatch(initApp(db));\r\n    }, [db])\r\n    const handleSwitch = () => {\r\n        setIsVisible(state => !state)\r\n    }\r\n    return (\r\n        <div className=\"portfolio\">\r\n            <Metamask />\r\n            {currentAccount && (\r\n                <React.StrictMode>\r\n                    <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px',marginBottom:'10px' }} variant=\"contained\" onClick={handleSwitch}>{isVisible ? \"Stat Raca\" : \"Portfolio\"}</Button>\r\n                    {transition((style, item) =>\r\n                        item ? <animated.div style={style}>\r\n                            <StatWallet />\r\n                        </animated.div> : <animated.div style={style}>\r\n                            <MarketHistory />\r\n                        </animated.div>\r\n                    )}\r\n                </React.StrictMode>\r\n            )}\r\n\r\n            {/* {currentAccount && <MarketHistory />}\r\n            {currentAccount && <StatWallet />} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import { useState } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel';\r\nimport NFTs from './NFTs/NFTs';\r\nimport Metamon from './Metamon/Metamon'\r\nimport Elemon from './Elemon/Elemon'\r\nimport '../App.css'\r\nimport Portfolio from './Portfolio/Portfolio';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nconst HeaderTabs = (props) => {\r\n    const myStorage = window.localStorage;\r\n    const getTab = myStorage.getItem('tab') === undefined ? 0 : myStorage.getItem('tab');\r\n    const [value, setValue] = useState(Number(getTab));\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        myStorage.setItem('tab', newValue);\r\n\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Box id=\"tabs\" sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <Tabs value={value} sx={{ color: '#ffffff' }} onChange={handleChange}>\r\n                    <Tab label=\"Raca\" {...a11yProps(0)} />\r\n                    <Tab label=\"Metamon\" {...a11yProps(1)} />\r\n                    <Tab label=\"Elemon\" {...a11yProps(2)} />\r\n                    <Tab label=\"Sales\" {...a11yProps(3)} />\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n                <NFTs />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Metamon />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Elemon />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n                <Portfolio />\r\n            </TabPanel>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HeaderTabs;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './App.css';\r\nimport { updatePriceAuto } from './app/actions';\r\nimport HeaderTabs from './components/Tabs';\r\nimport axios from \"axios\"\r\nimport { AppProvider } from './context/AppContext';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    const getPrice = async () => {\r\n      const { elmon, raca, btc } = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=radio-caca,elemon,bitcoin&vs_currencies=usd').then(res => {\r\n        return {\r\n          raca: res.data['radio-caca'].usd,\r\n          elmon: res.data['elemon'].usd,\r\n          btc: res.data['bitcoin'].usd,\r\n        }\r\n      });\r\n      const elcoin = await axios.get('https://api.pancakeswap.info/api/v2/tokens/0x092ffbc968203b652b08361adec75e275573f2db').then(res => Number(res.data.data.price).toFixed(8));\r\n      document.title = raca + \" - Marketplace RACA\"\r\n      dispatch(updatePriceAuto({ raca, elmon, elcoin, btc }))\r\n    }\r\n    getPrice()\r\n    const updatePrice = setInterval(async () => {\r\n      getPrice()\r\n    }, 20000)\r\n\r\n    return () => {\r\n      clearInterval(updatePrice)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"App\">\r\n      <AppProvider>\r\n        <HeaderTabs />\r\n      </AppProvider>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const myStorage = window.localStorage;\r\n\r\nconst listToken = [\r\n  {\r\n    tokenName: 'BNB',\r\n    address: '0xB8c77482e45F1F44dE1745F52C74426C631bDD52'\r\n  },\r\n  // {\r\n  //   tokenName: \"BUSD\",\r\n  //   address: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n  // },\r\n  // {\r\n  //   tokenName: \"RACA\",\r\n  //   address: '0x12BB890508c125661E03b09EC06E404bc9289040',\r\n  // },\r\n  // {\r\n  //   tokenName: \"ELMON\",\r\n  //   address: '0xE3233fdb23F1c27aB37Bd66A19a1f1762fCf5f3F',\r\n  // },\r\n  // {\r\n  //   tokenName: \"ELCOIN\",\r\n  //   address: '0x092FFBc968203B652B08361aDec75E275573F2db',\r\n  // }\r\n]\r\nconst initState = {\r\n  filters: {\r\n    minScore:\r\n      myStorage.getItem(\"metamon\") === undefined\r\n        ? 315 : JSON.parse(myStorage.getItem(\"metamon\"))?.score,\r\n    level:\r\n      myStorage.getItem(\"metamon\") === undefined\r\n        ? 20 : JSON.parse(myStorage.getItem(\"metamon\"))?.levelMetamon,\r\n    arrange: 0,\r\n  },\r\n  price: {\r\n    raca: 0,\r\n    elmon: 0,\r\n    elcoin: 0,\r\n    btc: 0,\r\n  },\r\n  filtersElemon: {\r\n    sort: 0,\r\n    name: 0,\r\n    tokenId: \"\",\r\n    rarity: [],\r\n    purity: [],\r\n    aura: [],\r\n    price: \"\",\r\n    min: \"\",\r\n    max: \"\",\r\n  },\r\n  tab: 0,\r\n  currentAccount: '',\r\n  listToken,\r\n  db: {},\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"handleFilters\":\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          minScore: action.payload.minScore,\r\n          level: action.payload.level,\r\n        },\r\n      };\r\n    case \"handleArrange\":\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          arrange: action.payload,\r\n        },\r\n      };\r\n    case \"handlePower\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          min: action.payload.min,\r\n          max: action.payload.max,\r\n        },\r\n      };\r\n    case \"handleSort\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          sort: action.payload,\r\n        },\r\n      };\r\n    case \"handleName\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          name: action.payload,\r\n        },\r\n      };\r\n    case \"handleTokenId\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          tokenId: action.payload,\r\n        },\r\n      };\r\n    case \"updatePrice\":\r\n      return {\r\n        ...state,\r\n        price: action.payload,\r\n      };\r\n    case \"elemon/addRarity\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          rarity: [...state.filtersElemon.rarity, action.payload],\r\n        },\r\n      };\r\n    case \"elemon/removeRarity\":\r\n      const listRarity = [...state.filtersElemon.rarity];\r\n      const positionRarity = listRarity.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          rarity: listRarity\r\n            .slice(0, positionRarity)\r\n            .concat(listRarity.slice(positionRarity + 1)),\r\n        },\r\n      };\r\n    case \"elemon/addAura\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          aura: [...state.filtersElemon.aura, action.payload],\r\n        },\r\n      };\r\n    case \"elemon/removeAura\":\r\n      const listAura = state.filtersElemon.aura;\r\n      const positionAura = listAura.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          aura: listAura\r\n            .slice(0, positionAura)\r\n            .concat(listAura.slice(positionAura + 1)),\r\n        },\r\n      };\r\n    case 'changeCurrentAccount':\r\n      return {\r\n        ...state,\r\n        currentAccount: action.payload,\r\n      }\r\n    case 'tokens/add':\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          ...state.listToken,\r\n          {\r\n            tokenName: action.payload.symbol,\r\n            address: action.payload.token,\r\n            price: action.payload.price,\r\n            id:action.payload?.id\r\n          },\r\n        ],\r\n        prevLength: state.listToken.length\r\n      }\r\n    case 'tokens/remove':\r\n      const newList = state.listToken.filter(token => token.address !== action.payload);\r\n      return {\r\n        ...state,\r\n        prevLength: state.listToken.length,\r\n        listToken: [\r\n          ...newList\r\n        ]\r\n      }\r\n    case 'initTokens':\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          ...state.listToken,\r\n          ...action.payload\r\n        ]\r\n      }\r\n    case 'clearListToken':\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          state.listToken[0]\r\n        ]\r\n      }\r\n    case 'initApp':\r\n      return {\r\n        ...state,\r\n        db: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import { createStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}