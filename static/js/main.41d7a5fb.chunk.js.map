{"version":3,"sources":["app/actions.js","components/TabPanel.js","components/NFTs/Card.js","components/NFTs/SwapRaca.js","components/NFTs/NFTs.js","components/Metamon/InputSelect.js","components/Metamon/Metamon.js","components/Elemon/InputFilters.js","components/Elemon/InfoCard.js","components/Elemon/Elemon.js","context/constants.js","context/AppContext.js","components/Portfolio/MarketHistory.js","components/Metamask.js","components/Portfolio/InfoToken.js","components/Portfolio/ModalUI.js","components/Loading.js","components/Portfolio/ImportTokenModal.js","components/Portfolio/TransactionsModal.js","components/Portfolio/StatWallet.js","config.js","components/Portfolio/Portfolio.js","components/Tabs.js","App.js","app/reducer.js","app/store.js","reportWebVitals.js","index.js"],"names":["handleArrange","arrange","type","payload","addToken","token","removeToken","TabPanel","props","children","value","index","other","role","hidden","id","style","color","Box","sx","span","Typography","component","Card","x","nft","name","image_url","fixed_price","raca","useSelector","state","price","className","alt","src","fontSize","fontWeight","lineHeight","whiteSpace","textOverflow","margin","toString","replace","toFixed","SwapRacaToUSD","useState","inputRaca","setInputRaca","usdPrice","setUsdPrice","handleChange","e","a","target","useEffect","onChange","getAPI","categoryId","size","axios","ConvertDDMM","datetime","toLocaleString","split","time","getStats","tokenId","getSellIngameList","formDataPrams","formDataLogin","FormData","append","method","url","data","headers","then","res","accessToken","catch","err","console","log","numberWithCommas","getFormData","formData","selectStatsList","img","selectIngameList","NFTs","listMetamon","setListMetamon","listDiamond","setListDiamond","listEgg","setListEgg","listPotion","setListPotion","kissUpLand","setKissUpLand","BigGreen","setBigGreen","MetamonR","setMetamonR","MMLand","setMMLand","selectStats","setSelectStats","selectedStatsList","setSelectedStatsList","tokenPrice","setTokenPrice","timeUpdated","setTimeUpdated","listStats","setListStats","sellIngameList","setSellIngameList","selectTypeIngame","setSelectTypeIngame","refSelect","useRef","convertDateTime","now","Date","elmon","elcoin","btc","getData","Promise","all","list","document","querySelector","classList","toggle","rerenderData","setInterval","clearInterval","rerenderStats","getChild","current","childNodes","removeChild","shopOrderList","display","flexDirection","SwapRaca","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","width","height","objectFit","FormControl","Select","labelId","padding","ref","map","item","MenuItem","TableBody","child","scope","millify","Math","floor","amount","justifyContent","textTransform","gap","paddingLeft","count","timestamp","filter","Number","level","score","transform","InputSelect","handleConfirm","dispatch","useDispatch","filters","myStorage","window","localStorage","setArrange","minScore","setMinScore","setLevel","Container","maxWidth","marginTop","alignItems","TextField","marginRight","label","variant","autoComplete","Button","background","onClick","handleFilters","setItem","JSON","stringify","levelMetamon","textAlign","event","pageNo","Metamon","stateMinScore","stateLevel","listShow","setListShow","loading","setLoading","getListMetamon","listData","i","total","concat","handleListMetamon","sortBy","sort","b","slice","borderLeft","colSpan","CircularProgress","metamon","position","href","textDecoration","rel","token_id","InputFilters","filtersElemon","min","max","minPower","setMinPower","maxPower","setMaxPower","listAura","Array","keys","listRarity","rarity","textShadow","handleRarity","checked","removeRarity","handleAura","removeAura","length","FormControlLabel","control","Checkbox","labelPlacement","onBlur","placeholder","InfoCard","elemon","isOwner","ownerAddress","URI","bodyPart","bodyPart1","bodyPart2","bodyPart3","bodyPart4","bodyPart5","bodyPart6","class","purity","baseCardId","join","quality","lastPrice","point","getElemonItem","pageNumber","pageSize","priceMode","get","getElemonInfo","listElemon","listTokenId","error","Elemon","setListElemon","listElemonInfo","setListElemonInfo","listFilter","setListFilter","aura","paging","totalCount","React","getInfo","lengthList","loop","listInfo","pre","checkPower","power","checkName","checkRarity","includes","checkAura","Grid","container","spacing","boxShadow","xs","md","lg","contractABI","AppContext","createContext","getEthereumProvider","provider","ethers","providers","Web3Provider","ethereum","signer","getSigner","transactionContract","Contract","AppProvider","appStatus","setAppStatus","currentAccount","setCurrentAccount","WalletConnectProvider","rpc","qrcodeModalOptions","mobileLinks","checkIfWalletConnected","request","addressArray","alert","on","disconnectWC","disconnect","w3","undefined","walletConnect","enable","web3","Web3","eth","getAccounts","accounts","account","toLowerCase","connectToWallet","Provider","MarketHistory","useContext","historyList","setHistoryList","setLength","totalList","setTotalList","totalBuy","setTotalBuy","totalSell","setTotalSell","getMarketHistory","getHistoryData","listDataMD2","listDataMD","listNFT","listTotal","buy","sell","forEach","token_name","countBuy","fee","countSell","push","getItem","prev","profit","minWidth","minHeight","Metamask","noUserFound","userLoggedIn","lineBreak","noMetamaskFound","status","app","getInfoToken","coins","InfoToken","infoToken","listToken","find","tokenName","symbol","db","addTokenToDB","q","query","collection","where","getDocs","querySnapshot","empty","addDoc","address","tokens","finally","doc","docRef","updateDoc","mt","thumb","large","borderRadius","platforms","disabled","ModalUI","isOpen","setOpen","onClose","Modal","open","top","left","bgcolor","border","p","Loading","ImportTokenModal","isOpenModal","setIsOpenModal","tokenInput","setTokenInput","tokenQuery","setTokenQuery","invalidToken","setInvalidToken","bounceInput","setTimeout","clearTimeout","StrictMode","autoFocus","handleChangeInput","maxHeight","overflowY","overflowX","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","headCells","EnhancedTableHead","onRequestSort","headCell","sortDirection","TableSortLabel","active","direction","property","TransactionsModal","infoTransactions","setInfoTransactions","setOrder","setOrderBy","listTransactions","stickyHeader","row","date","precision","decimalSeparator","toUpperCase","StatWallet","setListTransactions","prevLength","listBalance","setListBalance","deleteToken","parentNode","dataset","docItem","exists","result","listResult","getDataFireBase","listTokens","limit","end","start","getBalance","balanceFromWei","utils","fromWei","balance","abs","totalDeposit","totalDepositPrice","totalWithdraw","totalWithdrawPrice","startTime","timeStamp","endTime","listTransactionsTemp","hashmap","prices","toLocaleDateString","hashmapPrice","transaction","getDateTransaction","infoTransaction","from","getTransaction","showDetailTransaction","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Portfolio","initializeApp","getFirestore","isVisible","setIsVisible","transition","useTransition","y","opacity","enter","leave","initApp","marginBottom","div","a11yProps","TabInfo","others","HeaderTabs","getTab","setValue","Tabs","newValue","centered","Tab","App","getPrice","usd","title","updatePrice","initState","parse","tab","rootReducer","action","positionRarity","indexOf","positionAura","newList","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.41d7a5fb.chunk.js","sourcesContent":["\r\nexport const handleFilters = ({ minScore, level }) => {\r\n    return {\r\n        type: 'handleFilters',\r\n        payload: {\r\n            minScore,\r\n            level\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleArrange = (arrange) => {\r\n    return {\r\n        type: 'handleArrange',\r\n        payload: arrange\r\n    }\r\n}\r\n\r\nexport const updatePriceAuto = (price) => {\r\n    return {\r\n        type: 'updatePrice',\r\n        payload: price,\r\n    }\r\n}\r\n\r\nexport const handlePower = ({ minPower, maxPower }) => {\r\n    return {\r\n        type: 'handlePower',\r\n        payload: {\r\n            min: minPower,\r\n            max: maxPower\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleSort = (sort) => {\r\n    return {\r\n        type: 'handleSort',\r\n        payload: sort,\r\n    }\r\n}\r\n\r\nexport const handleFilterName = (name) => {\r\n    return {\r\n        type: 'handleName',\r\n        payload: name,\r\n    }\r\n}\r\nexport const handleTokenId = (id) => {\r\n    return {\r\n        type: 'handleTokenId',\r\n        payload: id,\r\n    }\r\n}\r\nexport const addRarity = (id) => {\r\n    return {\r\n        type: 'elemon/addRarity',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const removeRarity = (id) => {\r\n    return {\r\n        type: 'elemon/removeRarity',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const addAura = (id) => {\r\n    return {\r\n        type: 'elemon/addAura',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const removeAura = (id) => {\r\n    return {\r\n        type: 'elemon/removeAura',\r\n        payload: Number(id),\r\n    }\r\n}\r\nexport const changeCurrentAccount = (address) => {\r\n    return {\r\n        type: 'changeCurrentAccount',\r\n        payload: address,\r\n    }\r\n}\r\nexport const addToken = (token) => {\r\n    return {\r\n        type: 'tokens/add',\r\n        payload: token,\r\n    }\r\n}\r\nexport const removeToken = (token) => {\r\n    return {\r\n        type: 'tokens/remove',\r\n        payload: token,\r\n    }\r\n}\r\nexport const initTokens = (tokens) => {\r\n    return {\r\n        type: 'initTokens',\r\n        payload: tokens,\r\n    }\r\n}\r\nexport const initApp = (app) => {\r\n    return {\r\n        type: 'initApp',\r\n        payload: app,\r\n    }\r\n}\r\nexport const clearListToken = () => {\r\n    return {\r\n        type:'clearListToken'\r\n    }\r\n}\r\n\r\n\r\n","import Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            style={{ color: '#ffffff' }}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ span: 3 }}>\r\n                    <Typography component={'span'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TabPanel;","import { useSelector } from \"react-redux\";\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Card = (props) => {\r\n\r\n    const { name = \"undefined\", id = \"#0000\", image_url = '', fixed_price = '0000' } = props.nft;\r\n    const { raca } = useSelector(state => state.price)\r\n    return (\r\n        <div className='nft'>\r\n            <div className=\"imgBox\">\r\n                <img className='image-nft' alt={name} src={image_url || \"/marketplaceraca/raca/nft.png\"} />\r\n            </div>\r\n            <div className=\"textBox\">\r\n                <p className='name-nft'>{name} #{id}</p>\r\n                <div className='separate'></div>\r\n                <div className='price'>\r\n                    <p style={{\r\n                        color: '#ffffff',\r\n                        fontSize: 20,\r\n                        fontWeight: 700,\r\n                        lineHeight: '32px',\r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        margin: '0'\r\n                    }}>Price</p>\r\n                    <p className='priceNum'>{`${numberWithCommas(fixed_price)} (~${(fixed_price * raca).toFixed(2)})`}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst SwapRacaToUSD = () => {\r\n    const [inputRaca, setInputRaca] = useState('');\r\n    const [usdPrice, setUsdPrice] = useState(0);\r\n\r\n    const handleChange = async (e) => {\r\n        setInputRaca(e.target.value);\r\n    }\r\n    const { raca } = useSelector(state => state.price)\r\n    useEffect(() => {\r\n        setUsdPrice(() => inputRaca * raca);\r\n    }, [inputRaca, raca])\r\n    return (\r\n        <div id='swap-raca'>\r\n            <input id=\"RACA\" type=\"number\" value={inputRaca} onChange={handleChange} />\r\n            <span> ~ </span>\r\n            <span id=\"USD\">{usdPrice} USD</span>\r\n        </div>\r\n    )\r\n}\r\nexport default SwapRacaToUSD;","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport SwapRacaToUSD from \"./SwapRaca\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, Typography, MenuItem, Select, FormControl } from '@mui/material';\r\nimport '../../styles/nfts.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport millify from \"millify\";\r\n\r\n\r\n\r\n\r\nconst getAPI = (categoryId = '', size = '') => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageSize=${size}&sortBy=fixed_price&order=asc&category=${categoryId}&tokenId=-1`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst ConvertDDMM = (datetime) => {\r\n    const [date, time] = datetime.toLocaleString().split(',');\r\n    return `${time.split(' ')[1]}`\r\n}\r\nconst getStats = (categoryId = '') => {\r\n    let tokenId;\r\n    if (categoryId === 15 || categoryId === 16) {\r\n        tokenId = 0\r\n    } else {\r\n        tokenId = -1\r\n    }\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=10&status=executed&tokenId=${tokenId}&category=${categoryId}`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\nconst getSellIngameList = (formDataPrams) => {\r\n    const formDataLogin = new FormData();\r\n    formDataLogin.append('address', \"0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16\");\r\n    formDataLogin.append('sign', \"0x44063b19d6cd4ce60cda4db25aade076e2206b3539f6f5a62237fb6c0ed31fe84e7770f66cc3e623cf520cdf353a116491af88f4c53894d424914888c677ac321c\");\r\n    formDataLogin.append('msg', \"LogIn-79a8ee53-dc8b-ef50-a811-086c474b1566\");\r\n    formDataLogin.append('network', \"1\");\r\n    formDataLogin.append('clientType', \"MetaMask\");\r\n\r\n    return axios({\r\n        method: 'POST',\r\n        url: 'https://metamon-api.radiocaca.com/usm-api/login',\r\n        data: formDataLogin,\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        }\r\n    }).then((res) => {\r\n        const data = res.data.data;\r\n        return axios({\r\n            method: 'POST',\r\n            url: 'https://metamon-api.radiocaca.com/usm-api/shop-order/sellList',\r\n            data: formDataPrams,\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                \"accesstoken\": data.accessToken,\r\n            }\r\n        });\r\n    }).catch(err => console.log(err))\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nconst getFormData = (type) => {\r\n    const formData = new FormData();\r\n    formData.append('address', '0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16')\r\n    formData.append('type', type)\r\n    formData.append('orderType', 3)\r\n    formData.append('orderId', -1)\r\n    formData.append('pageSize', 5)\r\n    return formData;\r\n}\r\nconst selectStatsList = [\r\n    {\r\n        name: 'Metamon',\r\n        id: 13,\r\n        img: 'metamon.png'\r\n    },\r\n    {\r\n        name: 'Diamond Yellow',\r\n        id: 16,\r\n        img: 'DiamondYellow.png'\r\n    },\r\n    {\r\n        name: 'Potion',\r\n        id: 15,\r\n        img: 'potion.png'\r\n    },\r\n    {\r\n        name: 'Kiss-up State Land',\r\n        id: 20,\r\n        img: 'kissup.png'\r\n    },\r\n    {\r\n        name: 'Musk USM Land',\r\n        id: 7,\r\n        img: 'mml.png'\r\n    },\r\n]\r\n\r\nconst selectIngameList = [\r\n    {\r\n        name: 'Valhalla',\r\n        type: 6,\r\n        img: 'valhalla.png'\r\n    },\r\n    {\r\n        name: 'Anti Fatigue',\r\n        type: 11,\r\n        img: 'AntiFatiguePotion.png'\r\n    },\r\n    {\r\n        name: 'Purple Potion',\r\n        type: 10,\r\n        img: 'purple-potion.png'\r\n    },\r\n    {\r\n        name: 'Villa Fragments',\r\n        type: 1015,\r\n        img: 'villa.png'\r\n    },\r\n    {\r\n        name: 'Mansion Fragments',\r\n        type: 1016,\r\n        img: 'mansion.png'\r\n    },\r\n    {\r\n        name: 'Castle Fragments',\r\n        type: 1017,\r\n        img: 'castle.png'\r\n    },\r\n    {\r\n        name: 'Donuts',\r\n        type: 1004,\r\n        img: 'Donuts.png'\r\n    },\r\n]\r\n\r\nconst NFTs = () => {\r\n    const [listMetamon, setListMetamon] = useState([]);\r\n    const [listDiamond, setListDiamond] = useState([]);\r\n    const [listEgg, setListEgg] = useState([]);\r\n    const [listPotion, setListPotion] = useState([]);\r\n    const [kissUpLand, setKissUpLand] = useState({});\r\n    const [BigGreen, setBigGreen] = useState({});\r\n    const [MetamonR, setMetamonR] = useState({});\r\n    const [MMLand, setMMLand] = useState({});\r\n    const [selectStats, setSelectStats] = useState(selectStatsList[0].id);\r\n    const [selectedStatsList, setSelectedStatsList] = useState();\r\n    const [tokenPrice, setTokenPrice] = useState(0);\r\n    const [timeUpdated, setTimeUpdated] = useState(\"\")\r\n    const [listStats, setListStats] = useState([]);\r\n    const [sellListValhalla, setSellListValhalla] = useState([]);\r\n    const [sellIngameList, setSellIngameList] = useState([]);\r\n    const [selectTypeIngame, setSelectTypeIngame] = useState(6);\r\n    const refSelect = useRef();\r\n\r\n    const convertDateTime = () => {\r\n        const now = new Date();\r\n        setTimeUpdated(now.toLocaleString())\r\n    }\r\n    const handleChangeSelect = (e) => {\r\n        // console.log(e.target.value)\r\n        setSelectStats(e.target.value)\r\n    }\r\n    const handleChangeSelectSellIngame = (e) => {\r\n        setSelectTypeIngame(e.target.value)\r\n    }\r\n    const { raca, elmon, elcoin, btc } = useSelector(state => state.price)\r\n    const getData = async () => (\r\n        Promise.all([\r\n            getAPI(13, 5).then(res =>\r\n                setListMetamon(res.data.list)\r\n            ),\r\n            getAPI(15, 5).then(res =>\r\n                setListPotion(res.data.list)\r\n            ),\r\n            getAPI(16, 5).then(res =>\r\n                setListDiamond(res.data.list)\r\n            ),\r\n            getAPI(17, 5).then(res =>\r\n                setListEgg(res.data.list)\r\n            ),\r\n            getStats(17).then(res =>\r\n                setListStats(res.data.list)\r\n            ),\r\n\r\n            getAPI(20, 1).then(res => {\r\n                setKissUpLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(23, 1).then(res => {\r\n                setMetamonR(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(7, 1).then(res => {\r\n                setMMLand(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n            getAPI(46, 1).then(res => {\r\n                setBigGreen(res.data.list[0]);\r\n                document.querySelector('.loading')?.classList.toggle('loading');\r\n            }),\r\n        ])\r\n    )\r\n    useEffect(() => {\r\n        setTokenPrice(raca)\r\n    }, [raca])\r\n    useEffect(() => {\r\n        getData();\r\n        convertDateTime();\r\n        const rerenderData = setInterval(() => {\r\n            getData();\r\n            convertDateTime();\r\n        }, 20000)\r\n\r\n        return () => {\r\n            setListMetamon([])\r\n            setListDiamond([])\r\n            setListEgg([])\r\n            setListPotion([])\r\n            setListStats([])\r\n            setKissUpLand({})\r\n            setTokenPrice(0)\r\n            clearInterval(rerenderData);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        // refSelect.current.textContent = 'something'\r\n        getStats(selectStats).then(res => setSelectedStatsList(res.data.list));\r\n        const rerenderStats = setInterval(() => {\r\n            getStats(selectStats).then(res => setSelectedStatsList(res.data.list));\r\n        }, 60000);\r\n        return () => {\r\n            clearInterval(rerenderStats)\r\n            setSelectedStatsList()\r\n        }\r\n    }, [selectStats])\r\n\r\n    useEffect(() => {\r\n        const getChild = refSelect.current.childNodes[0]\r\n\r\n        if (getChild?.childNodes[1]) {\r\n            getChild?.removeChild(getChild?.childNodes[1])\r\n        }\r\n        getSellIngameList(getFormData(selectTypeIngame)).then(res => {\r\n            const data = res.data.data;\r\n            setSellIngameList(data.shopOrderList)\r\n        });\r\n        const rerenderStats = setInterval(() => {\r\n            getSellIngameList(getFormData(selectTypeIngame)).then(res => {\r\n                const data = res.data.data;\r\n                setSellIngameList(data.shopOrderList)\r\n            });\r\n        }, 60000);\r\n        return () => {\r\n            clearInterval(rerenderStats)\r\n            setSellIngameList()\r\n        }\r\n\r\n    }, [selectTypeIngame])\r\n    return (\r\n        <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'row' }}>\r\n                <div className=\"statistical\">\r\n                    <div className=\"priceToken\">\r\n                        <p className='tokenPrice'>RACA: {raca}</p>\r\n                        <p className='tokenPrice'>ELMON: {elmon}</p>\r\n                        <p className='tokenPrice'>ELCOIN: {elcoin}</p>\r\n                        <p className='tokenPrice'>BTC: {numberWithCommas(btc)}</p>\r\n                    </div>\r\n                    <SwapRacaToUSD />\r\n                    <p id='timeUpdated'>{timeUpdated}</p>\r\n                    <div className='pricetable'>\r\n                        <TableContainer className='table-scroll' component={Paper}>\r\n                            <Table className='tablePrice' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">#</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/metamon.png' alt='Metamon' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/MetamonEgg.png' alt='Egg' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img width='50px' height='50px' src='/marketplaceraca/raca/DiamondYellow.png' alt='DiamondYellow' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/raca/potion.png' alt='Potion' />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <FormControl className='select-ingame'>\r\n                                                <Select\r\n                                                    size='small'\r\n                                                    labelId=\"select-ingame\"\r\n                                                    id=\"select-ingame\"\r\n                                                    value={selectTypeIngame}\r\n                                                    onChange={handleChangeSelectSellIngame}\r\n                                                    sx={{ color: '#fff', padding: 0 }}\r\n                                                    className='select-stats'\r\n                                                    ref={refSelect}>\r\n                                                    {selectIngameList && selectIngameList.map((item, index) => (\r\n                                                        <MenuItem key={item.type} value={item.type}>\r\n                                                            <img style={{ objectFit: 'contain' }} width='50px' height='50px' src={`/marketplaceraca/raca/${item.img}`} alt={item.name} />\r\n                                                            {item.name}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {/* <img style={{ objectFit: 'contain' }} width='50px' height='50px' src='/marketplaceraca/valhalla.png' alt='valhalla' /> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {listEgg && listMetamon && listDiamond && listPotion && listEgg.map((child, index) => {\r\n                                        return (\r\n                                            <TableRow key={index + 1}>\r\n                                                <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                                <TableCell align=\"center\">{millify(Math.floor(listMetamon[index]?.fixed_price))} (~{(tokenPrice * listMetamon[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listEgg[index]?.fixed_price))} (~{(tokenPrice * listEgg[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listDiamond[index]?.fixed_price))} (~{(tokenPrice * listDiamond[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{numberWithCommas(Math.floor(listPotion[index]?.fixed_price))} (~{(tokenPrice * listPotion[index]?.fixed_price).toFixed(2)})</TableCell>\r\n                                                <TableCell align=\"center\">{sellIngameList ? `${numberWithCommas(Math.floor(sellIngameList[index]?.amount))} (~${(tokenPrice * sellIngameList[index]?.amount).toFixed(2)})` : 0}</TableCell>\r\n                                            </TableRow>)\r\n                                    })}\r\n\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n                    <Box className=\"stats-session\">\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', padding: '5px 12px' }}>\r\n                            <Typography style={{\r\n                                textTransform: 'uppercase',\r\n                                fontWeight: \"bold\",\r\n                                fontSize: \"larger\",\r\n                            }}>Stats</Typography>\r\n                            <FormControl className='select-stats' style={{ width: '150px' }}>\r\n                                <Select\r\n                                    size='small'\r\n                                    labelId=\"select\"\r\n                                    id=\"filter\"\r\n                                    value={selectStats}\r\n                                    onChange={handleChangeSelect}\r\n                                    sx={{ color: '#fff', }}\r\n                                    className='select-stats'\r\n                                >\r\n                                    {selectStatsList && selectStatsList.map((item, index) => (\r\n                                        <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <Box sx={{ display: 'flex', gap: \"2%\" }}>\r\n                            <Box className='stats'>\r\n                                <img width='50px' height='50px' className='symbols' src='/marketplaceraca/raca/MetamonEgg.png' alt='Egg' />\r\n                                <TableContainer className='table-scroll' component={Paper}>\r\n                                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">#</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Price</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Count</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Time</p>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {listStats && listStats.map((item, index) => {\r\n                                                return (\r\n                                                    <TableRow key={index + 1}>\r\n                                                        <TableCell align=\"center\" component='th' scope=\"row\">{index + 1}</TableCell>\r\n                                                        <TableCell style={{ paddingLeft: '5px' }} align=\"center\">{numberWithCommas(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                                        <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n                                                        <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                                    </TableRow>)\r\n                                            })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                            <Box className='stats'>\r\n                                <img width='50px' height='50px' style={{ objectFit: 'contain' }} className='symbols' src={`/marketplaceraca/raca/${selectStatsList.filter(item => item.id === selectStats)[0].img}`} alt={selectStatsList.filter(item => item.id === selectStats)[0].name} />\r\n                                <TableContainer className='table-scroll' component={Paper}>\r\n                                    <Table className='tablePrice' aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">#</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Price</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>{Number(selectStats) === 13 ? \"Info\" : \"Count\"}</p>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <p>Time</p>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {selectedStatsList && selectedStatsList.map((item, index) => {\r\n                                                return (\r\n                                                    <TableRow key={index + 1}>\r\n                                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                                        <TableCell align=\"center\" style={{ paddingLeft: '1px' }}>{millify(Math.floor(item?.fixed_price / item.count))}</TableCell>\r\n                                                        {Number(selectStats) === 13 ? (\r\n                                                            <TableCell className=\"info-metamon-cell\" padding='none'>\r\n                                                                <Typography sx={{ color: '#fff', fontSize: '12px' }}>{item.level}</Typography>\r\n                                                                <Typography sx={{ color: '#fff', fontSize: '12px' }}>{item.score}</Typography>\r\n                                                            </TableCell>\r\n\r\n                                                        ) : (\r\n                                                            <TableCell align=\"center\">{numberWithCommas(item.count)}</TableCell>\r\n\r\n                                                        )}\r\n                                                        <TableCell align=\"center\">{ConvertDDMM(new Date(item.timestamp * 1000))}</TableCell>\r\n                                                    </TableRow>)\r\n                                            })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                    </Box>\r\n\r\n\r\n                </div>\r\n                <div id=\"xike\" style={{ transform: 'translateY(10%)' }}>\r\n                    <p>Xìke Captain</p>\r\n                    <img alt=\"Xike\" src=\"/marketplaceraca/raca/xike.png\" />\r\n                </div>\r\n            </Box>\r\n            <Box className=\"cards\">\r\n                {MetamonR &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={MetamonR} />\r\n                    </Box>}\r\n\r\n                {BigGreen &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={BigGreen} />\r\n                    </Box>}\r\n\r\n                {MMLand &&\r\n                    <Box className=\"card loading\">\r\n                        <Card nft={MMLand} />\r\n                    </Box>}\r\n\r\n                {kissUpLand &&\r\n                    <Box className=\"card loading\"><Card nft={kissUpLand} />\r\n                    </Box>}\r\n            </Box>\r\n        </Box>\r\n\r\n    );\r\n}\r\nexport default NFTs;","import { useEffect, useState } from 'react';\r\n\r\nimport { MenuItem, FormControl, Select, TextField, Box, Button, Container } from '@mui/material'\r\nimport { handleArrange, handleFilters } from '../../app/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const InputSelect = ({ handleConfirm }) => {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.filters)\r\n    const myStorage = window.localStorage;\r\n    const [arrange, setArrange] = useState(filters.arrange);\r\n    const [minScore, setMinScore] = useState(filters.minScore);\r\n    const [level, setLevel] = useState(filters.level);\r\n\r\n\r\n    const handleLevelChange = (e) => {\r\n        setLevel(e.target.value);\r\n    }\r\n\r\n    const handleMinScoreChange = (e) => {\r\n        setMinScore(e.target.value);\r\n    }\r\n\r\n    const ArrangeChange = (event) => {\r\n        setArrange(event.target.value);\r\n        dispatch(handleArrange(event.target.value));\r\n\r\n    };\r\n    const ConfirmHandle = () => {\r\n        dispatch(handleFilters({ minScore, level }));\r\n        setArrange(0)\r\n        handleConfirm(minScore, level);\r\n        myStorage.setItem('metamon', JSON.stringify({\r\n            score: minScore,\r\n            levelMetamon: level\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='lg xl' className='container' sx={{ margin: '20px 0px 0px 0px', marginTop: '20px', color: '#fff', }}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                alignItems: 'end',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <TextField value={minScore} onChange={handleMinScoreChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"min-score\" label=\"Min score\" variant=\"standard\" type='number' autoComplete=\"new-password\"\r\n                />\r\n                <TextField value={level} onChange={handleLevelChange} sx={{ color: '#fff', width: 100, marginRight: '0.5rem' }} id=\"level\" label=\"Level\" variant=\"standard\" type='number' autoComplete=\"new-password\"\r\n                />\r\n                <Button sx={{ height: '100%', color: '#383838', background: '#fcc33c' }} variant=\"contained\" onClick={ConfirmHandle}>Confirm</Button>\r\n            </Box>\r\n            <Box sx={{\r\n                textAlign: 'center',\r\n                // transform: 'translateX(-85px)'\r\n            }}>\r\n                <FormControl className='select-metamon' style={{ margin: '20px 0' }}>\r\n                    <Select\r\n                        size='small'\r\n                        labelId=\"select\"\r\n                        id=\"filter\"\r\n                        value={arrange}\r\n                        onChange={ArrangeChange}\r\n                        sx={{ color: '#fff', }}\r\n                    >\r\n                        <MenuItem value={0}>Lowest Price</MenuItem>\r\n                        <MenuItem value={1}>Highest Level</MenuItem>\r\n                        <MenuItem value={2}>Highest Score</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n\r\n}","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\r\nimport { InputSelect } from \"./InputSelect\";\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nimport '../../styles/metamon.css'\r\nimport '../../styles/nfts.css'\r\nimport { handleArrange } from \"../../app/actions\";\r\n\r\n\r\nconst getData = (minScore = 315, level = 1, pageNo = 1) => {\r\n    return axios(`https://market-api.radiocaca.com/nft-sales?saleType&category=13&tokenType&tokenId=-1&pageNo=${pageNo}&pageSize=100&sortBy=single_price&order=asc&min_level=${level}&max_level=60&min_score=${minScore}&max_score=`, {\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    });\r\n}\r\n\r\nconst Metamon = () => {\r\n    const { minScore: stateMinScore, level:stateLevel, arrange } = useSelector(state => state.filters)\r\n\r\n    const [listMetamon, setListMetamon] = useState([])\r\n    const [listShow, setListShow] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const dispatch = useDispatch();\r\n    const { raca } = useSelector(state => state.price);\r\n\r\n    const getListMetamon = async (minScore = stateMinScore, level = stateLevel) => {\r\n        setLoading(true);\r\n        await getData(minScore, level, 1).then(async (res) => {\r\n            const data = res.data;\r\n            let listData = res.data.list\r\n            for (let i = 1; i <= Math.floor(data.total / 100); i++) {\r\n                const list = await getData(minScore, level, i + 1).then(res => res.data.list);\r\n                listData = listData.concat(list)\r\n                // console.log(listData)\r\n            }\r\n            setListMetamon(listData)\r\n        });\r\n        setLoading(false);\r\n\r\n    }\r\n    const handleListMetamon = (minScore, level) => {\r\n        // console.log(minScore, level)\r\n        setListMetamon([])\r\n        getListMetamon(minScore, level);\r\n        dispatch(handleArrange(0));\r\n    }\r\n    useEffect(() => {\r\n        handleListMetamon();\r\n    }, [])\r\n    useEffect(() => {\r\n        //Get list property\r\n        const sortBy = (filter) => {\r\n            return listMetamon.sort((a, b) => {\r\n                if (filter === 'fixed_price') {\r\n                    return Number(a[filter]) - Number(b[filter])\r\n                } else {\r\n                    return Number(b[filter]) - Number(a[filter])\r\n                }\r\n            });\r\n        }\r\n\r\n        switch (arrange) {\r\n            case 0:\r\n                setListShow(sortBy('fixed_price').slice(0, 10));\r\n                break;\r\n            case 1:\r\n                setListShow(sortBy('level').slice(0, 10));\r\n                break;\r\n            case 2:\r\n                setListShow(sortBy('score').slice(0, 10));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return () => {\r\n            setListShow([])\r\n        }\r\n    }, [listMetamon, arrange]);\r\n\r\n    return (\r\n        <Box sx={{ textAlign: 'left' }}>\r\n            <InputSelect handleConfirm={handleListMetamon} />\r\n            <TableContainer className='table-scroll metamon' component={Paper}>\r\n                <Table className='tablePrice ' aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">#</TableCell>\r\n                            <TableCell align=\"center\">\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                ID\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Score\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                Level\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" sx={{ width: '25%' }}>\r\n                                Price\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {loading && (\r\n                            <TableRow >\r\n                                <TableCell sx={{ borderLeft: '2px solid' }} colSpan={6} align=\"center\">\r\n                                    <CircularProgress />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                        {listShow && listShow.map((metamon, index) => {\r\n                            return (\r\n                                <TableRow key={index + 1}>\r\n                                    <TableCell align=\"center\" component=\"th\" scope=\"row\">{index + 1}</TableCell>\r\n                                    <TableCell id={`metamon-${index + 1}`} align=\"center\" component=\"th\" scope=\"row\" sx={{ position: 'relative' }}>\r\n                                        <img width='50px' height='50px' src={metamon.image_url} alt='Metamon' />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">\r\n                                        <a href={`https://market.radiocaca.com/#/market-place/${metamon.id}`} target='_blank'\r\n                                            style={{ color: '#fff', textDecoration: 'none' }}\r\n                                            rel=\"noreferrer\"\r\n                                        >\r\n                                            {metamon.token_id}</a></TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.score}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{metamon?.level}</TableCell>\r\n                                    <TableCell align=\"center\" component=\"td\" scope=\"row\">{numberWithCommas(metamon.fixed_price)} (~{(raca * metamon.fixed_price).toFixed(2)})</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Metamon;\r\n\r\n","import {\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  handlePower,\r\n  handleSort,\r\n  handleFilterName,\r\n  handleTokenId,\r\n  addRarity,\r\n  removeRarity,\r\n  addAura,\r\n  removeAura,\r\n} from \"../../app/actions\";\r\n\r\nconst InputFilters = () => {\r\n  const { min, max } = useSelector(\r\n    (state) => state.filtersElemon\r\n  );\r\n  const [minPower, setMinPower] = useState(min);\r\n  const [maxPower, setMaxPower] = useState(max);\r\n  const listAura = [...Array(9).keys()];\r\n  const dispatch = useDispatch();\r\n\r\n  const listRarity = [\r\n    {\r\n      rarity: \"B\",\r\n      color: \"#7ebeff\",\r\n      textShadow: \"0 0 6px #4553ff\",\r\n    },\r\n    {\r\n      rarity: \"A\",\r\n      color: \"#83ffcb\",\r\n      textShadow: \"0 0 6px #45ffb0\",\r\n    },\r\n    {\r\n      rarity: \"S\",\r\n      color: \"#ff83fa\",\r\n      textShadow: \"0 0 6px #ff45d4\",\r\n    },\r\n    {\r\n      rarity: \"SS\",\r\n      color: \"#ffe283\",\r\n      textShadow: \"0 0 6px #eaff45\",\r\n    },\r\n    {\r\n      rarity: \"SSS\",\r\n      color: \"#ff8383\",\r\n      textShadow: \"0 0 6px #ff2424\",\r\n    },\r\n  ];\r\n\r\n  const handleMinPower = (event) => {\r\n    setMinPower(event.target.value);\r\n  };\r\n  const handleMaxPower = (event) => {\r\n    setMaxPower(event.target.value);\r\n  };\r\n  const handleSortPrice = (event) => {\r\n    dispatch(handleSort(event.target.value));\r\n  };\r\n  const handleName = (event) => {\r\n    dispatch(handleFilterName(event.target.value));\r\n  };\r\n  const handleSubmit = () => {\r\n    dispatch(handlePower({ minPower, maxPower }));\r\n  };\r\n  const changeTokenId = (e) => {\r\n    dispatch(handleTokenId(e.target?.value));\r\n  };\r\n  const handleRarity = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addRarity(e.target.value));\r\n    } else {\r\n      dispatch(removeRarity(e.target.value));\r\n    }\r\n  };\r\n  const handleAura = (e) => {\r\n    if (e.target.checked) {\r\n      dispatch(addAura(e.target.value));\r\n    } else {\r\n      dispatch(removeAura(e.target.value));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMinPower(min);\r\n  }, [min]);\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filter-content\">\r\n        <div className=\"filter-top\">\r\n          <select onChange={handleSortPrice} className=\"market__select\">\r\n            <option value=\"0\">Lowest price</option>\r\n            <option value=\"1\">Highest price</option>\r\n            <option value=\"2\">Lowest Point</option>\r\n            <option value=\"3\">Highest Point</option>\r\n          </select>\r\n          <select onChange={(e) => handleName(e)} className=\"market__select\">\r\n            <option value=\"0\">Elemon name</option>\r\n            <option value=\"4\">Neikoo</option>\r\n            <option value=\"8\">Skurumi</option>\r\n            <option value=\"9\">RusMoonch</option>\r\n            <option value=\"10\">PoxArchies</option>\r\n            <option value=\"11\">Legolas</option>\r\n            <option value=\"12\">Mykasa</option>\r\n            <option value=\"15\">Hyugar</option>\r\n            <option value=\"16\">Inori</option>\r\n            <option value=\"22\">Kuroo</option>\r\n            <option value=\"17\">Elight</option>\r\n            <option value=\"20\">Finter</option>\r\n            <option value=\"21\">Ties</option>\r\n            <option value=\"26\">Hoorus</option>\r\n            <option value=\"6\">Raizer</option>\r\n            <option value=\"19\">Scary</option>\r\n            <option value=\"13\">Cokoner</option>\r\n          </select>\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <Box className=\"filters_expand\">\r\n              <Box className=\"filter_item\">\r\n                <Typography variant=\"h5\">Rarity</Typography>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className=\"checkbox_item rarity\"\r\n                >\r\n                  {listRarity.length &&\r\n                    listRarity.map((item, index) => (\r\n                      <FormControlLabel\r\n                        onChange={handleRarity}\r\n                        key={index}\r\n                        value={index + 1}\r\n                        control={\r\n                          <Checkbox\r\n                            sx={{\r\n                              color: item.color,\r\n                              \"&.Mui-checked\": {\r\n                                color: item.color,\r\n                              },\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item.rarity}\r\n                        labelPlacement=\"end\"\r\n                        sx={{ color: item.color, textShadow: item.textShadow }}\r\n                      />\r\n                    ))}\r\n                </FormControl>\r\n              </Box>\r\n              <Box className=\"filter_item\">\r\n                <Typography variant=\"h5\">Aura</Typography>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className=\"checkbox_item aura\"\r\n                >\r\n                  {listAura.map((item, index) => (\r\n                    <FormControlLabel\r\n                      key={index}\r\n                      onChange={handleAura}\r\n                      value={item + 1}\r\n                      control={\r\n                        <Checkbox\r\n                          sx={{\r\n                            color: \"#ffe283\",\r\n                            \"&.Mui-checked\": {\r\n                              color: \"#ffe283\",\r\n                            },\r\n                          }}\r\n                        />\r\n                      }\r\n                      label={\r\n                        <img\r\n                          width=\"35px\"\r\n                          alt=\"aura\"\r\n                          src={`https://app.elemon.io/assets/images/aura/quality_${item + 1\r\n                            }.png`}\r\n                        />\r\n                      }\r\n                      labelPlacement=\"end\"\r\n                    />\r\n                  ))}\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <input\r\n            onBlur={changeTokenId}\r\n            className=\"market__input\"\r\n            placeholder=\"Elemon Id\"\r\n            type=\"number\"\r\n          />\r\n\r\n          <Box className=\"filter_power\">\r\n            <TextField\r\n              value={minPower}\r\n              onChange={handleMinPower}\r\n              sx={{ width: 100, marginRight: \"0.5rem\" }}\r\n              id=\"min-power\"\r\n              label=\"Min\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              className=\"input_power min\"\r\n            />\r\n            <TextField\r\n              value={maxPower}\r\n              onChange={handleMaxPower}\r\n              sx={{ width: 100, marginRight: \"0.5rem\" }}\r\n              id=\"max-power\"\r\n              label=\"Max\"\r\n              variant=\"standard\"\r\n              type=\"number\"\r\n              className=\"input_power max\"\r\n            />\r\n            <Button\r\n              sx={{ height: \"100%\", color: \"#383838\", background: \"#fcc33c\" }}\r\n              variant=\"contained\"\r\n              onClick={handleSubmit}\r\n              className=\"btnConfirm_power\"\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputFilters;\r\n","import React from 'react';\r\nimport '../../styles/elemon.css';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\n\r\nconst InfoCard = ({ elemon }) => {\r\n    const rarity = ['B', 'A', 'S', 'SS', 'SSS'];\r\n    const classes = [\r\n        'Normal', 'Fire', 'Water', 'Electric', 'Grass', 'Ice', 'Fighting', 'Poison', 'Ground', 'Flying', 'Psychic', 'Bug', 'Rock', 'Ghost', 'Dragon', 'Dark', 'Steel', 'Fairy'\r\n    ]\r\n    const isOwner = elemon.ownerAddress === '0x10201091597635eC7b8e208306E6aDCC7c167925';\r\n    const URI = 'https://app.elemon.io';\r\n    const bodyPart = [elemon.bodyPart1, elemon.bodyPart2, elemon.bodyPart3, elemon.bodyPart4, elemon.bodyPart5, elemon.bodyPart6];\r\n\r\n    return (\r\n        <div className=\"character-item owner\">\r\n            <div className=\"head\">\r\n                <p className=\"id\">ID: {elemon.tokenId}</p>\r\n                <div className=\"character-type\">\r\n                    <img alt='' img-rarity=\"\" src={`${URI}/assets/images/rarity_${rarity[elemon.rarity - 1]}.png`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"img\">\r\n                    <div className=\"img-left\">\r\n                        <div className=\"icon\">\r\n                            <img alt='' src={`${URI}/assets/images/element/${classes[elemon.class - 1]}.png`} /></div>\r\n                        <p className=\"icon_text\">\r\n                            <span>\r\n                                <img alt='' src={`${URI}/assets/images/purity_${elemon.purity === 0 ? 'Hybrid' : 'Pure'}.png`} style={{ width: '100%' }} />\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <img  alt='' src={`https://statics.elemon.io/avatar/${elemon.baseCardId}/${elemon.baseCardId}_${bodyPart.join('_')}.png`} className=\"main\" />\r\n                    <div className={`img_aura quality_${elemon.quality}`}></div>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <p className=\"price\">\r\n                        <img  src={`${URI}/assets/images/busd_ticker.png`} width=\"40\" alt=\"\" />\r\n                        {elemon.lastPrice / 1000000000000000000} BUSD\r\n                    </p>\r\n                    <div className=\"element\">\r\n                        <div className=\"icon\">\r\n                            <img  src={`${URI}/assets/images/icon-power.png`} alt=\"\" />\r\n\r\n                        </div>\r\n                        <p className=\"element__name\" data-power=\"\">{numberWithCommas(elemon.point)}</p>\r\n                    </div>\r\n                    <a rel=\"noreferrer\" target='_blank' href={`https://app.elemon.io/elemon/${elemon.tokenId}`} className={`box__btn buy ${isOwner ? 'owner' : ''}`} type=\"button\">\r\n                        {isOwner ? 'My Elemon' : \"Info\"}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default InfoCard;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InputFilters from \"./InputFilters\";\r\nimport \"../../styles/elemon.css\";\r\nimport { Box, CircularProgress, Grid } from \"@mui/material\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst getElemonItem = (\r\n  pageNumber = 1,\r\n  pageSize = 20,\r\n  priceMode = 2,\r\n  baseCardId,\r\n  tokenId,\r\n  rarities,\r\n  classes,\r\n  purities\r\n) => {\r\n  return axios\r\n    .get(\r\n      `https://app.elemon.io/market/getElemonItems?pageNumber=${pageNumber}&pageSize=${pageSize}&positionType=2&priceMode=${priceMode}&baseCardId=&tokenId=&rarities=&classes=&purities=`\r\n    )\r\n    .then((res) => res.data, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    });\r\n};\r\nconst getElemonInfo = (listElemon) => {\r\n  const listTokenId = listElemon.map((item) => item.tokenId);\r\n  return axios\r\n    .get(\r\n      `https://app.elemon.io/elemon/GetElemonInfo?tokenId=${listTokenId?.join(\r\n        \",\"\r\n      )}`\r\n    )\r\n    .then((res) => res.data, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    })\r\n    .catch((error) => error);\r\n};\r\n\r\nconst Elemon = () => {\r\n  const [listElemon, setListElemon] = useState([]);\r\n  const [listElemonInfo, setListElemonInfo] = useState([]);\r\n  const [timeUpdated, setTimeUpdated] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [listFilter, setListFilter] = useState([]);\r\n  const { min, max, sort, name, tokenId, aura, rarity } = useSelector(\r\n    (state) => state.filtersElemon\r\n  );\r\n\r\n  const convertDateTime = () => {\r\n    const now = new Date();\r\n    setTimeUpdated(now.toLocaleString());\r\n  };\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getElemonItem(1, 100).then(async (res) => {\r\n        await getElemonItem(1, res.paging.totalCount).then((res) =>\r\n          setListElemon(res.data)\r\n        );\r\n      });\r\n    };\r\n    getData();\r\n    convertDateTime();\r\n\r\n    return () => {\r\n      setListElemon([]);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const getInfo = async () => {\r\n      setLoading(true);\r\n      const size = 250;\r\n      const lengthList = listElemon.length;\r\n      const loop =\r\n        lengthList % size === 0 ? lengthList / size : lengthList / size + 1;\r\n      for (let i = 1; i <= loop; i++) {\r\n        const amount =\r\n          lengthList % size !== 0 && lengthList - i * size < 0\r\n            ? (i - 1) * size + (lengthList % size)\r\n            : i * size;\r\n        await getElemonInfo(listElemon?.slice((i - 1) * size, amount)).then(\r\n          (res) => {\r\n            const listInfo = listElemon\r\n              .slice((i - 1) * size, amount)\r\n              .map((item, index) => {\r\n                return {\r\n                  ...item,\r\n                  point: res?.data[index]?.point,\r\n                };\r\n              });\r\n            setListElemonInfo((pre) => pre.concat(listInfo));\r\n          }\r\n        );\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    getInfo();\r\n    return () => {\r\n      setListElemonInfo([]);\r\n    };\r\n  }, [listElemon]);\r\n  useEffect(() => {\r\n    const filter = listElemonInfo\r\n      .filter((elemon) => {\r\n        if (tokenId) {\r\n          return elemon.tokenId === tokenId;\r\n        } else {\r\n          const checkPower = (power, type) => {\r\n            if (!power) return true;\r\n            return type === 1 ? elemon?.point >= power : elemon?.point <= power;\r\n          };\r\n\r\n          const checkName =\r\n            Number(name) !== 0 ? elemon.baseCardId === Number(name) : true;\r\n          const checkRarity =\r\n            rarity.length !== 0 ? rarity.includes(elemon.rarity) : true;\r\n          const checkAura =\r\n            aura.length !== 0 ? aura.includes(elemon.quality) : true;\r\n          return checkPower(min, 1) && checkPower(max, 2) && checkName && checkRarity && checkAura;\r\n        }\r\n      })\r\n      .sort((a, b) => {\r\n        switch (Number(sort)) {\r\n          case 0:\r\n            return a.lastPrice >= b.lastPrice ? 1 : -1;\r\n          case 1:\r\n            return a.lastPrice <= b.lastPrice ? 1 : -1;\r\n          case 2:\r\n            return a.point >= b.point ? 1 : -1;\r\n          case 3:\r\n            return a.point <= b.point ? 1 : -1;\r\n          default:\r\n            return 0;\r\n        }\r\n      });\r\n\r\n    setListFilter(filter);\r\n    return () => {\r\n      setListFilter([]);\r\n    };\r\n  }, [loading, min, max, sort, name, tokenId, aura, rarity, listElemonInfo]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ textAlign: \"center\" }}>\r\n        <InputFilters />\r\n        <p style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }} className=\"timeUpdate\">{timeUpdated}</p>\r\n        <Grid container spacing={1} sx={{ boxShadow: 'none', justifyContent: 'center' }}>\r\n          {listFilter &&\r\n            listFilter?.slice(0, 100).map((item, index) => (\r\n              <Grid key={index} item xs={6} md={4} lg={2.2} >\r\n                <InfoCard elemon={item} />\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        {loading && <CircularProgress />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Elemon;\r\n","export const contractAddress = '0x769Ba0Cb0D89666F7506194D2cF416Ea0F812e16'\r\nexport const contractABI = [\r\n    {\r\n        \"type\": \"constructor\",\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"string\", \"name\": \"symbol\" },\r\n            { \"type\": \"string\", \"name\": \"name\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"transferFrom\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"from\" },\r\n            { \"type\": \"address\", \"name\": \"to\" },\r\n            { \"type\": \"uint256\", \"name\": \"value\" }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"balanceOf\",\r\n        \"constant\": true,\r\n        \"stateMutability\": \"view\",\r\n        \"payable\": false, \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"owner\" }\r\n        ],\r\n        \"outputs\": [\r\n            { \"type\": \"uint256\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"event\",\r\n        \"anonymous\": false,\r\n        \"name\": \"Transfer\",\r\n        \"inputs\": [\r\n            { \"type\": \"address\", \"name\": \"from\", \"indexed\": true },\r\n            { \"type\": \"address\", \"name\": \"to\", \"indexed\": true },\r\n            { \"type\": \"address\", \"name\": \"value\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"error\",\r\n        \"name\": \"InsufficientBalance\",\r\n        \"inputs\": [\r\n            { \"type\": \"account\", \"name\": \"owner\" },\r\n            { \"type\": \"uint256\", \"name\": \"balance\" }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"addPerson\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"addPeople\",\r\n        \"constant\": false,\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"type\": \"tuple[]\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ],\r\n        \"outputs\": []\r\n    },\r\n    {\r\n        \"type\": \"function\",\r\n        \"name\": \"getPerson\",\r\n        \"constant\": true,\r\n        \"stateMutability\": \"view\",\r\n        \"payable\": false,\r\n        \"inputs\": [\r\n            { \"type\": \"uint256\", \"name\": \"id\" }\r\n        ],\r\n        \"outputs\": [\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\" },\r\n                    { \"type\": \"uint16\", \"name\": \"age\" }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"type\": \"event\",\r\n        \"anonymous\": false,\r\n        \"name\": \"PersonAdded\",\r\n        \"inputs\": [\r\n            { \"type\": \"uint256\", \"name\": \"id\", \"indexed\": true },\r\n            {\r\n                \"type\": \"tuple\",\r\n                \"name\": \"person\",\r\n                \"components\": [\r\n                    { \"type\": \"string\", \"name\": \"name\", \"indexed\": false },\r\n                    { \"type\": \"uint16\", \"name\": \"age\", \"indexed\": false }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];","import { createContext, useEffect, useState } from 'react'\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport Web3 from \"web3\";\r\nimport { ethers } from \"ethers\";\r\nimport { contractABI, contractAddress } from './constants'\r\nexport const AppContext = createContext();\r\n\r\nconst getEthereumProvider = () => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n    const signer = provider.getSigner();\r\n    const transactionContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n    console.log({\r\n        provider, signer, transactionContract\r\n    })\r\n}\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [appStatus, setAppStatus] = useState('loading')\r\n    const [currentAccount, setCurrentAccount] = useState('');\r\n    const provider = new WalletConnectProvider({\r\n        rpc: {\r\n            56: 'https://matic-mainnet.chainstacklabs.com',\r\n            1: \"https://cloudflare-eth.com\",\r\n\r\n        },\r\n        // bridge: 'https://bridge.walletconnect.org',\r\n        qrcodeModalOptions: {\r\n            mobileLinks: [\r\n                \"metamask\",\r\n                \"trust\",\r\n                \"rainbow\",\r\n                \"argent\",\r\n                \"imtoken\",\r\n                \"pillar\",\r\n            ],\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        const checkIfWalletConnected = async () => {\r\n            if (!window?.ethereum && !currentAccount) return setAppStatus('noMetamask')\r\n            try {\r\n                if (currentAccount) {\r\n                    setAppStatus('connected');\r\n                    getEthereumProvider()\r\n\r\n                } else {\r\n                    const addressArray = await window?.ethereum?.request({\r\n                        method: 'eth_accounts',\r\n                    })\r\n\r\n                    if (addressArray?.length > 0) {\r\n                        //connected\r\n                        setAppStatus('connected');\r\n                        setCurrentAccount(addressArray[0]);\r\n\r\n                    } else {\r\n                        // not connected\r\n                        setAppStatus('not-connected');\r\n                        setCurrentAccount();\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                alert(err)\r\n                console.log(err);\r\n                setAppStatus('error')\r\n            }\r\n        }\r\n        checkIfWalletConnected();\r\n        window?.ethereum?.on('accountsChanged', async () => {\r\n            checkIfWalletConnected();\r\n        })\r\n\r\n    }, [currentAccount])\r\n\r\n\r\n    const disconnectWC = async () => {\r\n        await provider.disconnect();\r\n        setAppStatus('not-connected');\r\n        setCurrentAccount();\r\n        window.w3 = undefined;\r\n    }\r\n    const walletConnect = async () => {\r\n        try {\r\n            await provider.enable();\r\n\r\n            //create Web3 instance\r\n            const web3 = new Web3(provider)\r\n            window.w3 = web3\r\n            const accounts = await web3.eth.getAccounts();\r\n            const account = accounts[0];\r\n            setCurrentAccount(account.toLowerCase())\r\n            console.log(account)\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n        }\r\n    }\r\n    const connectToWallet = async () => {\r\n        if (!window.ethereum && !currentAccount) return setAppStatus('noMetamask')\r\n\r\n        try {\r\n            setAppStatus('loading');\r\n\r\n            const addressArray = await window?.ethereum?.request({\r\n                method: 'eth_requestAccounts',\r\n            })\r\n            if (addressArray.length > 0) {\r\n                setAppStatus('connected')\r\n                setCurrentAccount(addressArray[0])\r\n            } else {\r\n                setAppStatus('not-connected')\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setAppStatus('error')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ appStatus, currentAccount, connectToWallet, walletConnect, disconnectWC }}>{children}</AppContext.Provider>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Table } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { numberWithCommas } from '../NFTs/NFTs';\r\nimport '../../styles/market_history.css'\r\n\r\n\r\nconst MarketHistory = () => {\r\n  const { currentAccount } = useContext(AppContext);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [historyList, setHistoryList] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [totalList, setTotalList] = useState([])\r\n  const [totalBuy, setTotalBuy] = useState('');\r\n  const [totalSell, setTotalSell] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getMarketHistory = (pageNo, pageSize) => {\r\n      return axios(`https://market-api.radiocaca.com/users/${currentAccount}/histories?pageNo=${pageNo}&pageSize=${pageSize}`).then(res => res.data)\r\n    }\r\n    const getHistoryData = async () => {\r\n      let pageNo = 1;\r\n      let pageSize = 10;\r\n      const isMD = currentAccount.toLowerCase() === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16';\r\n      if (isMD) {\r\n        getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n          setLength(res.total)\r\n          const listDataMD = await getMarketHistory(1, res.total - 8).then(async (res) => {\r\n            const listDataMD2 = await getMarketHistory(2, res.total - 7).then(res => res.list);\r\n\r\n            return res.list.concat(listDataMD2)\r\n          });\r\n          setHistoryList(listDataMD)\r\n\r\n        })\r\n      } else {\r\n        const listData = await getMarketHistory(pageNo, pageSize).then(async (res) => {\r\n          setLength(res.total);\r\n          return getMarketHistory(pageNo, res.total).then(res => res.list);\r\n        })\r\n        setHistoryList(listData);\r\n      }\r\n\r\n    }\r\n\r\n    if (currentAccount) {\r\n      setLoading(true)\r\n      getHistoryData();\r\n    }\r\n    return () => {\r\n      setHistoryList([])\r\n    }\r\n  }, [currentAccount])\r\n\r\n  useEffect(() => {\r\n\r\n    const listNFT = [];\r\n    const listTotal = [];\r\n    let buy = 0;\r\n    let sell = 0;\r\n    let lengthList = length;\r\n    if (currentAccount === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n      lengthList--;\r\n    }\r\n    if (historyList.length === lengthList && historyList.length !== 0) {\r\n      historyList.forEach(item => {\r\n        if (item.token_name === 'Metamon#363811')\r\n          return;\r\n        if (!listNFT.includes(item.token_name)) {\r\n          listNFT.push(item.token_name)\r\n          listTotal.push({\r\n            token_name: item.token_name,\r\n            totalBuy: item.type === 'Buy' ? item.amount : 0,\r\n            totalSell: item.type === 'Sell' ? item.amount - item.fee : 0,\r\n            countBuy: item.type === 'Buy' ? item.count : 0,\r\n            countSell: item.type === 'Sell' ? item.count : 0,\r\n          })\r\n        } else {\r\n          if (item.type === 'Buy') {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalBuy += item.amount;\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countBuy += item.count;\r\n          }\r\n          else {\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].totalSell += item.amount - item.fee\r\n            listTotal.filter(name => name.token_name === item.token_name)[0].countSell += item.count\r\n          }\r\n        }\r\n        if (item.type === 'Buy') {\r\n          buy += item.amount\r\n        }\r\n        else {\r\n          sell += item.amount - item.fee\r\n        }\r\n      })\r\n      setTotalBuy(buy);\r\n      setTotalSell(sell);\r\n      // console.log(listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0]?.totalSell)\r\n      if (currentAccount === '0x769ba0cb0d89666f7506194d2cf416ea0f812e16') {\r\n        const getItem = listTotal.filter(name => name.token_name === \"Metamon Egg#204900010231\")[0];\r\n        getItem.totalSell = 100000;\r\n        setTotalSell(prev => prev + getItem.totalSell)\r\n      }\r\n\r\n      setTotalList(listTotal.map(item => {\r\n        return {\r\n          ...item,\r\n          profit: item.totalSell - item.totalBuy\r\n        }\r\n      }))\r\n      setLoading(false);\r\n    }\r\n\r\n  }, [historyList,currentAccount])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sales\">\r\n        <TableContainer id=\"sales-section\" component={Paper}>\r\n          <Table sx={{ minWidth: 650, minHeight: 150 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell component='th' align='center'>NFT</TableCell>\r\n                <TableCell component='th' align=\"center\">\r\n                  <div>\r\n                    <p colSpan={2}>Buy</p>\r\n                    <div className='multiRow'>\r\n                      <p>Amount</p>\r\n                      <p>Count</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <div>\r\n                    <p>Sell</p>\r\n                    <div className='multiRow'>\r\n                      <p>Amount</p>\r\n                      <p>Count</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\">Profit</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalList.length !== 0 && totalList.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell component='th'>{item.token_name}</TableCell>\r\n\r\n                  <TableCell>\r\n                    <div className=\"multiRow\">\r\n                      <p>{numberWithCommas(Math.floor(item.totalBuy))}</p>\r\n                      <p>{numberWithCommas(Math.floor(item.countBuy))}</p>\r\n                    </div>\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <div className='multiRow'>\r\n                      <p>{numberWithCommas(Math.floor(item.totalSell))}</p>\r\n                      <p>{numberWithCommas(Math.floor(item.countSell))}</p>\r\n                    </div>\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(item.profit))}</TableCell>\r\n\r\n                </TableRow>\r\n              ))}\r\n              {totalList.length !== 0 && (\r\n                <TableRow >\r\n                  <TableCell component='th'>Total</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalBuy))}</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalSell))}</TableCell>\r\n                  <TableCell align='center'>{numberWithCommas(Math.floor(totalSell - totalBuy))}</TableCell>\r\n                </TableRow>\r\n              )}\r\n              <TableRow >\r\n                <TableCell colSpan={2} align='center' id='loading' style={{ textAlign: 'center' }}>\r\n                  {loading && <CircularProgress color=\"primary\" />}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarketHistory","import { Button } from '@mui/material';\r\nimport React, { useContext } from 'react'\r\nimport { AppContext } from '../context/AppContext'\r\n\r\nconst Metamask = () => {\r\n    const { appStatus, connectToWallet, currentAccount, walletConnect, disconnectWC } = useContext(AppContext);\r\n\r\n\r\n    const app = (status = appStatus) => {\r\n        switch (status) {\r\n            case 'connected':\r\n                return userLoggedIn\r\n\r\n            case 'not-connected':\r\n                return noUserFound\r\n\r\n            case 'noMetamask':\r\n                return noMetamaskFound\r\n\r\n            case 'error':\r\n                return error\r\n\r\n            default:\r\n                return loading\r\n        }\r\n    }\r\n\r\n    const noUserFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px' }} variant=\"contained\" onClick={() => connectToWallet()}>Connect to Wallet</Button>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px', marginTop: '10px' }} variant=\"contained\" onClick={() => walletConnect()}>\r\n                <img alt='' width='30px' style={{ marginRight: '5px' }} src='/marketplaceraca/wallet-connect.svg'></img>\r\n                Wallet Connect</Button>\r\n\r\n        </div>\r\n    )\r\n    const userLoggedIn = (\r\n        <div style={{ margin: '5px 0',lineBreak:'anywhere' }}>{currentAccount}\r\n            {window.w3 && <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '2px 10px' }} variant=\"contained\" onClick={() => disconnectWC()}>\r\n                Log out</Button>}\r\n        </div>\r\n    )\r\n    const noMetamaskFound = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/metamask.png' />\r\n            <p> You must install Metamask, a <br /> virtual Ethereum wallet, in your browser</p>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px', marginTop: '10px' }} variant=\"contained\" onClick={() => walletConnect()}>\r\n                <img alt='' width='30px' style={{ marginRight: '5px' }} src='/marketplaceraca/wallet-connect.svg'></img>\r\n                Wallet Connect</Button>\r\n\r\n        </div>\r\n\r\n    )\r\n    const error = (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            /* width: 25%; */\r\n            alignItems: 'center',\r\n        }}>\r\n            <img alt='' width={`100px`} height='100px' src='/marketplaceraca/error.png' />\r\n            <p>An error occurred. Please try again later or use another browser</p>\r\n            {/* <p>{errLog}</p> */}\r\n        </div>\r\n    )\r\n    const loading = (\r\n        <div> Loading... </div>\r\n    )\r\n    return (\r\n        <div>{app(appStatus)}</div>\r\n    )\r\n}\r\n\r\nexport default Metamask","import React, { useContext, } from 'react'\r\nimport { Box, Button, Typography } from '@mui/material';\r\nimport '../../styles/statwallet.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToken } from '../../app/actions';\r\nimport { addDoc, collection, getDocs, where, updateDoc, doc, query } from 'firebase/firestore';\r\nimport { AppContext } from '../../context/AppContext';\r\nimport axios from 'axios';\r\n\r\nexport const getInfoToken = async (token) => {\r\n    return await axios.get(`https://api.coingecko.com/api/v3/search?query=${token}`)\r\n        .then(res => {\r\n            if (res.data.coins.length !== 0) {\r\n                const coins = res.data.coins;\r\n                // console.log(coins)\r\n                return coins;\r\n            } else {\r\n                return axios.get(`https://api.pancakeswap.info/api/v2/tokens/${token\r\n                    }`).then(res => {\r\n                        const result = res.data.data\r\n                        return result;\r\n                    });\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nconst InfoToken = ({ token, setLoading }) => {\r\n    const { currentAccount } = useContext(AppContext);\r\n    const { listToken } = useSelector(state => state)\r\n    const infoToken = listToken.find(item => {\r\n        return item.tokenName?.toLowerCase() === token.symbol?.toLowerCase()\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n    const db = useSelector(state => state.db);\r\n    const addTokenToDB = async (token) => {\r\n        setLoading(true)\r\n        const q = query(collection(db, \"users\"), where('address', '==', currentAccount));\r\n        const querySnapshot = await getDocs(q);\r\n        if (querySnapshot.empty) {\r\n            await addDoc(collection(db, \"users\"), {\r\n                address: currentAccount.toLowerCase(),\r\n                tokens: [\r\n                    {\r\n                        address: token.address.toLowerCase(),\r\n                        timestamp: Date.now(),\r\n                        id: token.id\r\n                    }\r\n                ]\r\n            }).finally(() => setLoading(false));\r\n        } else {\r\n            querySnapshot.forEach(async (data) => {\r\n                if (!data.data().tokens.includes(token.address?.toLowerCase())) {\r\n                    const docRef = await doc(db, \"users\", data.id);\r\n                    await updateDoc(docRef, {\r\n                        tokens: [\r\n                            ...data.data().tokens,\r\n                            {\r\n                                address: token.address.toLowerCase(),\r\n                                timestamp: Date.now(),\r\n                                id: token.id\r\n                            }\r\n                        ]\r\n                    }).then(() => {\r\n                        console.log(token)\r\n                        dispatch(addToken(\r\n                            {\r\n                                ...token,\r\n                                token: token.address.toLowerCase(),\r\n                                id: token.id\r\n                            }))\r\n                    }).finally(() => setLoading(false));\r\n                } else {\r\n                    alert('Token is exist!')\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleAddUserDb = () => {\r\n        setLoading(true)\r\n        if (currentAccount) {\r\n            if (!token.address) {\r\n                axios.get(`https://api.coingecko.com/api/v3/coins/${token.id}`).then(res => {\r\n                    const data = res.data;\r\n                    const address = data.platforms['binance-smart-chain']\r\n                    if (address) {\r\n                        getInfoToken(address).then((async (res) => {\r\n                            if (res) {\r\n                                console.log(token.id)\r\n                                addTokenToDB({ ...res, address: address, id: token.id ?? '' })\r\n                            }\r\n                        }))\r\n                    }\r\n                }).finally(() => setLoading(false))\r\n            } else {\r\n                getInfoToken(token.address).then((async (res) => {\r\n                    if (res) {\r\n                        addTokenToDB({\r\n                            ...res, address: token.address, id: res.id ?? ''\r\n                        })\r\n                    }\r\n                })).finally(() => setLoading(false))\r\n            }\r\n        } else {\r\n            alert('No user')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\r\n            <Box sx={{ display: 'flex', width: '80%', gap: '5px', alignItems: 'center' }}>\r\n                <img alt='' width={'25px'} src={token.thumb ? token.large : '/marketplaceraca/help_outline.svg'} />\r\n                <Typography variant=\"h6\">{token.symbol}</Typography>\r\n                <Typography variant=\"h7\">{token.name}</Typography>\r\n            </Box>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(31, 199, 212)', padding: '5px 10px', width: '30%', borderRadius: 15 }} variant=\"contained\" onClick={() => handleAddUserDb()} disabled={infoToken ? true : false}>Import</Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default InfoToken","import React from 'react'\r\nimport '../../styles/statwallet.css'\r\nimport { Box, Modal } from '@mui/material';\r\n\r\nconst ModalUI = ({ isOpen, setOpen, children, onClose }) => {\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        onClose();\r\n    }\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '25%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -22%)',\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #00000087',\r\n        boxShadow: 24,\r\n        borderRadius: 4,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\">\r\n            <Box sx={style} id='modalUI'>\r\n                {children}\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalUI","import { CircularProgress, Box } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <Box sx={{ mt: 2, justifyContent: 'center', display: 'flex' }}>\r\n            <CircularProgress color=\"primary\" />\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useEffect, useState } from 'react'\r\nimport { Box, Typography, TextField, Button } from '@mui/material';\r\nimport InfoToken, { getInfoToken } from './InfoToken';\r\nimport ModalUI from './ModalUI';\r\nimport Loading from '../Loading'\r\nconst ImportTokenModal = () => {\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [tokenInput, setTokenInput] = useState('');\r\n    const [tokenQuery, setTokenQuery] = useState();\r\n    const [invalidToken, setInvalidToken] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const handleChangeInput = (e) => {\r\n        setTokenInput(e.target.value.toLowerCase());\r\n    }\r\n    const handleOpen = () => {\r\n        setIsOpenModal(prev => !prev);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setTokenInput('');\r\n        setTokenQuery();\r\n    }\r\n    useEffect(() => {\r\n        const bounceInput = setTimeout(() => {\r\n            if (tokenInput !== '') {\r\n                getInfoToken(tokenInput).then(res => {\r\n                    if (res.length !== 0 && res.length !== undefined) {\r\n                        setInvalidToken(false)\r\n                        setTokenQuery([...res])\r\n                        // console.log(res?.length)\r\n                    } else {\r\n                        setInvalidToken(false)\r\n                        setTokenQuery([{\r\n                            ...res,\r\n                            address: tokenInput\r\n                        }])\r\n                    }\r\n                }).catch(err => {\r\n                    setInvalidToken(false)\r\n                }).finally(() => setLoading(false));\r\n            } else {\r\n                setInvalidToken(false)\r\n                setLoading(false)\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            setTokenQuery()\r\n            setLoading(true)\r\n            clearTimeout(bounceInput)\r\n        }\r\n    }, [tokenInput])\r\n    return (\r\n        <React.StrictMode>\r\n            <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)' }} variant=\"contained\" onClick={handleOpen}>Import</Button>\r\n            <ModalUI isOpen={isOpenModal} setOpen={setIsOpenModal} onClose={handleClose}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" align='center' component=\"h2\">\r\n                    Import Token\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\r\n                    <TextField value={tokenInput} autoFocus onChange={(e) => handleChangeInput(e)} label=\"Token\" variant=\"outlined\" className='input-token' sx={{ mt: 2 }} />\r\n                    {tokenQuery && <Box sx={{ mt: 2, maxHeight: '200px', overflowY: 'auto', overflowX: 'hidden' }} className=\"list-token-query\">\r\n                        {tokenQuery.map((infoToken, index) => (\r\n                            <InfoToken key={index} token={infoToken} setLoading={setLoading} />)\r\n                        )}\r\n                    </Box>}\r\n                    {invalidToken && (\r\n                        <Typography variant=\"h6\" color=\"#d42d31\">Enter valid token address </Typography>\r\n                    )}\r\n                </Box>\r\n                {loading && (\r\n                    <Loading />\r\n                )}\r\n            </ModalUI>\r\n        </React.StrictMode>\r\n\r\n    )\r\n}\r\n\r\nexport default ImportTokenModal","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, TableSortLabel } from '@mui/material'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport millify from 'millify'\r\nimport React, { useState } from 'react'\r\nimport ModalUI from './ModalUI'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (orderBy === 'value') {\r\n\r\n    }\r\n    switch (orderBy) {\r\n        case 'value':\r\n            a[orderBy] = a.price * a.amount;\r\n            b[orderBy] = b.price * b.amount;\r\n            break;\r\n        case 'date':\r\n            if (new Date(b[orderBy]) < new Date(b[orderBy])) {\r\n                return -1;\r\n            }\r\n            return 1\r\n            // console.log(new Date(a[orderBy])> new Date(b[orderBy]))\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'date',\r\n        label: 'Date',\r\n    },\r\n    {\r\n        id: 'amount',\r\n        label: 'Amount',\r\n    },\r\n    {\r\n        id: 'price',\r\n        label: 'Price',\r\n    },\r\n    {\r\n        id: 'status',\r\n        label: 'Status',\r\n    },\r\n    {\r\n        id: 'value',\r\n        label: 'Value',\r\n    },\r\n]\r\nfunction EnhancedTableHead(props) {\r\n    const { order, orderBy, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            className='sort-icon'\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                            sx={{ margin: 0 }}\r\n                        >\r\n                            {headCell.label}\r\n\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n\r\n};\r\nconst TransactionsModal = ({ infoTransactions, setInfoTransactions }) => {\r\n    const [isOpen, setOpen] = useState(true)\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('date');\r\n    const { tokenName, listTransactions } = infoTransactions;\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    return (\r\n        <ModalUI isOpen={isOpen} setOpen={setOpen} onClose={setInfoTransactions}>\r\n            <Typography align='center'>{tokenName}'s Transactions</Typography>\r\n            <TableContainer id='table_transactions'>\r\n                <Table stickyHeader>\r\n                    <EnhancedTableHead\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(listTransactions, getComparator(order, orderBy))\r\n                            .map((row, index) => {\r\n                                return (\r\n                                    <TableRow key={index} >\r\n                                        <TableCell align='center'>{row.date}</TableCell>\r\n                                        <TableCell align='center'>{millify(row.amount, {\r\n                                            precision: 2,\r\n                                            decimalSeparator: \",\"\r\n                                        })}</TableCell>\r\n                                        <TableCell align='center'>{millify(row.price, {\r\n                                            precision: 5,\r\n                                            decimalSeparator: \",\"\r\n                                        })}</TableCell>\r\n                                        <TableCell align='center'>{row.status.toUpperCase()}</TableCell>\r\n\r\n                                        <TableCell align='center'>{millify(row.price * row.amount, {\r\n                                            precision: 2,\r\n                                            decimalSeparator: \",\"\r\n                                        })} $</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n        </ModalUI>\r\n    )\r\n}\r\n\r\nexport default TransactionsModal","import React, { useContext, useEffect, useState } from 'react'\r\nimport Web3 from 'web3'\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Table, Button } from '@mui/material';\r\nimport { AppContext } from '../../context/AppContext'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//FireBase\r\nimport { collection, query, getDocs, where, updateDoc, doc } from \"firebase/firestore\"\r\nimport { addToken, clearListToken, removeToken } from '../../app/actions';\r\nimport { getInfoToken } from './InfoToken'\r\nimport millify from 'millify';\r\nimport ImportTokenModal from './ImportTokenModal';\r\nimport TransactionsModal from './TransactionsModal';\r\n\r\nconst StatWallet = () => {\r\n  const { currentAccount } = useContext(AppContext)\r\n  const [loading, setLoading] = useState(true);\r\n  const [listTransactions, setListTransactions] = useState({})\r\n  const [infoTransactions, setInfoTransactions] = useState();\r\n  const listToken = useSelector(state => state.listToken)\r\n  const prevLength = useSelector(state => state.prevLength)\r\n  const rpcUrl = 'https://bsc-dataseed1.binance.org:443'\r\n  const web3 = new Web3(rpcUrl);\r\n  const [listBalance, setListBalance] = useState([]);\r\n  const db = useSelector(state => state.db);\r\n  const dispatch = useDispatch();\r\n\r\n  const getTransaction = ({ tokenName, address, id }) => {\r\n    if (tokenName !== 'BNB') {\r\n      axios.get(`https://api.bscscan.com/api?module=account&action=tokentx&contractaddress=${address}&address=${currentAccount}&page=1&offset=10000&startblock=0&endblock=999999999&sort=asc&apikey=RWBIX4SRF8ZCSSDVHIM8YGSK5V65J9UNNN`).then(async (res) => {\r\n        const data = res.data.result;\r\n        let totalDeposit = 0;\r\n        let totalDepositPrice = 0;\r\n        let totalWithdraw = 0;\r\n        let totalWithdrawPrice = 0;\r\n        let startTime = data[0].timeStamp - 86400;\r\n        let endTime = data[data.length - 1].timeStamp;\r\n        const listTransactionsTemp = {};\r\n\r\n        listTransactionsTemp[tokenName] = []\r\n        let hashmapPrice;\r\n        if (id) {\r\n          hashmapPrice = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`).then(res => {\r\n            const hashmap = {};\r\n            const data = res.data.prices;\r\n            data.forEach((price) => {\r\n              const date = new Date(price[0]).toLocaleDateString()\r\n              hashmap[date] = price[1]\r\n            })\r\n            return hashmap;\r\n          }).catch((err) => console.log(err))\r\n        }\r\n        data?.forEach(transaction => {\r\n          const value = Number(Web3.utils.fromWei(transaction.value, 'ether'))\r\n          let getDateTransaction = new Date(transaction.timeStamp * 1000).toLocaleDateString();\r\n          const infoTransaction = {\r\n            amount:value,\r\n            date: getDateTransaction,\r\n            status: transaction.from === currentAccount ? 'out' : 'in',\r\n            \r\n          }\r\n          if (id) {\r\n            let index = 1;\r\n            while (hashmapPrice[getDateTransaction] === undefined && index <= 10) {\r\n              getDateTransaction = new Date((transaction.timeStamp - 0 + 86400) * 1000).toLocaleDateString()\r\n              index++;\r\n            }\r\n          }\r\n\r\n          infoTransaction.price = hashmapPrice ? hashmapPrice[getDateTransaction] : 0;\r\n          listTransactionsTemp[tokenName].push(infoTransaction)\r\n          if (transaction.from === currentAccount) {\r\n            totalWithdraw += value;\r\n            if (id)\r\n              totalWithdrawPrice += value * hashmapPrice[getDateTransaction];\r\n          } else {\r\n            totalDeposit += Number(Web3.utils.fromWei(transaction.value, 'ether'));\r\n            if (id)\r\n              totalDepositPrice += value * hashmapPrice[getDateTransaction];\r\n          }\r\n        })\r\n        setListTransactions(prev => {\r\n          return {\r\n            ...prev,\r\n            ...listTransactionsTemp\r\n          }\r\n        })\r\n        const balance = Number(totalDeposit.toFixed(4) - totalWithdraw.toFixed(4));\r\n\r\n        setListBalance(prev => {\r\n          return {\r\n            ...prev,\r\n            [tokenName]: {\r\n              totalWithdraw: totalWithdraw <= 0 ? totalWithdraw : Number(totalWithdraw).toFixed(4),\r\n              totalDeposit: totalDeposit <= 0 ? totalDeposit : Number(totalDeposit).toFixed(4),\r\n              balance: balance <= 0 ? Math.floor(balance) : balance.toFixed(4),\r\n              totalWithdrawPrice,\r\n              totalDepositPrice,\r\n            }\r\n          }\r\n        })\r\n\r\n      }).catch(err => {\r\n        console.log(err)\r\n      }).finally(() => setLoading(false))\r\n    }\r\n  }\r\n\r\n  const deleteToken = async (e) => {\r\n    let token;\r\n    if (e.target.parentNode.dataset.token) {\r\n      token = e.target.parentNode.dataset.token\r\n    } else {\r\n      token = e.target.dataset.token\r\n    }\r\n    const q = query(collection(db, 'users'), where('address', '==', currentAccount));\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach(async (docItem) => {\r\n      if (docItem.exists()) {\r\n        const result = docItem.data().tokens;\r\n        const listResult = result.filter(item => item.address !== token);\r\n        const docRef = await doc(db, \"users\", docItem.id);\r\n        await updateDoc(docRef, {\r\n          tokens: [\r\n            ...listResult\r\n          ]\r\n        }).then((res) => {\r\n          dispatch(removeToken(token));\r\n          setLoading(false)\r\n        }).finally(() => setLoading(false))\r\n      }\r\n    })\r\n  }\r\n  const showDetailTransaction = (e) => {\r\n    const tokenName = e.target.parentNode.dataset.name\r\n    setInfoTransactions({\r\n      tokenName,\r\n      listTransactions: [\r\n        ...listTransactions[tokenName]\r\n      ]\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(clearListToken());\r\n    if (currentAccount) {\r\n      const getDataFireBase = async () => {\r\n        const q = query(collection(db, \"users\"), where('address', '==', currentAccount));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists()) {\r\n            // dispatch(initTokens(doc.data().tokens))\r\n            const listTokens = doc.data().tokens;\r\n            if (listTokens.length !== 0) {\r\n              let limit = listTokens.length >= 4 ? 4 : listTokens.length;\r\n              let end = limit;\r\n              let start = end - limit;\r\n              // let flag = limit;\r\n              const loop = setInterval(() => {\r\n                for (let i = start; i < end; i++) {\r\n                  setLoading(true)\r\n                  getInfoToken(listTokens[i]?.address).then(async (res) => {\r\n                    const token = listTokens[i].address;\r\n                    dispatch(addToken({\r\n                      ...res,\r\n                      token,\r\n                      id: listTokens[i].id\r\n                    }))\r\n                  })\r\n                }\r\n                if (end === listToken.length) {\r\n                  clearInterval(loop)\r\n                }\r\n                start = end;\r\n                if (end + limit > listTokens.length) {\r\n                  end = listTokens.length;\r\n                } else {\r\n                  end += limit\r\n                }\r\n              }, 2000)\r\n              setLoading(false)\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      web3.eth.getBalance(currentAccount).then(res => {\r\n        const balanceFromWei = Web3.utils.fromWei(res, 'ether')\r\n        setListBalance(prev => {\r\n          return {\r\n            ...prev,\r\n            'BNB': {\r\n              balance: balanceFromWei <= 0 ? Math.abs(Number(balanceFromWei)) : Number(balanceFromWei).toFixed(5)\r\n            }\r\n          }\r\n        })\r\n      }).finally(() => setLoading(false));\r\n      if (listToken)\r\n        getDataFireBase();\r\n    }\r\n    return () => {\r\n      setListBalance([]);\r\n      setLoading(true)\r\n    }\r\n  }, [currentAccount])\r\n  useEffect(() => {\r\n    if (prevLength <= listToken.length && listToken.length !== 0) {\r\n      const length = listToken.length;\r\n      getTransaction(listToken[length - 1]);\r\n    }\r\n    return () => {\r\n      setLoading(true)\r\n    }\r\n  }, [listToken])\r\n  return (\r\n    <div className=\"PortfolioWallet\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <TableContainer sx={{ maxWidth: '650px' }} id=\"PortfolioWallet-section\" component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell component='th' align='center'>Token Name</TableCell>\r\n              <TableCell align=\"center\">Deposit</TableCell>\r\n              <TableCell align=\"center\">Withdraw</TableCell>\r\n              <TableCell align=\"center\">Balance</TableCell>\r\n              <TableCell align=\"center\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {listBalance && listToken && (listToken.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component='th' data-name={item.tokenName}>{item.tokenName} {listTransactions[item.tokenName] ? (<Button className='button-detail' sx={{\r\n                  fontSize: \"12px\",\r\n                  padding: 0,\r\n                  justifyContent: \"center\",\r\n                }} onClick={(e) => showDetailTransaction(e)}>Details</Button>) : ''} </TableCell>\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.totalDeposit) ? millify(listBalance[item.tokenName]?.totalDeposit, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0} (~{listBalance[item.tokenName]?.totalDepositPrice ? millify(listBalance[item.tokenName]?.totalDepositPrice, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0})</TableCell>\r\n\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.totalWithdraw) ? millify(listBalance[item.tokenName]?.totalWithdraw, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0} (~{listBalance[item.tokenName]?.totalWithdrawPrice ? millify(listBalance[item.tokenName]?.totalWithdrawPrice, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : 0})</TableCell>\r\n\r\n                <TableCell align='center'>{(listBalance[item.tokenName]?.balance) && item.tokenName !== \"BNB\" ? millify(listBalance[item.tokenName]?.balance, {\r\n                  precision: 2,\r\n                  decimalSeparator: \",\"\r\n                }) : (listBalance[item.tokenName]?.balance)}</TableCell>\r\n                <TableCell sx={{ padding: 0, width: '20px' }} align='center'>\r\n                  {index !== 0 && (\r\n                    <Button sx={{ minWidth: '20px', padding: '0px' }} data-token={item.address} onClick={(e) => deleteToken(e)}><img src='/marketplaceraca/delete_outline.svg' alt='' /></Button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            )))}\r\n            <TableRow >\r\n              <TableCell colSpan={5} align='center' style={{ textAlign: 'center', padding: '10px 0' }}>\r\n                <ImportTokenModal />\r\n              </TableCell>\r\n            </TableRow>\r\n            {loading && (\r\n              <TableRow >\r\n                <TableCell colSpan={5} align='center' style={{ textAlign: 'center' }}>\r\n                  <CircularProgress color=\"primary\" />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {infoTransactions && (\r\n        <TransactionsModal infoTransactions={infoTransactions} setInfoTransactions={setInfoTransactions}>\r\n\r\n        </TransactionsModal>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default StatWallet","\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDMPGSZM9TbhHyO_dnV5yXanp-XsDnCT9A\",\r\n    authDomain: \"portfolio-mind.firebaseapp.com\",\r\n    projectId: \"portfolio-mind\",\r\n    storageBucket: \"portfolio-mind.appspot.com\",\r\n    messagingSenderId: \"993307046762\",\r\n    appId: \"1:993307046762:web:a00d4f8dd7756c6d8a6b13\"\r\n};\r\nexport default firebaseConfig","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\n\r\nimport MarketHistory from './MarketHistory';\r\nimport Metamask from '../Metamask';\r\nimport StatWallet from './StatWallet';\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { AppContext } from '../../context/AppContext';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from '../../config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { initApp } from '../../app/actions';\r\nimport { getFirestore } from \"firebase/firestore\"\r\nconst Portfolio = () => {\r\n    const app = initializeApp(firebaseConfig);\r\n    const db = getFirestore(app)\r\n    const dispatch = useDispatch()\r\n    const { currentAccount } = useContext(AppContext);\r\n    const [isVisible, setIsVisible] = useState(true);\r\n    const transition = useTransition(isVisible, {\r\n        from: { x: -500, y: 10, opacity: 0 },\r\n        enter: { x: 0, y: 0, opacity: 1, display: 'block' },\r\n        leave: { x: 500, y: 10, opacity: 0, display: 'none' }\r\n    })\r\n    useEffect(() => {\r\n        dispatch(initApp(db));\r\n    }, [db])\r\n    const handleSwitch = () => {\r\n        setIsVisible(state => !state)\r\n    }\r\n    return (\r\n        <div className=\"portfolio\">\r\n            <Metamask />\r\n            {currentAccount && (\r\n                <React.StrictMode>\r\n                    <Button sx={{ height: '100%', color: '#fff', background: 'rgb(253 186 28 / 92%)', padding: '5px 10px',marginBottom:'10px' }} variant=\"contained\" onClick={handleSwitch}>{isVisible ? \"Stat Raca\" : \"Portfolio\"}</Button>\r\n                    {transition((style, item) =>\r\n                        item ? <animated.div style={style}>\r\n                            <StatWallet />\r\n                        </animated.div> : <animated.div style={style}>\r\n                            <MarketHistory />\r\n                        </animated.div>\r\n                    )}\r\n                </React.StrictMode>\r\n            )}\r\n\r\n            {/* {currentAccount && <MarketHistory />}\r\n            {currentAccount && <StatWallet />} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import { useState } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from './TabPanel';\r\nimport NFTs from './NFTs/NFTs';\r\nimport Metamon from './Metamon/Metamon'\r\nimport Elemon from './Elemon/Elemon'\r\nimport '../App.css'\r\nimport Portfolio from './Portfolio/Portfolio';\r\nimport { Typography } from '@mui/material';\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nconst TabInfo = (props) => {\r\n    const { label, style, ...others } = props\r\n    return (\r\n        <Box className='tab-info'>\r\n            <img {...others} />\r\n            <Typography style={style} sx={{ fontSize: '16px', fontWeight: '600' }}>{label}</Typography>\r\n        </Box>\r\n    )\r\n}\r\nconst HeaderTabs = (props) => {\r\n    const myStorage = window.localStorage;\r\n    const getTab = myStorage.getItem('tab') === undefined ? 0 : myStorage.getItem('tab');\r\n    const [value, setValue] = useState(Number(getTab));\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        myStorage.setItem('tab', newValue);\r\n\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Box id=\"tabs\" sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Tabs id=\"tabs-bar\" value={value} sx={{ color: '#ffffff', width: '600px' }} onChange={handleChange} centered>\r\n                    <Tab className=\"tab\" label={<TabInfo style={{ transform: 'translateY(9px)' }} label='RACA' alt='raca' width='20px' src='/marketplaceraca/favicon.svg' />} {...a11yProps(0)} />\r\n                    <Tab className=\"tab\" label={<TabInfo label='METAMON' alt='metamon' width='40px' src='/marketplaceraca/raca/metamon-SR.png' />} {...a11yProps(1)} />\r\n                    <Tab className=\"tab\" label={<TabInfo style={{ transform: 'translateY(5px)' }} label='ElEMON' alt='elemon' width='30px' src='/marketplaceraca/elemon-logo.png' />} {...a11yProps(2)} />\r\n                    <Tab className=\"tab\" label={<TabInfo style={{ transform: 'translateY(5px)' }} label='STATISTICS' alt='sales' width='30px' src='/marketplaceraca/metamask.png' />} {...a11yProps(3)} />\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n                <NFTs />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Metamon />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Elemon />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n                <Portfolio />\r\n            </TabPanel>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HeaderTabs;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './App.css';\r\nimport { updatePriceAuto } from './app/actions';\r\nimport HeaderTabs from './components/Tabs';\r\nimport axios from \"axios\"\r\nimport { AppProvider } from './context/AppContext';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    const getPrice = async () => {\r\n      const { elmon, raca, btc } = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=radio-caca,elemon,bitcoin&vs_currencies=usd').then(res => {\r\n        return {\r\n          raca: res.data['radio-caca'].usd,\r\n          elmon: res.data['elemon'].usd,\r\n          btc: res.data['bitcoin'].usd,\r\n        }\r\n      });\r\n      const elcoin = await axios.get('https://api.pancakeswap.info/api/v2/tokens/0x092ffbc968203b652b08361adec75e275573f2db').then(res => Number(res.data.data.price).toFixed(8));\r\n      document.title = raca + \" - Marketplace RACA\"\r\n      dispatch(updatePriceAuto({ raca, elmon, elcoin, btc }))\r\n    }\r\n    getPrice()\r\n    const updatePrice = setInterval(async () => {\r\n      getPrice()\r\n    }, 20000)\r\n\r\n    return () => {\r\n      clearInterval(updatePrice)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"App\">\r\n      <AppProvider>\r\n        <HeaderTabs />\r\n      </AppProvider>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const myStorage = window.localStorage;\r\n\r\nconst listToken = [\r\n  {\r\n    tokenName: 'BNB',\r\n    address: '0xB8c77482e45F1F44dE1745F52C74426C631bDD52'\r\n  },\r\n  // {\r\n  //   tokenName: \"BUSD\",\r\n  //   address: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n  // },\r\n  // {\r\n  //   tokenName: \"RACA\",\r\n  //   address: '0x12BB890508c125661E03b09EC06E404bc9289040',\r\n  // },\r\n  // {\r\n  //   tokenName: \"ELMON\",\r\n  //   address: '0xE3233fdb23F1c27aB37Bd66A19a1f1762fCf5f3F',\r\n  // },\r\n  // {\r\n  //   tokenName: \"ELCOIN\",\r\n  //   address: '0x092FFBc968203B652B08361aDec75E275573F2db',\r\n  // }\r\n]\r\nconst initState = {\r\n  filters: {\r\n    minScore:\r\n      myStorage.getItem(\"metamon\") === undefined\r\n        ? 315 : JSON.parse(myStorage.getItem(\"metamon\"))?.score,\r\n    level:\r\n      myStorage.getItem(\"metamon\") === undefined\r\n        ? 20 : JSON.parse(myStorage.getItem(\"metamon\"))?.levelMetamon,\r\n    arrange: 0,\r\n  },\r\n  price: {\r\n    raca: 0,\r\n    elmon: 0,\r\n    elcoin: 0,\r\n    btc: 0,\r\n  },\r\n  filtersElemon: {\r\n    sort: 0,\r\n    name: 0,\r\n    tokenId: \"\",\r\n    rarity: [],\r\n    purity: [],\r\n    aura: [],\r\n    price: \"\",\r\n    min: \"\",\r\n    max: \"\",\r\n  },\r\n  tab: 0,\r\n  currentAccount: '',\r\n  listToken,\r\n  db: {},\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"handleFilters\":\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          minScore: action.payload.minScore,\r\n          level: action.payload.level,\r\n        },\r\n      };\r\n    case \"handleArrange\":\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          arrange: action.payload,\r\n        },\r\n      };\r\n    case \"handlePower\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          min: action.payload.min,\r\n          max: action.payload.max,\r\n        },\r\n      };\r\n    case \"handleSort\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          sort: action.payload,\r\n        },\r\n      };\r\n    case \"handleName\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          name: action.payload,\r\n        },\r\n      };\r\n    case \"handleTokenId\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          tokenId: action.payload,\r\n        },\r\n      };\r\n    case \"updatePrice\":\r\n      return {\r\n        ...state,\r\n        price: action.payload,\r\n      };\r\n    case \"elemon/addRarity\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          rarity: [...state.filtersElemon.rarity, action.payload],\r\n        },\r\n      };\r\n    case \"elemon/removeRarity\":\r\n      const listRarity = [...state.filtersElemon.rarity];\r\n      const positionRarity = listRarity.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          rarity: listRarity\r\n            .slice(0, positionRarity)\r\n            .concat(listRarity.slice(positionRarity + 1)),\r\n        },\r\n      };\r\n    case \"elemon/addAura\":\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          aura: [...state.filtersElemon.aura, action.payload],\r\n        },\r\n      };\r\n    case \"elemon/removeAura\":\r\n      const listAura = state.filtersElemon.aura;\r\n      const positionAura = listAura.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        filtersElemon: {\r\n          ...state.filtersElemon,\r\n          aura: listAura\r\n            .slice(0, positionAura)\r\n            .concat(listAura.slice(positionAura + 1)),\r\n        },\r\n      };\r\n    case 'changeCurrentAccount':\r\n      return {\r\n        ...state,\r\n        currentAccount: action.payload,\r\n      }\r\n    case 'tokens/add':\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          ...state.listToken,\r\n          {\r\n            tokenName: action.payload.symbol,\r\n            address: action.payload.token,\r\n            price: action.payload.price,\r\n            id:action.payload?.id\r\n          },\r\n        ],\r\n        prevLength: state.listToken.length\r\n      }\r\n    case 'tokens/remove':\r\n      const newList = state.listToken.filter(token => token.address !== action.payload);\r\n      return {\r\n        ...state,\r\n        prevLength: state.listToken.length,\r\n        listToken: [\r\n          ...newList\r\n        ]\r\n      }\r\n    case 'initTokens':\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          ...state.listToken,\r\n          ...action.payload\r\n        ]\r\n      }\r\n    case 'clearListToken':\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        listToken: [\r\n          state.listToken[0]\r\n        ]\r\n      }\r\n    case 'initApp':\r\n      return {\r\n        ...state,\r\n        db: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import { createStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}